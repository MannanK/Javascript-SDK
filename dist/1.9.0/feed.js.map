{"version":3,"sources":["../node_modules/browser-pack/_prelude.js","../node_modules/base64-js/index.js","../node_modules/buffer/index.js","../node_modules/ieee754/index.js","../node_modules/js-base64/base64.js","../node_modules/soundmanager2/script/soundmanager2.js","../node_modules/tiny-cookie/lib/index.js","../node_modules/tiny-cookie/lib/util.js","events.js","nolog.js","player-view.js","player.js","session.js","speaker.js","util.js","version.json"],"names":["f","exports","module","define","amd","window","global","self","this","Feed","e","t","n","r","s","o","u","a","require","i","Error","code","l","call","length","1","placeHoldersCount","b64","len","tripletToBase64","num","lookup","encodeChunk","uint8","start","end","tmp","output","push","join","byteLength","toByteArray","placeHolders","arr","Arr","L","revLookup","charCodeAt","fromByteArray","extraBytes","parts","len2","Uint8Array","Array","createBuffer","K_MAX_LENGTH","RangeError","buf","__proto__","Buffer","prototype","arg","encodingOrOffset","allocUnsafe","from","value","TypeError","isArrayBuffer","array","byteOffset","undefined","fromArrayBuffer","string","encoding","isEncoding","actual","write","slice","fromString","obj","isBuffer","checked","copy","isArrayBufferView","numberIsNaN","fromArrayLike","type","isArray","data","fromObject","assertSize","size","toString","loweredCase","utf8ToBytes","base64ToBytes","toLowerCase","slowToString","out","toHex","hexSlice","utf8Slice","ret","Math","min","String","fromCharCode","asciiSlice","latin1Slice","base64","base64Slice","bytes","res","utf16leSlice","swap","b","m","bidirectionalIndexOf","buffer","val","dir","arrayIndexOf","indexOf","lastIndexOf","read","indexSize","readUInt16BE","arrLength","valLength","foundIndex","found","j","hexWrite","offset","Number","remaining","strLen","parsed","parseInt","substr","utf8Write","blitBuffer","asciiWrite","str","byteArray","asciiToBytes","latin1Write","base64Write","ucs2Write","units","c","hi","lo","utf16leToBytes","firstByte","codePoint","bytesPerSequence","secondByte","thirdByte","fourthByte","tempCodePoint","codePoints","MAX_ARGUMENTS_LENGTH","apply","decodeCodePointsArray","checkOffset","ext","checkInt","max","checkIEEE754","writeFloat","littleEndian","noAssert","ieee754","writeDouble","Infinity","leadSurrogate","trim","replace","INVALID_BASE64_RE","base64clean","src","dst","ArrayBuffer","constructor","name","isView","SlowBuffer","alloc","INSPECT_MAX_BYTES","kMaxLength","TYPED_ARRAY_SUPPORT","foo","typedArraySupport","console","error","Symbol","species","Object","defineProperty","configurable","enumerable","writable","poolSize","fill","allocUnsafeSlow","_isBuffer","compare","x","y","concat","list","pos","swap16","swap32","swap64","arguments","equals","inspect","match","target","thisStart","thisEnd","thisCopy","targetCopy","includes","isFinite","toJSON","_arr","newBuf","subarray","readUIntLE","mul","readUIntBE","readUInt8","readUInt16LE","readUInt32LE","readUInt32BE","readIntLE","pow","readIntBE","readInt8","readInt16LE","readInt16BE","readInt32LE","readInt32BE","readFloatLE","readFloatBE","readDoubleLE","readDoubleBE","writeUIntLE","writeUIntBE","writeUInt8","writeUInt16LE","writeUInt16BE","writeUInt32LE","writeUInt32BE","writeIntLE","limit","sub","writeIntBE","writeInt8","writeInt16LE","writeInt16BE","writeInt32LE","writeInt32BE","writeFloatLE","writeFloatBE","writeDoubleLE","writeDoubleBE","targetStart","set","isLE","mLen","nBytes","eLen","eMax","eBias","nBits","d","NaN","rt","abs","isNaN","floor","log","LN2","factory","moment","_Base64","Base64","err","b64chars","b64tab","bin","charAt","cb_utob","cc","re_utob","utob","cb_encode","ccc","padlen","ord","btoa","_encode","encode","urisafe","m0","re_btou","RegExp","cb_btou","cccc","btou","cb_decode","chars","atob","_decode","decode","VERSION","fromBase64","toBase64","encodeURI","noConflict","noEnum","v","extendString","_undefined","SoundManager","smURL","smID","preferFlashCheck","kind","sm2","preferFlash","hasFlash","ignoreFlash","flash","html5_event","oFn","result","_s","_a","id","_wD","h5","setupOptions","url","flashVersion","debugMode","debugFlash","useConsole","consoleOnly","waitForWindowLoad","bgColor","useHighPerformance","flashPollingInterval","html5PollingInterval","flashLoadTimeout","wmode","allowScriptAccess","useFlashBlock","useHTML5Audio","forceUseGlobalHTML5Audio","ignoreMobileRestrictions","html5Test","noSWFCache","idPrefix","defaultOptions","autoLoad","autoPlay","loops","onid3","onerror","onload","whileloading","onplay","onpause","onresume","whileplaying","onposition","onstop","onfinish","multiShot","multiShotEvents","position","pan","playbackRate","stream","to","usePolicyFile","volume","flash9Options","onfailure","isMovieStar","usePeakData","useWaveformData","useEQData","onbufferchange","ondataerror","movieStarOptions","bufferTime","serverURL","onconnect","duration","audioFormats","mp3","required","mp4","related","ogg","opus","wav","flac","movieID","debugID","debugURLParam","versionNumber","version","movieURL","altURL","swfLoaded","enabled","oMC","sounds","soundIDs","muted","didFlashBlock","filePattern","filePatterns","flash8","flash9","features","buffering","peakData","waveformData","eqData","movieStar","sandbox","types","remote","localWithFile","localWithNetwork","localTrusted","description","noRemote","noLocal","html5","usingFlash","html5Only","SMSound","doNothing","setProperties","init","fV","debugTS","_wDS","initComplete","mixin","assign","extraOptions","addOnEvent","processOnEvents","initUserOnload","delayWaitForEI","waitForEI","rebootIntoHTML5","setVersionInfo","handleFocus","strings","initMovie","domContentLoaded","winOnLoad","didDCLoaded","getDocument","createMovie","catchError","setPolling","initDebug","disableObject","failSafely","normalizeMovieURL","flashBlockHandler","getSWFCSS","swfCSS","toggleDebug","loopFix","policyFix","complain","idCheck","startTimer","stopTimer","timerExecute","parseURL","canIgnoreFlash","featureCheck","html5OK","html5CanPlay","html5ErrorCodes","html5Ext","html5Unload","domContentLoadedIE","testHTML5","event","lastGlobalHTML5URL","detectFlash","badSafariFix","html5_events","showSupport","flushMessages","wrapCallback","didSetup","globalHTML5Audio","sm","smc","ua","navigator","userAgent","wl","location","href","doc","document","on_queue","debugOpen","didAppend","appendSuccess","didInit","disabled","windowLoaded","wdCount","debugLevels","oRemoved","oRemovedHTML","waitingForEI","initPending","h5TimerCount","h5IntervalTimer","messages","needsFlash","useGlobalHTML5Audio","idCounter","is_iDevice","isAndroid","isIE","isWebkit","isSafari","isOpera","mobileHTML5","isBadSafari","hasConsole","isFocused","hasFocus","tryInitOnFocus","okToDisable","flashMIME","emptyURL","overHTTP","protocol","http","netStreamMimeTypes","netStreamTypes","netStreamPattern","mimePattern","useAltURL","swfBox","swfDefault","swfError","swfTimedout","swfUnblocked","sm2Debug","highPerf","flashDebug","hasHTML5","Audio","opera","canPlayType","setup","options","noURL","ok","globalHTML5","ignoreMobile","mobileUA","beginDelayedInit","readyState","setTimeout","supported","getMovie","movie_id","createSound","oOptions","_url","make","cs","cs_string","oSound","_setup_html5","_createSound","connected","load","play","destroySound","sID","_bFromSound","oS","stop","_iO","unload","splice","destruct","onPosition","nPosition","oMethod","oScope","clearOnPosition","overloaded","setPlaybackRate","rate","allowOverride","setPosition","nMsecOffset","stopAll","hasOwnProperty","pause","pauseAll","resume","resumeAll","togglePause","setPan","nPan","setVolume","nVol","mute","muteAll","unmute","unmuteAll","toggleMute","getMemoryUse","ram","_getMemoryUse","disable","bNoDisable","remove","canPlayMIME","sMIME","canPlayURL","sURL","canPlayLink","oLink","getSoundById","_suppressDebug","onready","ontimeout","sType","_writeDebug","sText","sTypeOrObject","oItem","createElement","className","appendChild","createTextNode","style","fontWeight","color","insertBefore","firstChild","alert","_debug","reboot","resetEvents","excludeInit","k","innerHTML","parentNode","removeChild","fired","reset","getMoviePercent","PercentLoaded","resetProperties","add_html5_events","remove_html5_events","stop_html5_timer","start_html5_timer","attachOnPosition","detachOnPosition","applyFromTo","lastHTML5State","urlOmitted","onplay_called","onPositionItems","onPositionFired","lastURL","time","instanceOptions","isHTML5","id3","loaded","playState","_called_load","_html5_canplay","autobuffer","preload","_load","fatal","_unload","_bFromSM","_destroySound","_updatePlayState","fN","audioClone","onended","oncanplay","startOK","getAutoPlay","setAutoPlay","paused","instanceCount","_oncanplay","_onfinish","currentTime","add","_start","onplayerror","bAll","originalPosition","_onbufferchange","_resetOnPosition","_onTimer","_stop","_setAutoPlay","normalizedRate","message","position1K","toFixed","_setPosition","_bCallFlash","_pause","bInstanceOnly","_setPan","_bInstanceOnly","_setVolume","hasIO","method","scope","_processOnPosition","item","op","retainPosition","_hasTimer","bytesLoaded","bytesTotal","durationEstimate","buffered","left","right","failures","isBuffering","metadata","bForce","isNew","_get_html5_duration","_whileplaying","_apply_loop","nLoops","loop","sameURL","dURL","decodeURI","oEvt","bCapture","addEventListener","_added_events","removeEventListener","_onload","nSuccess","loadOK","_onerror","errorCode","nIsBuffering","_onsuspend","onsuspend","_onfailure","msg","level","_onwarning","onwarning","io_onfinish","_whileloading","nBytesLoaded","nBytesTotal","nDuration","nBufferLength","bufferLength","oPeakData","oWaveformDataLeft","oWaveformDataRight","oEQData","eqLeft","leftPeak","rightPeak","split","leftEQ","rightEQ","_oncaptiondata","oData","captiondata","oncaptiondata","_onmetadata","oMDProps","oMDData","onmetadata","_onid3","oID3Props","oID3Data","_onconnect","bSuccess","_ondataerror","sError","body","getElementsByTagName","getElementById","oMain","oAdd","o2","o1","callback","oParent","hasParent","bonusOptions","Function","getArgs","oArgs","args","old","pop","element","shift","evt","abort","canplay","ee","canplaythrough","durationchange","ended","loadeddata","_loaded","loadedmetadata","loadstart","playing","progress","progStr","isProgress","ranges","total","ratechange","suspend","stalled","timeupdate","waiting","iO","oAudio","_called_unload","fileExt","mime","aF","cp","canPlay","isOK","support","notReady","notOK","domError","spcWmode","swf404","tryDebug","checkSWF","localFail","waitFocus","waitForever","waitSWF","needFunction","badID","currentObj","waitOnload","docLoaded","onloadOK","secNote","badRemove","shutdown","queue","smError","fbTimeout","fbLoaded","fbHandler","manURL","onURL","badFV","as2loop","noNSLoop","needfl9","mfTimeout","needFlash","gotFocus","policy","setupError","setupUndef","setupLate","sm2Loaded","sstr","sOpt","sPre","sMsg","warn","oProp","Date","getTime","isDebug","bPolling","bHighPerformance","_setPolling","test","oD","oDebug","oTarget","oToggle","bottom","width","height","lineHeight","margin","textAlign","border","cursor","background","zIndex","onclick","title","display","e2","errorLevel","oT","sEventType","sMessage","sm2Debugger","handleEvent","css","p","ignoreInit","status","success","srcQueue","canRetry","nP","hasPlugin","AX","ActiveXObject","plugins","mimeTypes","enabledPlugin","flashNeeded","formats","urlResult","setInterval","clearInterval","_setSandboxType","sandboxType","sb","_externalInterfaceOK","swfVersion","initMsg","param","oEmbed","oMovie","movieHTML","oEl","sClass","remoteURL","localURL","extraClass","isRTL","html","platform","quality","bgcolor","pluginspage","hasPriority","FlashVars","setAttribute","overflow","top","oninitmovie","loadIncomplete","cleanup","tests","_externalInterfaceTest","_disableDebug","detachEvent","attachEvent","soundManager","SM2_DEFER","isEnabled","re","cookie","key","get","decoder","decodeURIComponent","_util","escapeRe","exec","getAll","reKey","cookies","lastIndex","index","encoder","encodeURIComponent","attrs","_typeof","attrsStr","convert","newCookie","opts","expires","domain","getRaw","setRaw","__esModule","removeCookie","setRawCookie","getRawCookie","setCookie","getAllCookies","getCookie","isCookieEnabled","iterator","hasOwn","computeExpires","lastCh","setFullYear","getFullYear","setMonth","getMonth","setDate","getDate","setHours","getHours","setMinutes","getMinutes","setSeconds","getSeconds","toUTCString","_","Events","on","context","eventsApi","_events","ctx","once","off","_callback","retain","ev","events","names","keys","trigger","allEvents","all","triggerEvents","stopListening","listeners","_listeners","deleteListener","_listenerId","eventSplitter","action","rest","a1","a2","a3","each","listenTo","listenToOnce","implementation","uniqueId","Session","PlayerView","Player","getSpeaker","_getSpeaker","formatTime","millis","asSeconds","secondsPart","minutesPart","$","player","alertId","durationId","startedPlayback","$el","_onPlacement","_onPlayStarted","_onPlayPaused","_onPlayResumed","_onPlayCompleted","_onPlayLiked","_onPlayUnliked","_onPlayDisliked","_onPlaysExhausted","_onSkipDenied","_onSuspend","_enableButtonsBasedOnState","displayText","originalDisplayText","renderStatus","bind","_onStatusClick","_onPlayButtonClick","_onPauseButtonClick","_onSkipButtonClick","_onLikeButtonClick","_onDislikeButtonClick","getCurrentState","skip","closest","is","unlike","like","dislike","find","placement","formatPlacement","formatPlay","_setLikeStatus","liked","_enablePositionTracker","playerView","renderPosition","getPosition","getDuration","addClass","removeClass","_disablePositionTracker","renderAlert","audio_file","track","artist","release","elapsed","round","alertText","clearTimeout","toEnable","toDisable","state","maybeCanSkip","attr","removeAttr","supports_html5_storage","localStorage","token","secret","suspended","skipPlayDelay","extend","session","_onPlayActive","initializeSpeaker","Deferred","speaker","supportedFormats","reqFormatList","suppFormatList","reqAndSuppFormatList","intersection","reqAndSuppFormats","setFormats","resolve","setMuted","isMuted","setPlacementId","placementId","setStationId","stationId","setBaseUrl","baseUrl","_onSoundPlay","_onSoundPause","finish","_onSoundFinish","elapse","_onSoundElapse","gain","replaygain_track_gain","station","pre_gain","startPosition","sound","create","activePlay","startReportedToServer","soundCompleted","playStarted","previousPosition","playId","reportPlayStarted","getActivePlay","hasActivePlayStarted","getActivePlacement","withError","soundCompletedWithError","requestInvalidate","reportPlayCompleted","previousCount","currentCount","reportPlayElapsed","defer","destroy","isPaused","isTuned","getStationInformation","stationInformationCallback","tune","then","initializeForMobile","likePlay","unlikePlay","dislikePlay","requestSkip","unsuspend","startPlayback","repeatAfter","delay","cb","util","Cookie","config","addProtocol","maxBitrate","timeOffset","current","pendingRequest","pendingPlay","setCredentials","_retune","setMaxBitrate","_assignCurrentPlay","_getDefaultPlacementInformation","ajax","client_id","clientId","dataType","timeout","_signedAjax","done","_receiveDefaultPlacementInformation","fail","_failedDefaultPlacementInformation","placementInformation","stations","_requestNextPlay","response","fullResponse","parseJSON","responseText","started","_startPlay","seconds","always","_receivePlayCompleted","canSkip","_receiveSkip","_failSkip","_sendInvalidate","_receiveInvalidate","_failInvalidate","retryCount","_receiveStartPlay","can_skip","_failStartPlay","waitingIfEmpty","_getClientId","_receiveNextPlay","_failedNextPlay","max_bitrate","secure","placement_id","station_id","clientPromise","clientDeferred","promise","_requestClientId","_setStoredCid","saveClientId","_getStoredCid","newDelay","saved","clone","path","_deleteStoredCid","removeItem","_sign","request","authorization","headers","Authorization","_ajax","Sound","sm2Sound","fake","outstandingPlays","_nonRepeatTrigger","lastTrigger","gainAdjustedVolume","adjusted","Speaker","swfBase","onReadyPromise","debug","preferred","silence","vol","mobileInitialized","_createSM2Sound","callbacks","_createAndAssignSM2Sound","song","onReady"],"mappings":"CAAA,SAAAA,GAAA,GAAA,iBAAAC,SAAA,oBAAAC,OAAAA,OAAAD,QAAAD,SAAA,GAAA,mBAAAG,QAAAA,OAAAC,IAAAD,UAAAH,OAAA,EAAA,oBAAAK,OAAAA,OAAA,oBAAAC,OAAAA,OAAA,oBAAAC,KAAAA,KAAAC,MAAAC,KAAAT,KAAA,CAAA,WAAA,OAAA,SAAAU,EAAAC,EAAAC,EAAAC,GAAA,SAAAC,EAAAC,EAAAC,GAAA,IAAAJ,EAAAG,GAAA,CAAA,IAAAJ,EAAAI,GAAA,CAAA,IAAAE,EAAA,mBAAAC,SAAAA,QAAA,IAAAF,GAAAC,EAAA,OAAAA,EAAAF,GAAA,GAAA,GAAAI,EAAA,OAAAA,EAAAJ,GAAA,GAAA,IAAAf,EAAA,IAAAoB,MAAA,uBAAAL,EAAA,KAAA,MAAAf,EAAAqB,KAAA,mBAAArB,EAAA,IAAAsB,EAAAV,EAAAG,IAAAd,YAAAU,EAAAI,GAAA,GAAAQ,KAAAD,EAAArB,QAAA,SAAAS,GAAA,IAAAE,EAAAD,EAAAI,GAAA,GAAAL,GAAA,OAAAI,EAAAF,GAAAF,IAAAY,EAAAA,EAAArB,QAAAS,EAAAC,EAAAC,EAAAC,GAAA,OAAAD,EAAAG,GAAAd,QAAA,IAAA,IAAAkB,EAAA,mBAAAD,SAAAA,QAAAH,EAAA,EAAAA,EAAAF,EAAAW,OAAAT,IAAAD,EAAAD,EAAAE,IAAA,OAAAD,EAAA,EAAAW,GAAA,SAAAP,EAAAhB,EAAAD,GCAA,aAmBA,SAAAyB,EAAAC,GACA,IAAAC,EAAAD,EAAAH,OACA,GAAAI,EAAA,EAAA,EACA,MAAA,IAAAR,MAAA,kDAQA,MAAA,MAAAO,EAAAC,EAAA,GAAA,EAAA,MAAAD,EAAAC,EAAA,GAAA,EAAA,EAuCA,SAAAC,EAAAC,GACA,OAAAC,EAAAD,GAAA,GAAA,IAAAC,EAAAD,GAAA,GAAA,IAAAC,EAAAD,GAAA,EAAA,IAAAC,EAAA,GAAAD,GAGA,SAAAE,EAAAC,EAAAC,EAAAC,GAGA,IAAA,IAFAC,EACAC,KACAlB,EAAAe,EAAAf,EAAAgB,EAAAhB,GAAA,EACAiB,GAAAH,EAAAd,IAAA,KAAAc,EAAAd,EAAA,IAAA,GAAAc,EAAAd,EAAA,GACAkB,EAAAC,KAAAT,EAAAO,IAEA,OAAAC,EAAAE,KAAA,IA9EAtC,EAAAuC,WA+BA,SAAAb,GAEA,OAAA,EAAAA,EAAAH,OAAA,EAAAE,EAAAC,IAhCA1B,EAAAwC,YAmCA,SAAAd,GACA,IAAAR,EAAAG,EAAAc,EAAAM,EAAAC,EACAf,EAAAD,EAAAH,OACAkB,EAAAhB,EAAAC,GAEAgB,EAAA,IAAAC,EAAA,EAAAhB,EAAA,EAAAc,GAGApB,EAAAoB,EAAA,EAAAd,EAAA,EAAAA,EAEA,IAAAiB,EAAA,EAEA,IAAA1B,EAAA,EAAAA,EAAAG,EAAAH,GAAA,EACAiB,EAAAU,EAAAnB,EAAAoB,WAAA5B,KAAA,GAAA2B,EAAAnB,EAAAoB,WAAA5B,EAAA,KAAA,GAAA2B,EAAAnB,EAAAoB,WAAA5B,EAAA,KAAA,EAAA2B,EAAAnB,EAAAoB,WAAA5B,EAAA,IACAwB,EAAAE,KAAAT,GAAA,GAAA,IACAO,EAAAE,KAAAT,GAAA,EAAA,IACAO,EAAAE,KAAA,IAAAT,EAYA,OATA,IAAAM,GACAN,EAAAU,EAAAnB,EAAAoB,WAAA5B,KAAA,EAAA2B,EAAAnB,EAAAoB,WAAA5B,EAAA,KAAA,EACAwB,EAAAE,KAAA,IAAAT,GACA,IAAAM,IACAN,EAAAU,EAAAnB,EAAAoB,WAAA5B,KAAA,GAAA2B,EAAAnB,EAAAoB,WAAA5B,EAAA,KAAA,EAAA2B,EAAAnB,EAAAoB,WAAA5B,EAAA,KAAA,EACAwB,EAAAE,KAAAT,GAAA,EAAA,IACAO,EAAAE,KAAA,IAAAT,GAGAO,GA9DA1C,EAAA+C,cA+EA,SAAAf,GASA,IAAA,IARAG,EACAR,EAAAK,EAAAT,OACAyB,EAAArB,EAAA,EACAS,EAAA,GACAa,KAIA/B,EAAA,EAAAgC,EAAAvB,EAAAqB,EAAA9B,EAAAgC,EAAAhC,GAHA,MAIA+B,EAAAZ,KAAAN,EAAAC,EAAAd,EAAAA,EAJA,MAIAgC,EAAAA,EAAAhC,EAJA,QAuBA,OAfA,IAAA8B,GACAb,EAAAH,EAAAL,EAAA,GACAS,GAAAN,EAAAK,GAAA,GACAC,GAAAN,EAAAK,GAAA,EAAA,IACAC,GAAA,MACA,IAAAY,IACAb,GAAAH,EAAAL,EAAA,IAAA,GAAAK,EAAAL,EAAA,GACAS,GAAAN,EAAAK,GAAA,IACAC,GAAAN,EAAAK,GAAA,EAAA,IACAC,GAAAN,EAAAK,GAAA,EAAA,IACAC,GAAA,KAGAa,EAAAZ,KAAAD,GAEAa,EAAAX,KAAA,KArGA,IAAA,IALAR,KACAe,KACAF,EAAA,oBAAAQ,WAAAA,WAAAC,MAEAhC,EAAA,mEACAF,EAAA,EAAAS,EAAAP,EAAAG,OAAAL,EAAAS,IAAAT,EACAY,EAAAZ,GAAAE,EAAAF,GACA2B,EAAAzB,EAAA0B,WAAA5B,IAAAA,EAGA2B,EAAA,IAAAC,WAAA,IAAA,GACAD,EAAA,IAAAC,WAAA,IAAA;;;;;;ACTA,aA+CA,SAAAO,EAAA9B,GACA,GAAAA,EAAA+B,EACA,MAAA,IAAAC,WAAA,8BAGA,IAAAC,EAAA,IAAAL,WAAA5B,GAEA,OADAiC,EAAAC,UAAAC,EAAAC,UACAH,EAaA,SAAAE,EAAAE,EAAAC,EAAAtC,GAEA,GAAA,iBAAAqC,EAAA,CACA,GAAA,iBAAAC,EACA,MAAA,IAAA1C,MACA,qEAGA,OAAA2C,EAAAF,GAEA,OAAAG,EAAAH,EAAAC,EAAAtC,GAgBA,SAAAwC,EAAAC,EAAAH,EAAAtC,GACA,GAAA,iBAAAyC,EACA,MAAA,IAAAC,UAAA,yCAGA,OAAAC,EAAAF,GA+GA,SAAAG,EAAAC,EAAA7C,GACA,GAAA6C,EAAA,GAAAD,EAAA5B,WAAA6B,EACA,MAAA,IAAAb,WAAA,6BAGA,GAAAY,EAAA5B,WAAA6B,GAAA7C,GAAA,GACA,MAAA,IAAAgC,WAAA,6BAGA,IAAAC,EAEAA,OADAa,IAAAD,QAAAC,IAAA9C,EACA,IAAA4B,WAAAgB,QACAE,IAAA9C,EACA,IAAA4B,WAAAgB,EAAAC,GAEA,IAAAjB,WAAAgB,EAAAC,EAAA7C,GAKA,OADAiC,EAAAC,UAAAC,EAAAC,UACAH,EAlIAc,CAAAN,EAAAH,EAAAtC,GAGA,iBAAAyC,EA0EA,SAAAO,EAAAC,GACA,iBAAAA,GAAA,KAAAA,IACAA,EAAA,QAGA,IAAAd,EAAAe,WAAAD,GACA,MAAA,IAAAP,UAAA,8CAGA,IAAA1C,EAAA,EAAAgB,EAAAgC,EAAAC,GACAhB,EAAAH,EAAA9B,GAEAmD,EAAAlB,EAAAmB,MAAAJ,EAAAC,GAEAE,IAAAnD,IAIAiC,EAAAA,EAAAoB,MAAA,EAAAF,IAGA,OAAAlB,EA9FAqB,CAAAb,EAAAH,GAiIA,SAAAiB,GACA,GAAApB,EAAAqB,SAAAD,GAAA,CACA,IAAAnD,EAAA,EAAAqD,EAAAF,EAAAvD,QACAiC,EAAAH,EAAA1B,GAEA,OAAA,IAAA6B,EAAAjC,OACAiC,GAGAsB,EAAAG,KAAAzB,EAAA,EAAA,EAAA7B,GACA6B,GAGA,GAAAsB,EAAA,CACA,GAAAI,EAAAJ,IAAA,WAAAA,EACA,MAAA,iBAAAA,EAAAvD,QAAA4D,EAAAL,EAAAvD,QACA8B,EAAA,GAEA+B,EAAAN,GAGA,GAAA,WAAAA,EAAAO,MAAAjC,MAAAkC,QAAAR,EAAAS,MACA,OAAAH,EAAAN,EAAAS,MAIA,MAAA,IAAAtB,UAAA,sFAxJAuB,CAAAxB,GAoBA,SAAAyB,EAAAC,GACA,GAAA,iBAAAA,EACA,MAAA,IAAAzB,UAAA,oCACA,GAAAyB,EAAA,EACA,MAAA,IAAAnC,WAAA,wCA4BA,SAAAO,EAAA4B,GAEA,OADAD,EAAAC,GACArC,EAAAqC,EAAA,EAAA,EAAA,EAAAV,EAAAU,IAwCA,SAAAN,EAAAjB,GAGA,IAAA,IAFA5C,EAAA4C,EAAA5C,OAAA,EAAA,EAAA,EAAAyD,EAAAb,EAAA5C,QACAiC,EAAAH,EAAA9B,GACAL,EAAA,EAAAA,EAAAK,EAAAL,GAAA,EACAsC,EAAAtC,GAAA,IAAAiD,EAAAjD,GAEA,OAAAsC,EAuDA,SAAAwB,EAAAzD,GAGA,GAAAA,GAAA+B,EACA,MAAA,IAAAC,WAAA,0DACAD,EAAAqC,SAAA,IAAA,UAEA,OAAA,EAAApE,EAsFA,SAAAgB,EAAAgC,EAAAC,GACA,GAAAd,EAAAqB,SAAAR,GACA,OAAAA,EAAAhD,OAEA,GAAA2D,EAAAX,IAAAL,EAAAK,GACA,OAAAA,EAAAhC,WAEA,iBAAAgC,IACAA,EAAA,GAAAA,GAGA,IAAA5C,EAAA4C,EAAAhD,OACA,GAAA,IAAAI,EAAA,OAAA,EAIA,IADA,IAAAiE,GAAA,IAEA,OAAApB,GACA,IAAA,QACA,IAAA,SACA,IAAA,SACA,OAAA7C,EACA,IAAA,OACA,IAAA,QACA,UAAA0C,EACA,OAAAwB,EAAAtB,GAAAhD,OACA,IAAA,OACA,IAAA,QACA,IAAA,UACA,IAAA,WACA,OAAA,EAAAI,EACA,IAAA,MACA,OAAAA,IAAA,EACA,IAAA,SACA,OAAAmE,EAAAvB,GAAAhD,OACA,QACA,GAAAqE,EAAA,OAAAC,EAAAtB,GAAAhD,OACAiD,GAAA,GAAAA,GAAAuB,cACAH,GAAA,GAMA,SAAAI,EAAAxB,EAAAvC,EAAAC,GACA,IAAA0D,GAAA,EAcA,SALAvB,IAAApC,GAAAA,EAAA,KACAA,EAAA,GAIAA,EAAA1B,KAAAgB,OACA,MAAA,GAOA,SAJA8C,IAAAnC,GAAAA,EAAA3B,KAAAgB,UACAW,EAAA3B,KAAAgB,QAGAW,GAAA,EACA,MAAA,GAOA,GAHAA,KAAA,EACAD,KAAA,EAEAC,GAAAD,EACA,MAAA,GAKA,IAFAuC,IAAAA,EAAA,UAGA,OAAAA,GACA,IAAA,MACA,OAiiBA,SAAAhB,EAAAvB,EAAAC,GACA,IAAAP,EAAA6B,EAAAjC,SAEAU,GAAAA,EAAA,KAAAA,EAAA,KACAC,GAAAA,EAAA,GAAAA,EAAAP,KAAAO,EAAAP,GAGA,IAAA,IADAsE,EAAA,GACA/E,EAAAe,EAAAf,EAAAgB,IAAAhB,EACA+E,GAikBA,SAAAtF,GACA,OAAAA,EAAA,GAAA,IAAAA,EAAAgF,SAAA,IACAhF,EAAAgF,SAAA,IAnkBAO,CAAA1C,EAAAtC,IAEA,OAAA+E,EA3iBAE,CAAA5F,KAAA0B,EAAAC,GAEA,IAAA,OACA,IAAA,QACA,OAAAkE,EAAA7F,KAAA0B,EAAAC,GAEA,IAAA,QACA,OAsgBA,SAAAsB,EAAAvB,EAAAC,GACA,IAAAmE,EAAA,GACAnE,EAAAoE,KAAAC,IAAA/C,EAAAjC,OAAAW,GAEA,IAAA,IAAAhB,EAAAe,EAAAf,EAAAgB,IAAAhB,EACAmF,GAAAG,OAAAC,aAAA,IAAAjD,EAAAtC,IAEA,OAAAmF,EA7gBAK,CAAAnG,KAAA0B,EAAAC,GAEA,IAAA,SACA,IAAA,SACA,OA4gBA,SAAAsB,EAAAvB,EAAAC,GACA,IAAAmE,EAAA,GACAnE,EAAAoE,KAAAC,IAAA/C,EAAAjC,OAAAW,GAEA,IAAA,IAAAhB,EAAAe,EAAAf,EAAAgB,IAAAhB,EACAmF,GAAAG,OAAAC,aAAAjD,EAAAtC,IAEA,OAAAmF,EAnhBAM,CAAApG,KAAA0B,EAAAC,GAEA,IAAA,SACA,OAuZA,SAAAsB,EAAAvB,EAAAC,GACA,OAAA,IAAAD,GAAAC,IAAAsB,EAAAjC,OACAqF,EAAA7D,cAAAS,GAEAoD,EAAA7D,cAAAS,EAAAoB,MAAA3C,EAAAC,IA3ZA2E,CAAAtG,KAAA0B,EAAAC,GAEA,IAAA,OACA,IAAA,QACA,IAAA,UACA,IAAA,WACA,OA0hBA,SAAAsB,EAAAvB,EAAAC,GAGA,IAAA,IAFA4E,EAAAtD,EAAAoB,MAAA3C,EAAAC,GACA6E,EAAA,GACA7F,EAAA,EAAAA,EAAA4F,EAAAvF,OAAAL,GAAA,EACA6F,GAAAP,OAAAC,aAAAK,EAAA5F,GAAA,IAAA4F,EAAA5F,EAAA,IAEA,OAAA6F,EAhiBAC,CAAAzG,KAAA0B,EAAAC,GAEA,QACA,GAAA0D,EAAA,MAAA,IAAA3B,UAAA,qBAAAO,GACAA,GAAAA,EAAA,IAAAuB,cACAH,GAAA,GAaA,SAAAqB,EAAAC,EAAAvG,EAAAwG,GACA,IAAAjG,EAAAgG,EAAAvG,GACAuG,EAAAvG,GAAAuG,EAAAC,GACAD,EAAAC,GAAAjG,EAmIA,SAAAkG,EAAAC,EAAAC,EAAAlD,EAAAI,EAAA+C,GAEA,GAAA,IAAAF,EAAA9F,OAAA,OAAA,EAmBA,GAhBA,iBAAA6C,GACAI,EAAAJ,EACAA,EAAA,GACAA,EAAA,WACAA,EAAA,WACAA,GAAA,aACAA,GAAA,YAEAA,GAAAA,EACAe,EAAAf,KAEAA,EAAAmD,EAAA,EAAAF,EAAA9F,OAAA,GAIA6C,EAAA,IAAAA,EAAAiD,EAAA9F,OAAA6C,GACAA,GAAAiD,EAAA9F,OAAA,CACA,GAAAgG,EAAA,OAAA,EACAnD,EAAAiD,EAAA9F,OAAA,OACA,GAAA6C,EAAA,EAAA,CACA,IAAAmD,EACA,OAAA,EADAnD,EAAA,EAUA,GALA,iBAAAkD,IACAA,EAAA5D,EAAAK,KAAAuD,EAAA9C,IAIAd,EAAAqB,SAAAuC,GAEA,OAAA,IAAAA,EAAA/F,QACA,EAEAiG,EAAAH,EAAAC,EAAAlD,EAAAI,EAAA+C,GACA,GAAA,iBAAAD,EAEA,OADAA,GAAA,IACA,mBAAAnE,WAAAQ,UAAA8D,QACAF,EACApE,WAAAQ,UAAA8D,QAAAnG,KAAA+F,EAAAC,EAAAlD,GAEAjB,WAAAQ,UAAA+D,YAAApG,KAAA+F,EAAAC,EAAAlD,GAGAoD,EAAAH,GAAAC,GAAAlD,EAAAI,EAAA+C,GAGA,MAAA,IAAAtD,UAAA,wCAGA,SAAAuD,EAAA9E,EAAA4E,EAAAlD,EAAAI,EAAA+C,GAmBA,SAAAI,EAAAnE,EAAAtC,GACA,OAAA,IAAA0G,EACApE,EAAAtC,GAEAsC,EAAAqE,aAAA3G,EAAA0G,GAtBA,IAAAA,EAAA,EACAE,EAAApF,EAAAnB,OACAwG,EAAAT,EAAA/F,OAEA,QAAA8C,IAAAG,IAEA,UADAA,EAAAgC,OAAAhC,GAAAuB,gBACA,UAAAvB,GACA,YAAAA,GAAA,aAAAA,GAAA,CACA,GAAA9B,EAAAnB,OAAA,GAAA+F,EAAA/F,OAAA,EACA,OAAA,EAEAqG,EAAA,EACAE,GAAA,EACAC,GAAA,EACA3D,GAAA,EAYA,IAAAlD,EACA,GAAAqG,EAAA,CACA,IAAAS,GAAA,EACA,IAAA9G,EAAAkD,EAAAlD,EAAA4G,EAAA5G,IACA,GAAAyG,EAAAjF,EAAAxB,KAAAyG,EAAAL,GAAA,IAAAU,EAAA,EAAA9G,EAAA8G,IAEA,IADA,IAAAA,IAAAA,EAAA9G,GACAA,EAAA8G,EAAA,IAAAD,EAAA,OAAAC,EAAAJ,OAEA,IAAAI,IAAA9G,GAAAA,EAAA8G,GACAA,GAAA,OAKA,IADA5D,EAAA2D,EAAAD,IAAA1D,EAAA0D,EAAAC,GACA7G,EAAAkD,EAAAlD,GAAA,EAAAA,IAAA,CAEA,IAAA,IADA+G,GAAA,EACAC,EAAA,EAAAA,EAAAH,EAAAG,IACA,GAAAP,EAAAjF,EAAAxB,EAAAgH,KAAAP,EAAAL,EAAAY,GAAA,CACAD,GAAA,EACA,MAGA,GAAAA,EAAA,OAAA/G,EAIA,OAAA,EAeA,SAAAiH,EAAA3E,EAAAe,EAAA6D,EAAA7G,GACA6G,EAAAC,OAAAD,IAAA,EACA,IAAAE,EAAA9E,EAAAjC,OAAA6G,EACA7G,GAGAA,EAAA8G,OAAA9G,IACA+G,IACA/G,EAAA+G,GAJA/G,EAAA+G,EASA,IAAAC,EAAAhE,EAAAhD,OACA,GAAAgH,EAAA,GAAA,EAAA,MAAA,IAAAtE,UAAA,sBAEA1C,EAAAgH,EAAA,IACAhH,EAAAgH,EAAA,GAEA,IAAA,IAAArH,EAAA,EAAAA,EAAAK,IAAAL,EAAA,CACA,IAAAsH,EAAAC,SAAAlE,EAAAmE,OAAA,EAAAxH,EAAA,GAAA,IACA,GAAAiE,EAAAqD,GAAA,OAAAtH,EACAsC,EAAA4E,EAAAlH,GAAAsH,EAEA,OAAAtH,EAGA,SAAAyH,EAAAnF,EAAAe,EAAA6D,EAAA7G,GACA,OAAAqH,EAAA/C,EAAAtB,EAAAf,EAAAjC,OAAA6G,GAAA5E,EAAA4E,EAAA7G,GAGA,SAAAsH,EAAArF,EAAAe,EAAA6D,EAAA7G,GACA,OAAAqH,EAu3BA,SAAAE,GAEA,IAAA,IADAC,KACA7H,EAAA,EAAAA,EAAA4H,EAAAvH,SAAAL,EAEA6H,EAAA1G,KAAA,IAAAyG,EAAAhG,WAAA5B,IAEA,OAAA6H,EA73BAC,CAAAzE,GAAAf,EAAA4E,EAAA7G,GAGA,SAAA0H,EAAAzF,EAAAe,EAAA6D,EAAA7G,GACA,OAAAsH,EAAArF,EAAAe,EAAA6D,EAAA7G,GAGA,SAAA2H,EAAA1F,EAAAe,EAAA6D,EAAA7G,GACA,OAAAqH,EAAA9C,EAAAvB,GAAAf,EAAA4E,EAAA7G,GAGA,SAAA4H,EAAA3F,EAAAe,EAAA6D,EAAA7G,GACA,OAAAqH,EAo3BA,SAAAE,EAAAM,GAGA,IAAA,IAFAC,EAAAC,EAAAC,EACAR,KACA7H,EAAA,EAAAA,EAAA4H,EAAAvH,WACA6H,GAAA,GAAA,KADAlI,EAGAmI,EAAAP,EAAAhG,WAAA5B,GACAoI,EAAAD,GAAA,EACAE,EAAAF,EAAA,IACAN,EAAA1G,KAAAkH,GACAR,EAAA1G,KAAAiH,GAGA,OAAAP,EAj4BAS,CAAAjF,EAAAf,EAAAjC,OAAA6G,GAAA5E,EAAA4E,EAAA7G,GAyFA,SAAA6E,EAAA5C,EAAAvB,EAAAC,GACAA,EAAAoE,KAAAC,IAAA/C,EAAAjC,OAAAW,GAIA,IAHA,IAAA6E,KAEA7F,EAAAe,EACAf,EAAAgB,GAAA,CACA,IAAAuH,EAAAjG,EAAAtC,GACAwI,EAAA,KACAC,EAAAF,EAAA,IAAA,EACAA,EAAA,IAAA,EACAA,EAAA,IAAA,EACA,EAEA,GAAAvI,EAAAyI,GAAAzH,EAAA,CACA,IAAA0H,EAAAC,EAAAC,EAAAC,EAEA,OAAAJ,GACA,KAAA,EACAF,EAAA,MACAC,EAAAD,GAEA,MACA,KAAA,EAEA,MAAA,KADAG,EAAApG,EAAAtC,EAAA,OAEA6I,GAAA,GAAAN,IAAA,EAAA,GAAAG,GACA,MACAF,EAAAK,GAGA,MACA,KAAA,EACAH,EAAApG,EAAAtC,EAAA,GACA2I,EAAArG,EAAAtC,EAAA,GACA,MAAA,IAAA0I,IAAA,MAAA,IAAAC,KACAE,GAAA,GAAAN,IAAA,IAAA,GAAAG,IAAA,EAAA,GAAAC,GACA,OAAAE,EAAA,OAAAA,EAAA,SACAL,EAAAK,GAGA,MACA,KAAA,EACAH,EAAApG,EAAAtC,EAAA,GACA2I,EAAArG,EAAAtC,EAAA,GACA4I,EAAAtG,EAAAtC,EAAA,GACA,MAAA,IAAA0I,IAAA,MAAA,IAAAC,IAAA,MAAA,IAAAC,KACAC,GAAA,GAAAN,IAAA,IAAA,GAAAG,IAAA,IAAA,GAAAC,IAAA,EAAA,GAAAC,GACA,OAAAC,EAAA,UACAL,EAAAK,IAMA,OAAAL,GAGAA,EAAA,MACAC,EAAA,GACAD,EAAA,QAEAA,GAAA,MACA3C,EAAA1E,KAAAqH,IAAA,GAAA,KAAA,OACAA,EAAA,MAAA,KAAAA,GAGA3C,EAAA1E,KAAAqH,GACAxI,GAAAyI,EAGA,OAQA,SAAAK,GACA,IAAArI,EAAAqI,EAAAzI,OACA,GAAAI,GAAAsI,EACA,OAAAzD,OAAAC,aAAAyD,MAAA1D,OAAAwD,GAIA,IAAAjD,EAAA,GACA7F,EAAA,EACA,KAAAA,EAAAS,GACAoF,GAAAP,OAAAC,aAAAyD,MACA1D,OACAwD,EAAApF,MAAA1D,EAAAA,GAAA+I,IAGA,OAAAlD,EAvBAoD,CAAApD,GAkGA,SAAAqD,EAAAhC,EAAAiC,EAAA9I,GACA,GAAA6G,EAAA,GAAA,GAAAA,EAAA,EAAA,MAAA,IAAA7E,WAAA,sBACA,GAAA6E,EAAAiC,EAAA9I,EAAA,MAAA,IAAAgC,WAAA,yCA6KA,SAAA+G,EAAA9G,EAAAQ,EAAAoE,EAAAiC,EAAAE,EAAAhE,GACA,IAAA7C,EAAAqB,SAAAvB,GAAA,MAAA,IAAAS,UAAA,+CACA,GAAAD,EAAAuG,GAAAvG,EAAAuC,EAAA,MAAA,IAAAhD,WAAA,qCACA,GAAA6E,EAAAiC,EAAA7G,EAAAjC,OAAA,MAAA,IAAAgC,WAAA,sBAyLA,SAAAiH,EAAAhH,EAAAQ,EAAAoE,EAAAiC,EAAAE,EAAAhE,GACA,GAAA6B,EAAAiC,EAAA7G,EAAAjC,OAAA,MAAA,IAAAgC,WAAA,sBACA,GAAA6E,EAAA,EAAA,MAAA,IAAA7E,WAAA,sBAGA,SAAAkH,EAAAjH,EAAAQ,EAAAoE,EAAAsC,EAAAC,GAOA,OANA3G,GAAAA,EACAoE,KAAA,EACAuC,GACAH,EAAAhH,EAAAQ,EAAAoE,EAAA,GAEAwC,EAAAjG,MAAAnB,EAAAQ,EAAAoE,EAAAsC,EAAA,GAAA,GACAtC,EAAA,EAWA,SAAAyC,EAAArH,EAAAQ,EAAAoE,EAAAsC,EAAAC,GAOA,OANA3G,GAAAA,EACAoE,KAAA,EACAuC,GACAH,EAAAhH,EAAAQ,EAAAoE,EAAA,GAEAwC,EAAAjG,MAAAnB,EAAAQ,EAAAoE,EAAAsC,EAAA,GAAA,GACAtC,EAAA,EAiJA,SAAAvC,EAAAtB,EAAA6E,GACAA,EAAAA,GAAA0B,EAAAA,EAMA,IAAA,IALApB,EACAnI,EAAAgD,EAAAhD,OACAwJ,EAAA,KACAjE,KAEA5F,EAAA,EAAAA,EAAAK,IAAAL,EAAA,CAIA,IAHAwI,EAAAnF,EAAAzB,WAAA5B,IAGA,OAAAwI,EAAA,MAAA,CAEA,IAAAqB,EAAA,CAEA,GAAArB,EAAA,MAAA,EAEAN,GAAA,IAAA,GAAAtC,EAAAzE,KAAA,IAAA,IAAA,KACA,SACA,GAAAnB,EAAA,IAAAK,EAAA,EAEA6H,GAAA,IAAA,GAAAtC,EAAAzE,KAAA,IAAA,IAAA,KACA,SAIA0I,EAAArB,EAEA,SAIA,GAAAA,EAAA,MAAA,EACAN,GAAA,IAAA,GAAAtC,EAAAzE,KAAA,IAAA,IAAA,KACA0I,EAAArB,EACA,SAIAA,EAAA,OAAAqB,EAAA,OAAA,GAAArB,EAAA,YACAqB,IAEA3B,GAAA,IAAA,GAAAtC,EAAAzE,KAAA,IAAA,IAAA,KAMA,GAHA0I,EAAA,KAGArB,EAAA,IAAA,CACA,IAAAN,GAAA,GAAA,EAAA,MACAtC,EAAAzE,KAAAqH,QACA,GAAAA,EAAA,KAAA,CACA,IAAAN,GAAA,GAAA,EAAA,MACAtC,EAAAzE,KACAqH,GAAA,EAAA,IACA,GAAAA,EAAA,UAEA,GAAAA,EAAA,MAAA,CACA,IAAAN,GAAA,GAAA,EAAA,MACAtC,EAAAzE,KACAqH,GAAA,GAAA,IACAA,GAAA,EAAA,GAAA,IACA,GAAAA,EAAA,SAEA,CAAA,KAAAA,EAAA,SASA,MAAA,IAAAvI,MAAA,sBARA,IAAAiI,GAAA,GAAA,EAAA,MACAtC,EAAAzE,KACAqH,GAAA,GAAA,IACAA,GAAA,GAAA,GAAA,IACAA,GAAA,EAAA,GAAA,IACA,GAAAA,EAAA,MAOA,OAAA5C,EA4BA,SAAAhB,EAAAgD,GACA,OAAAlC,EAAApE,YA3HA,SAAAsG,GAIA,IAFAA,EAAAA,EAAAkC,OAAAC,QAAAC,EAAA,KAEA3J,OAAA,EAAA,MAAA,GAEA,KAAAuH,EAAAvH,OAAA,GAAA,GACAuH,GAAA,IAEA,OAAAA,EAkHAqC,CAAArC,IAGA,SAAAF,EAAAwC,EAAAC,EAAAjD,EAAA7G,GACA,IAAA,IAAAL,EAAA,EAAAA,EAAAK,KACAL,EAAAkH,GAAAiD,EAAA9J,QAAAL,GAAAkK,EAAA7J,UADAL,EAEAmK,EAAAnK,EAAAkH,GAAAgD,EAAAlK,GAEA,OAAAA,EAKA,SAAAgD,EAAAY,GACA,OAAAA,aAAAwG,aACA,MAAAxG,GAAA,MAAAA,EAAAyG,aAAA,gBAAAzG,EAAAyG,YAAAC,MACA,iBAAA1G,EAAAvC,WAIA,SAAA2C,EAAAJ,GACA,MAAA,mBAAAwG,YAAAG,QAAAH,YAAAG,OAAA3G,GAGA,SAAAK,EAAAL,GACA,OAAAA,GAAAA,EAtqDA,IAAA8B,EAAA3F,EAAA,aACA2J,EAAA3J,EAAA,WAEAjB,EAAA0D,OAAAA,EACA1D,EAAA0L,WAyQA,SAAAnK,GAIA,OAHAA,GAAAA,IACAA,EAAA,GAEAmC,EAAAiI,OAAApK,IA5QAvB,EAAA4L,kBAAA,GAEA,IAAAtI,EAAA,WACAtD,EAAA6L,WAAAvI,GAgBAI,EAAAoI,oBAUA,WAEA,IACA,IAAApJ,EAAA,IAAAS,WAAA,GAEA,OADAT,EAAAe,WAAAA,UAAAN,WAAAQ,UAAAoI,IAAA,WAAA,OAAA,KACA,KAAArJ,EAAAqJ,MACA,MAAAtL,GACA,OAAA,GAjBAuL,KAEA,oBAAAC,SACA,mBAAAA,QAAAC,OACAD,QAAAC,MACA,iJAkDA,oBAAAC,QAAAA,OAAAC,SACA1I,EAAAyI,OAAAC,WAAA1I,GACA2I,OAAAC,eAAA5I,EAAAyI,OAAAC,SACApI,MAAA,KACAuI,cAAA,EACAC,YAAA,EACAC,UAAA,IAIA/I,EAAAgJ,SAAA,KA0BAhJ,EAAAK,KAAA,SAAAC,EAAAH,EAAAtC,GACA,OAAAwC,EAAAC,EAAAH,EAAAtC,IAKAmC,EAAAC,UAAAF,UAAAN,WAAAQ,UACAD,EAAAD,UAAAN,WA8BAO,EAAAiI,MAAA,SAAAjG,EAAAiH,EAAAnI,GACA,OArBA,SAAAkB,EAAAiH,EAAAnI,GAEA,OADAiB,EAAAC,GACAA,GAAA,EACArC,EAAAqC,QAEArB,IAAAsI,EAIA,iBAAAnI,EACAnB,EAAAqC,GAAAiH,KAAAA,EAAAnI,GACAnB,EAAAqC,GAAAiH,KAAAA,GAEAtJ,EAAAqC,GAQAiG,CAAAjG,EAAAiH,EAAAnI,IAWAd,EAAAI,YAAA,SAAA4B,GACA,OAAA5B,EAAA4B,IAKAhC,EAAAkJ,gBAAA,SAAAlH,GACA,OAAA5B,EAAA4B,IAyGAhC,EAAAqB,SAAA,SAAAmC,GACA,OAAA,MAAAA,IAAA,IAAAA,EAAA2F,WAGAnJ,EAAAoJ,QAAA,SAAA9L,EAAAkG,GACA,IAAAxD,EAAAqB,SAAA/D,KAAA0C,EAAAqB,SAAAmC,GACA,MAAA,IAAAjD,UAAA,6BAGA,GAAAjD,IAAAkG,EAAA,OAAA,EAKA,IAAA,IAHA6F,EAAA/L,EAAAO,OACAyL,EAAA9F,EAAA3F,OAEAL,EAAA,EAAAS,EAAA2E,KAAAC,IAAAwG,EAAAC,GAAA9L,EAAAS,IAAAT,EACA,GAAAF,EAAAE,KAAAgG,EAAAhG,GAAA,CACA6L,EAAA/L,EAAAE,GACA8L,EAAA9F,EAAAhG,GACA,MAIA,OAAA6L,EAAAC,GAAA,EACAA,EAAAD,EAAA,EACA,GAGArJ,EAAAe,WAAA,SAAAD,GACA,OAAAgC,OAAAhC,GAAAuB,eACA,IAAA,MACA,IAAA,OACA,IAAA,QACA,IAAA,QACA,IAAA,SACA,IAAA,SACA,IAAA,SACA,IAAA,OACA,IAAA,QACA,IAAA,UACA,IAAA,WACA,OAAA,EACA,QACA,OAAA,IAIArC,EAAAuJ,OAAA,SAAAC,EAAA3L,GACA,IAAA6B,MAAAkC,QAAA4H,GACA,MAAA,IAAAjJ,UAAA,+CAGA,GAAA,IAAAiJ,EAAA3L,OACA,OAAAmC,EAAAiI,MAAA,GAGA,IAAAzK,EACA,QAAAmD,IAAA9C,EAEA,IADAA,EAAA,EACAL,EAAA,EAAAA,EAAAgM,EAAA3L,SAAAL,EACAK,GAAA2L,EAAAhM,GAAAK,OAIA,IAAA8F,EAAA3D,EAAAI,YAAAvC,GACA4L,EAAA,EACA,IAAAjM,EAAA,EAAAA,EAAAgM,EAAA3L,SAAAL,EAAA,CACA,IAAAsC,EAAA0J,EAAAhM,GACA,IAAAwC,EAAAqB,SAAAvB,GACA,MAAA,IAAAS,UAAA,+CAEAT,EAAAyB,KAAAoC,EAAA8F,GACAA,GAAA3J,EAAAjC,OAEA,OAAA8F,GA6CA3D,EAAAnB,WAAAA,EA8EAmB,EAAAC,UAAAkJ,WAAA,EAQAnJ,EAAAC,UAAAyJ,OAAA,WACA,IAAAzL,EAAApB,KAAAgB,OACA,GAAAI,EAAA,GAAA,EACA,MAAA,IAAA4B,WAAA,6CAEA,IAAA,IAAArC,EAAA,EAAAA,EAAAS,EAAAT,GAAA,EACA+F,EAAA1G,KAAAW,EAAAA,EAAA,GAEA,OAAAX,MAGAmD,EAAAC,UAAA0J,OAAA,WACA,IAAA1L,EAAApB,KAAAgB,OACA,GAAAI,EAAA,GAAA,EACA,MAAA,IAAA4B,WAAA,6CAEA,IAAA,IAAArC,EAAA,EAAAA,EAAAS,EAAAT,GAAA,EACA+F,EAAA1G,KAAAW,EAAAA,EAAA,GACA+F,EAAA1G,KAAAW,EAAA,EAAAA,EAAA,GAEA,OAAAX,MAGAmD,EAAAC,UAAA2J,OAAA,WACA,IAAA3L,EAAApB,KAAAgB,OACA,GAAAI,EAAA,GAAA,EACA,MAAA,IAAA4B,WAAA,6CAEA,IAAA,IAAArC,EAAA,EAAAA,EAAAS,EAAAT,GAAA,EACA+F,EAAA1G,KAAAW,EAAAA,EAAA,GACA+F,EAAA1G,KAAAW,EAAA,EAAAA,EAAA,GACA+F,EAAA1G,KAAAW,EAAA,EAAAA,EAAA,GACA+F,EAAA1G,KAAAW,EAAA,EAAAA,EAAA,GAEA,OAAAX,MAGAmD,EAAAC,UAAAgC,SAAA,WACA,IAAApE,EAAAhB,KAAAgB,OACA,OAAA,IAAAA,EAAA,GACA,IAAAgM,UAAAhM,OAAA6E,EAAA7F,KAAA,EAAAgB,GACAyE,EAAAkE,MAAA3J,KAAAgN,YAGA7J,EAAAC,UAAA6J,OAAA,SAAAtG,GACA,IAAAxD,EAAAqB,SAAAmC,GAAA,MAAA,IAAAjD,UAAA,6BACA,OAAA1D,OAAA2G,GACA,IAAAxD,EAAAoJ,QAAAvM,KAAA2G,IAGAxD,EAAAC,UAAA8J,QAAA,WACA,IAAA3E,EAAA,GACAyB,EAAAvK,EAAA4L,kBAKA,OAJArL,KAAAgB,OAAA,IACAuH,EAAAvI,KAAAoF,SAAA,MAAA,EAAA4E,GAAAmD,MAAA,SAAApL,KAAA,KACA/B,KAAAgB,OAAAgJ,IAAAzB,GAAA,UAEA,WAAAA,EAAA,KAGApF,EAAAC,UAAAmJ,QAAA,SAAAa,EAAA1L,EAAAC,EAAA0L,EAAAC,GACA,IAAAnK,EAAAqB,SAAA4I,GACA,MAAA,IAAA1J,UAAA,6BAgBA,QAbAI,IAAApC,IACAA,EAAA,QAEAoC,IAAAnC,IACAA,EAAAyL,EAAAA,EAAApM,OAAA,QAEA8C,IAAAuJ,IACAA,EAAA,QAEAvJ,IAAAwJ,IACAA,EAAAtN,KAAAgB,QAGAU,EAAA,GAAAC,EAAAyL,EAAApM,QAAAqM,EAAA,GAAAC,EAAAtN,KAAAgB,OACA,MAAA,IAAAgC,WAAA,sBAGA,GAAAqK,GAAAC,GAAA5L,GAAAC,EACA,OAAA,EAEA,GAAA0L,GAAAC,EACA,OAAA,EAEA,GAAA5L,GAAAC,EACA,OAAA,EAQA,GALAD,KAAA,EACAC,KAAA,EACA0L,KAAA,EACAC,KAAA,EAEAtN,OAAAoN,EAAA,OAAA,EASA,IAAA,IAPAZ,EAAAc,EAAAD,EACAZ,EAAA9K,EAAAD,EACAN,EAAA2E,KAAAC,IAAAwG,EAAAC,GAEAc,EAAAvN,KAAAqE,MAAAgJ,EAAAC,GACAE,EAAAJ,EAAA/I,MAAA3C,EAAAC,GAEAhB,EAAA,EAAAA,EAAAS,IAAAT,EACA,GAAA4M,EAAA5M,KAAA6M,EAAA7M,GAAA,CACA6L,EAAAe,EAAA5M,GACA8L,EAAAe,EAAA7M,GACA,MAIA,OAAA6L,EAAAC,GAAA,EACAA,EAAAD,EAAA,EACA,GA4HArJ,EAAAC,UAAAqK,SAAA,SAAA1G,EAAAlD,EAAAI,GACA,OAAA,IAAAjE,KAAAkH,QAAAH,EAAAlD,EAAAI,IAGAd,EAAAC,UAAA8D,QAAA,SAAAH,EAAAlD,EAAAI,GACA,OAAA4C,EAAA7G,KAAA+G,EAAAlD,EAAAI,GAAA,IAGAd,EAAAC,UAAA+D,YAAA,SAAAJ,EAAAlD,EAAAI,GACA,OAAA4C,EAAA7G,KAAA+G,EAAAlD,EAAAI,GAAA,IAkDAd,EAAAC,UAAAgB,MAAA,SAAAJ,EAAA6D,EAAA7G,EAAAiD,GAEA,QAAAH,IAAA+D,EACA5D,EAAA,OACAjD,EAAAhB,KAAAgB,OACA6G,EAAA,OAEA,QAAA/D,IAAA9C,GAAA,iBAAA6G,EACA5D,EAAA4D,EACA7G,EAAAhB,KAAAgB,OACA6G,EAAA,MAEA,CAAA,IAAA6F,SAAA7F,GAUA,MAAA,IAAAjH,MACA,2EAVAiH,KAAA,EACA6F,SAAA1M,IACAA,KAAA,OACA8C,IAAAG,IAAAA,EAAA,UAEAA,EAAAjD,EACAA,OAAA8C,GAQA,IAAAiE,EAAA/H,KAAAgB,OAAA6G,EAGA,SAFA/D,IAAA9C,GAAAA,EAAA+G,KAAA/G,EAAA+G,GAEA/D,EAAAhD,OAAA,IAAAA,EAAA,GAAA6G,EAAA,IAAAA,EAAA7H,KAAAgB,OACA,MAAA,IAAAgC,WAAA,0CAGAiB,IAAAA,EAAA,QAGA,IADA,IAAAoB,GAAA,IAEA,OAAApB,GACA,IAAA,MACA,OAAA2D,EAAA5H,KAAAgE,EAAA6D,EAAA7G,GAEA,IAAA,OACA,IAAA,QACA,OAAAoH,EAAApI,KAAAgE,EAAA6D,EAAA7G,GAEA,IAAA,QACA,OAAAsH,EAAAtI,KAAAgE,EAAA6D,EAAA7G,GAEA,IAAA,SACA,IAAA,SACA,OAAA0H,EAAA1I,KAAAgE,EAAA6D,EAAA7G,GAEA,IAAA,SAEA,OAAA2H,EAAA3I,KAAAgE,EAAA6D,EAAA7G,GAEA,IAAA,OACA,IAAA,QACA,IAAA,UACA,IAAA,WACA,OAAA4H,EAAA5I,KAAAgE,EAAA6D,EAAA7G,GAEA,QACA,GAAAqE,EAAA,MAAA,IAAA3B,UAAA,qBAAAO,GACAA,GAAA,GAAAA,GAAAuB,cACAH,GAAA,IAKAlC,EAAAC,UAAAuK,OAAA,WACA,OACA7I,KAAA,SACAE,KAAAnC,MAAAO,UAAAiB,MAAAtD,KAAAf,KAAA4N,MAAA5N,KAAA,KAwFA,IAAA0J,EAAA,KA8DAvG,EAAAC,UAAAiB,MAAA,SAAA3C,EAAAC,GACA,IAAAP,EAAApB,KAAAgB,OACAU,IAAAA,EACAC,OAAAmC,IAAAnC,EAAAP,IAAAO,EAEAD,EAAA,GACAA,GAAAN,GACA,IAAAM,EAAA,GACAA,EAAAN,IACAM,EAAAN,GAGAO,EAAA,GACAA,GAAAP,GACA,IAAAO,EAAA,GACAA,EAAAP,IACAO,EAAAP,GAGAO,EAAAD,IAAAC,EAAAD,GAEA,IAAAmM,EAAA7N,KAAA8N,SAAApM,EAAAC,GAGA,OADAkM,EAAA3K,UAAAC,EAAAC,UACAyK,GAWA1K,EAAAC,UAAA2K,WAAA,SAAAlG,EAAA7F,EAAAoI,GACAvC,KAAA,EACA7F,KAAA,EACAoI,GAAAP,EAAAhC,EAAA7F,EAAAhC,KAAAgB,QAKA,IAHA,IAAA+F,EAAA/G,KAAA6H,GACAmG,EAAA,EACArN,EAAA,IACAA,EAAAqB,IAAAgM,GAAA,MACAjH,GAAA/G,KAAA6H,EAAAlH,GAAAqN,EAGA,OAAAjH,GAGA5D,EAAAC,UAAA6K,WAAA,SAAApG,EAAA7F,EAAAoI,GACAvC,KAAA,EACA7F,KAAA,EACAoI,GACAP,EAAAhC,EAAA7F,EAAAhC,KAAAgB,QAKA,IAFA,IAAA+F,EAAA/G,KAAA6H,IAAA7F,GACAgM,EAAA,EACAhM,EAAA,IAAAgM,GAAA,MACAjH,GAAA/G,KAAA6H,IAAA7F,GAAAgM,EAGA,OAAAjH,GAGA5D,EAAAC,UAAA8K,UAAA,SAAArG,EAAAuC,GAGA,OAFAvC,KAAA,EACAuC,GAAAP,EAAAhC,EAAA,EAAA7H,KAAAgB,QACAhB,KAAA6H,IAGA1E,EAAAC,UAAA+K,aAAA,SAAAtG,EAAAuC,GAGA,OAFAvC,KAAA,EACAuC,GAAAP,EAAAhC,EAAA,EAAA7H,KAAAgB,QACAhB,KAAA6H,GAAA7H,KAAA6H,EAAA,IAAA,GAGA1E,EAAAC,UAAAkE,aAAA,SAAAO,EAAAuC,GAGA,OAFAvC,KAAA,EACAuC,GAAAP,EAAAhC,EAAA,EAAA7H,KAAAgB,QACAhB,KAAA6H,IAAA,EAAA7H,KAAA6H,EAAA,IAGA1E,EAAAC,UAAAgL,aAAA,SAAAvG,EAAAuC,GAIA,OAHAvC,KAAA,EACAuC,GAAAP,EAAAhC,EAAA,EAAA7H,KAAAgB,SAEAhB,KAAA6H,GACA7H,KAAA6H,EAAA,IAAA,EACA7H,KAAA6H,EAAA,IAAA,IACA,SAAA7H,KAAA6H,EAAA,IAGA1E,EAAAC,UAAAiL,aAAA,SAAAxG,EAAAuC,GAIA,OAHAvC,KAAA,EACAuC,GAAAP,EAAAhC,EAAA,EAAA7H,KAAAgB,QAEA,SAAAhB,KAAA6H,IACA7H,KAAA6H,EAAA,IAAA,GACA7H,KAAA6H,EAAA,IAAA,EACA7H,KAAA6H,EAAA,KAGA1E,EAAAC,UAAAkL,UAAA,SAAAzG,EAAA7F,EAAAoI,GACAvC,KAAA,EACA7F,KAAA,EACAoI,GAAAP,EAAAhC,EAAA7F,EAAAhC,KAAAgB,QAKA,IAHA,IAAA+F,EAAA/G,KAAA6H,GACAmG,EAAA,EACArN,EAAA,IACAA,EAAAqB,IAAAgM,GAAA,MACAjH,GAAA/G,KAAA6H,EAAAlH,GAAAqN,EAMA,OAJAA,GAAA,IAEAjH,GAAAiH,IAAAjH,GAAAhB,KAAAwI,IAAA,EAAA,EAAAvM,IAEA+E,GAGA5D,EAAAC,UAAAoL,UAAA,SAAA3G,EAAA7F,EAAAoI,GACAvC,KAAA,EACA7F,KAAA,EACAoI,GAAAP,EAAAhC,EAAA7F,EAAAhC,KAAAgB,QAKA,IAHA,IAAAL,EAAAqB,EACAgM,EAAA,EACAjH,EAAA/G,KAAA6H,IAAAlH,GACAA,EAAA,IAAAqN,GAAA,MACAjH,GAAA/G,KAAA6H,IAAAlH,GAAAqN,EAMA,OAJAA,GAAA,IAEAjH,GAAAiH,IAAAjH,GAAAhB,KAAAwI,IAAA,EAAA,EAAAvM,IAEA+E,GAGA5D,EAAAC,UAAAqL,SAAA,SAAA5G,EAAAuC,GAGA,OAFAvC,KAAA,EACAuC,GAAAP,EAAAhC,EAAA,EAAA7H,KAAAgB,QACA,IAAAhB,KAAA6H,IACA,GAAA,IAAA7H,KAAA6H,GAAA,GADA7H,KAAA6H,IAIA1E,EAAAC,UAAAsL,YAAA,SAAA7G,EAAAuC,GACAvC,KAAA,EACAuC,GAAAP,EAAAhC,EAAA,EAAA7H,KAAAgB,QACA,IAAA+F,EAAA/G,KAAA6H,GAAA7H,KAAA6H,EAAA,IAAA,EACA,OAAA,MAAAd,EAAA,WAAAA,EAAAA,GAGA5D,EAAAC,UAAAuL,YAAA,SAAA9G,EAAAuC,GACAvC,KAAA,EACAuC,GAAAP,EAAAhC,EAAA,EAAA7H,KAAAgB,QACA,IAAA+F,EAAA/G,KAAA6H,EAAA,GAAA7H,KAAA6H,IAAA,EACA,OAAA,MAAAd,EAAA,WAAAA,EAAAA,GAGA5D,EAAAC,UAAAwL,YAAA,SAAA/G,EAAAuC,GAIA,OAHAvC,KAAA,EACAuC,GAAAP,EAAAhC,EAAA,EAAA7H,KAAAgB,QAEAhB,KAAA6H,GACA7H,KAAA6H,EAAA,IAAA,EACA7H,KAAA6H,EAAA,IAAA,GACA7H,KAAA6H,EAAA,IAAA,IAGA1E,EAAAC,UAAAyL,YAAA,SAAAhH,EAAAuC,GAIA,OAHAvC,KAAA,EACAuC,GAAAP,EAAAhC,EAAA,EAAA7H,KAAAgB,QAEAhB,KAAA6H,IAAA,GACA7H,KAAA6H,EAAA,IAAA,GACA7H,KAAA6H,EAAA,IAAA,EACA7H,KAAA6H,EAAA,IAGA1E,EAAAC,UAAA0L,YAAA,SAAAjH,EAAAuC,GAGA,OAFAvC,KAAA,EACAuC,GAAAP,EAAAhC,EAAA,EAAA7H,KAAAgB,QACAqJ,EAAAjD,KAAApH,KAAA6H,GAAA,EAAA,GAAA,IAGA1E,EAAAC,UAAA2L,YAAA,SAAAlH,EAAAuC,GAGA,OAFAvC,KAAA,EACAuC,GAAAP,EAAAhC,EAAA,EAAA7H,KAAAgB,QACAqJ,EAAAjD,KAAApH,KAAA6H,GAAA,EAAA,GAAA,IAGA1E,EAAAC,UAAA4L,aAAA,SAAAnH,EAAAuC,GAGA,OAFAvC,KAAA,EACAuC,GAAAP,EAAAhC,EAAA,EAAA7H,KAAAgB,QACAqJ,EAAAjD,KAAApH,KAAA6H,GAAA,EAAA,GAAA,IAGA1E,EAAAC,UAAA6L,aAAA,SAAApH,EAAAuC,GAGA,OAFAvC,KAAA,EACAuC,GAAAP,EAAAhC,EAAA,EAAA7H,KAAAgB,QACAqJ,EAAAjD,KAAApH,KAAA6H,GAAA,EAAA,GAAA,IASA1E,EAAAC,UAAA8L,YAAA,SAAAzL,EAAAoE,EAAA7F,EAAAoI,GAIA,GAHA3G,GAAAA,EACAoE,KAAA,EACA7F,KAAA,GACAoI,EAAA,CAEAL,EAAA/J,KAAAyD,EAAAoE,EAAA7F,EADA+D,KAAAwI,IAAA,EAAA,EAAAvM,GAAA,EACA,GAGA,IAAAgM,EAAA,EACArN,EAAA,EAEA,IADAX,KAAA6H,GAAA,IAAApE,IACA9C,EAAAqB,IAAAgM,GAAA,MACAhO,KAAA6H,EAAAlH,GAAA8C,EAAAuK,EAAA,IAGA,OAAAnG,EAAA7F,GAGAmB,EAAAC,UAAA+L,YAAA,SAAA1L,EAAAoE,EAAA7F,EAAAoI,GAIA,GAHA3G,GAAAA,EACAoE,KAAA,EACA7F,KAAA,GACAoI,EAAA,CAEAL,EAAA/J,KAAAyD,EAAAoE,EAAA7F,EADA+D,KAAAwI,IAAA,EAAA,EAAAvM,GAAA,EACA,GAGA,IAAArB,EAAAqB,EAAA,EACAgM,EAAA,EAEA,IADAhO,KAAA6H,EAAAlH,GAAA,IAAA8C,IACA9C,GAAA,IAAAqN,GAAA,MACAhO,KAAA6H,EAAAlH,GAAA8C,EAAAuK,EAAA,IAGA,OAAAnG,EAAA7F,GAGAmB,EAAAC,UAAAgM,WAAA,SAAA3L,EAAAoE,EAAAuC,GAKA,OAJA3G,GAAAA,EACAoE,KAAA,EACAuC,GAAAL,EAAA/J,KAAAyD,EAAAoE,EAAA,EAAA,IAAA,GACA7H,KAAA6H,GAAA,IAAApE,EACAoE,EAAA,GAGA1E,EAAAC,UAAAiM,cAAA,SAAA5L,EAAAoE,EAAAuC,GAMA,OALA3G,GAAAA,EACAoE,KAAA,EACAuC,GAAAL,EAAA/J,KAAAyD,EAAAoE,EAAA,EAAA,MAAA,GACA7H,KAAA6H,GAAA,IAAApE,EACAzD,KAAA6H,EAAA,GAAApE,IAAA,EACAoE,EAAA,GAGA1E,EAAAC,UAAAkM,cAAA,SAAA7L,EAAAoE,EAAAuC,GAMA,OALA3G,GAAAA,EACAoE,KAAA,EACAuC,GAAAL,EAAA/J,KAAAyD,EAAAoE,EAAA,EAAA,MAAA,GACA7H,KAAA6H,GAAApE,IAAA,EACAzD,KAAA6H,EAAA,GAAA,IAAApE,EACAoE,EAAA,GAGA1E,EAAAC,UAAAmM,cAAA,SAAA9L,EAAAoE,EAAAuC,GAQA,OAPA3G,GAAAA,EACAoE,KAAA,EACAuC,GAAAL,EAAA/J,KAAAyD,EAAAoE,EAAA,EAAA,WAAA,GACA7H,KAAA6H,EAAA,GAAApE,IAAA,GACAzD,KAAA6H,EAAA,GAAApE,IAAA,GACAzD,KAAA6H,EAAA,GAAApE,IAAA,EACAzD,KAAA6H,GAAA,IAAApE,EACAoE,EAAA,GAGA1E,EAAAC,UAAAoM,cAAA,SAAA/L,EAAAoE,EAAAuC,GAQA,OAPA3G,GAAAA,EACAoE,KAAA,EACAuC,GAAAL,EAAA/J,KAAAyD,EAAAoE,EAAA,EAAA,WAAA,GACA7H,KAAA6H,GAAApE,IAAA,GACAzD,KAAA6H,EAAA,GAAApE,IAAA,GACAzD,KAAA6H,EAAA,GAAApE,IAAA,EACAzD,KAAA6H,EAAA,GAAA,IAAApE,EACAoE,EAAA,GAGA1E,EAAAC,UAAAqM,WAAA,SAAAhM,EAAAoE,EAAA7F,EAAAoI,GAGA,GAFA3G,GAAAA,EACAoE,KAAA,GACAuC,EAAA,CACA,IAAAsF,EAAA3J,KAAAwI,IAAA,EAAA,EAAAvM,EAAA,GAEA+H,EAAA/J,KAAAyD,EAAAoE,EAAA7F,EAAA0N,EAAA,GAAAA,GAGA,IAAA/O,EAAA,EACAqN,EAAA,EACA2B,EAAA,EAEA,IADA3P,KAAA6H,GAAA,IAAApE,IACA9C,EAAAqB,IAAAgM,GAAA,MACAvK,EAAA,GAAA,IAAAkM,GAAA,IAAA3P,KAAA6H,EAAAlH,EAAA,KACAgP,EAAA,GAEA3P,KAAA6H,EAAAlH,IAAA8C,EAAAuK,GAAA,GAAA2B,EAAA,IAGA,OAAA9H,EAAA7F,GAGAmB,EAAAC,UAAAwM,WAAA,SAAAnM,EAAAoE,EAAA7F,EAAAoI,GAGA,GAFA3G,GAAAA,EACAoE,KAAA,GACAuC,EAAA,CACA,IAAAsF,EAAA3J,KAAAwI,IAAA,EAAA,EAAAvM,EAAA,GAEA+H,EAAA/J,KAAAyD,EAAAoE,EAAA7F,EAAA0N,EAAA,GAAAA,GAGA,IAAA/O,EAAAqB,EAAA,EACAgM,EAAA,EACA2B,EAAA,EAEA,IADA3P,KAAA6H,EAAAlH,GAAA,IAAA8C,IACA9C,GAAA,IAAAqN,GAAA,MACAvK,EAAA,GAAA,IAAAkM,GAAA,IAAA3P,KAAA6H,EAAAlH,EAAA,KACAgP,EAAA,GAEA3P,KAAA6H,EAAAlH,IAAA8C,EAAAuK,GAAA,GAAA2B,EAAA,IAGA,OAAA9H,EAAA7F,GAGAmB,EAAAC,UAAAyM,UAAA,SAAApM,EAAAoE,EAAAuC,GAMA,OALA3G,GAAAA,EACAoE,KAAA,EACAuC,GAAAL,EAAA/J,KAAAyD,EAAAoE,EAAA,EAAA,KAAA,KACApE,EAAA,IAAAA,EAAA,IAAAA,EAAA,GACAzD,KAAA6H,GAAA,IAAApE,EACAoE,EAAA,GAGA1E,EAAAC,UAAA0M,aAAA,SAAArM,EAAAoE,EAAAuC,GAMA,OALA3G,GAAAA,EACAoE,KAAA,EACAuC,GAAAL,EAAA/J,KAAAyD,EAAAoE,EAAA,EAAA,OAAA,OACA7H,KAAA6H,GAAA,IAAApE,EACAzD,KAAA6H,EAAA,GAAApE,IAAA,EACAoE,EAAA,GAGA1E,EAAAC,UAAA2M,aAAA,SAAAtM,EAAAoE,EAAAuC,GAMA,OALA3G,GAAAA,EACAoE,KAAA,EACAuC,GAAAL,EAAA/J,KAAAyD,EAAAoE,EAAA,EAAA,OAAA,OACA7H,KAAA6H,GAAApE,IAAA,EACAzD,KAAA6H,EAAA,GAAA,IAAApE,EACAoE,EAAA,GAGA1E,EAAAC,UAAA4M,aAAA,SAAAvM,EAAAoE,EAAAuC,GAQA,OAPA3G,GAAAA,EACAoE,KAAA,EACAuC,GAAAL,EAAA/J,KAAAyD,EAAAoE,EAAA,EAAA,YAAA,YACA7H,KAAA6H,GAAA,IAAApE,EACAzD,KAAA6H,EAAA,GAAApE,IAAA,EACAzD,KAAA6H,EAAA,GAAApE,IAAA,GACAzD,KAAA6H,EAAA,GAAApE,IAAA,GACAoE,EAAA,GAGA1E,EAAAC,UAAA6M,aAAA,SAAAxM,EAAAoE,EAAAuC,GASA,OARA3G,GAAAA,EACAoE,KAAA,EACAuC,GAAAL,EAAA/J,KAAAyD,EAAAoE,EAAA,EAAA,YAAA,YACApE,EAAA,IAAAA,EAAA,WAAAA,EAAA,GACAzD,KAAA6H,GAAApE,IAAA,GACAzD,KAAA6H,EAAA,GAAApE,IAAA,GACAzD,KAAA6H,EAAA,GAAApE,IAAA,EACAzD,KAAA6H,EAAA,GAAA,IAAApE,EACAoE,EAAA,GAkBA1E,EAAAC,UAAA8M,aAAA,SAAAzM,EAAAoE,EAAAuC,GACA,OAAAF,EAAAlK,KAAAyD,EAAAoE,GAAA,EAAAuC,IAGAjH,EAAAC,UAAA+M,aAAA,SAAA1M,EAAAoE,EAAAuC,GACA,OAAAF,EAAAlK,KAAAyD,EAAAoE,GAAA,EAAAuC,IAaAjH,EAAAC,UAAAgN,cAAA,SAAA3M,EAAAoE,EAAAuC,GACA,OAAAE,EAAAtK,KAAAyD,EAAAoE,GAAA,EAAAuC,IAGAjH,EAAAC,UAAAiN,cAAA,SAAA5M,EAAAoE,EAAAuC,GACA,OAAAE,EAAAtK,KAAAyD,EAAAoE,GAAA,EAAAuC,IAIAjH,EAAAC,UAAAsB,KAAA,SAAA0I,EAAAkD,EAAA5O,EAAAC,GAQA,GAPAD,IAAAA,EAAA,GACAC,GAAA,IAAAA,IAAAA,EAAA3B,KAAAgB,QACAsP,GAAAlD,EAAApM,SAAAsP,EAAAlD,EAAApM,QACAsP,IAAAA,EAAA,GACA3O,EAAA,GAAAA,EAAAD,IAAAC,EAAAD,GAGAC,IAAAD,EAAA,OAAA,EACA,GAAA,IAAA0L,EAAApM,QAAA,IAAAhB,KAAAgB,OAAA,OAAA,EAGA,GAAAsP,EAAA,EACA,MAAA,IAAAtN,WAAA,6BAEA,GAAAtB,EAAA,GAAAA,GAAA1B,KAAAgB,OAAA,MAAA,IAAAgC,WAAA,6BACA,GAAArB,EAAA,EAAA,MAAA,IAAAqB,WAAA,2BAGArB,EAAA3B,KAAAgB,SAAAW,EAAA3B,KAAAgB,QACAoM,EAAApM,OAAAsP,EAAA3O,EAAAD,IACAC,EAAAyL,EAAApM,OAAAsP,EAAA5O,GAGA,IACAf,EADAS,EAAAO,EAAAD,EAGA,GAAA1B,OAAAoN,GAAA1L,EAAA4O,GAAAA,EAAA3O,EAEA,IAAAhB,EAAAS,EAAA,EAAAT,GAAA,IAAAA,EACAyM,EAAAzM,EAAA2P,GAAAtQ,KAAAW,EAAAe,QAEA,GAAAN,EAAA,IAEA,IAAAT,EAAA,EAAAA,EAAAS,IAAAT,EACAyM,EAAAzM,EAAA2P,GAAAtQ,KAAAW,EAAAe,QAGAkB,WAAAQ,UAAAmN,IAAAxP,KACAqM,EACApN,KAAA8N,SAAApM,EAAAA,EAAAN,GACAkP,GAIA,OAAAlP,GAOA+B,EAAAC,UAAAgJ,KAAA,SAAArF,EAAArF,EAAAC,EAAAsC,GAEA,GAAA,iBAAA8C,EAAA,CASA,GARA,iBAAArF,GACAuC,EAAAvC,EACAA,EAAA,EACAC,EAAA3B,KAAAgB,QACA,iBAAAW,IACAsC,EAAAtC,EACAA,EAAA3B,KAAAgB,QAEA,IAAA+F,EAAA/F,OAAA,CACA,IAAAH,EAAAkG,EAAAxE,WAAA,GACA1B,EAAA,MACAkG,EAAAlG,GAGA,QAAAiD,IAAAG,GAAA,iBAAAA,EACA,MAAA,IAAAP,UAAA,6BAEA,GAAA,iBAAAO,IAAAd,EAAAe,WAAAD,GACA,MAAA,IAAAP,UAAA,qBAAAO,OAEA,iBAAA8C,IACAA,GAAA,KAIA,GAAArF,EAAA,GAAA1B,KAAAgB,OAAAU,GAAA1B,KAAAgB,OAAAW,EACA,MAAA,IAAAqB,WAAA,sBAGA,GAAArB,GAAAD,EACA,OAAA1B,KAGA0B,KAAA,EACAC,OAAAmC,IAAAnC,EAAA3B,KAAAgB,OAAAW,IAAA,EAEAoF,IAAAA,EAAA,GAEA,IAAApG,EACA,GAAA,iBAAAoG,EACA,IAAApG,EAAAe,EAAAf,EAAAgB,IAAAhB,EACAX,KAAAW,GAAAoG,MAEA,CACA,IAAAR,EAAApD,EAAAqB,SAAAuC,GACAA,EACA,IAAA5D,EAAA4D,EAAA9C,GACA7C,EAAAmF,EAAAvF,OACA,IAAAL,EAAA,EAAAA,EAAAgB,EAAAD,IAAAf,EACAX,KAAAW,EAAAe,GAAA6E,EAAA5F,EAAAS,GAIA,OAAApB,MAMA,IAAA2K,EAAA,mEC1hDAlL,EAAA2H,KAAA,SAAAN,EAAAe,EAAA2I,EAAAC,EAAAC,GACA,IAAAxQ,EAAA0G,EACA+J,EAAA,EAAAD,EAAAD,EAAA,EACAG,GAAA,GAAAD,GAAA,EACAE,EAAAD,GAAA,EACAE,GAAA,EACAnQ,EAAA6P,EAAAE,EAAA,EAAA,EACAK,EAAAP,GAAA,EAAA,EACAlQ,EAAAwG,EAAAe,EAAAlH,GAOA,IALAA,GAAAoQ,EAEA7Q,EAAAI,GAAA,IAAAwQ,GAAA,EACAxQ,KAAAwQ,EACAA,GAAAH,EACAG,EAAA,EAAA5Q,EAAA,IAAAA,EAAA4G,EAAAe,EAAAlH,GAAAA,GAAAoQ,EAAAD,GAAA,GAKA,IAHAlK,EAAA1G,GAAA,IAAA4Q,GAAA,EACA5Q,KAAA4Q,EACAA,GAAAL,EACAK,EAAA,EAAAlK,EAAA,IAAAA,EAAAE,EAAAe,EAAAlH,GAAAA,GAAAoQ,EAAAD,GAAA,GAEA,GAAA,IAAA5Q,EACAA,EAAA,EAAA2Q,MACA,CAAA,GAAA3Q,IAAA0Q,EACA,OAAAhK,EAAAoK,IAAAzG,EAAAA,GAAAjK,GAAA,EAAA,GAEAsG,GAAAb,KAAAwI,IAAA,EAAAkC,GACAvQ,GAAA2Q,EAEA,OAAAvQ,GAAA,EAAA,GAAAsG,EAAAb,KAAAwI,IAAA,EAAArO,EAAAuQ,IAGAhR,EAAA2E,MAAA,SAAA0C,EAAArD,EAAAoE,EAAA2I,EAAAC,EAAAC,GACA,IAAAxQ,EAAA0G,EAAAkC,EACA6H,EAAA,EAAAD,EAAAD,EAAA,EACAG,GAAA,GAAAD,GAAA,EACAE,EAAAD,GAAA,EACAK,EAAA,KAAAR,EAAA1K,KAAAwI,IAAA,GAAA,IAAAxI,KAAAwI,IAAA,GAAA,IAAA,EACA5N,EAAA6P,EAAA,EAAAE,EAAA,EACAK,EAAAP,EAAA,GAAA,EACAlQ,EAAAmD,EAAA,GAAA,IAAAA,GAAA,EAAAA,EAAA,EAAA,EAAA,EAmCA,IAjCAA,EAAAsC,KAAAmL,IAAAzN,GAEA0N,MAAA1N,IAAAA,IAAA8G,EAAAA,GACA3D,EAAAuK,MAAA1N,GAAA,EAAA,EACAvD,EAAA0Q,IAEA1Q,EAAA6F,KAAAqL,MAAArL,KAAAsL,IAAA5N,GAAAsC,KAAAuL,KACA7N,GAAAqF,EAAA/C,KAAAwI,IAAA,GAAArO,IAAA,IACAA,IACA4I,GAAA,IAGArF,GADAvD,EAAA2Q,GAAA,EACAI,EAAAnI,EAEAmI,EAAAlL,KAAAwI,IAAA,EAAA,EAAAsC,IAEA/H,GAAA,IACA5I,IACA4I,GAAA,GAGA5I,EAAA2Q,GAAAD,GACAhK,EAAA,EACA1G,EAAA0Q,GACA1Q,EAAA2Q,GAAA,GACAjK,GAAAnD,EAAAqF,EAAA,GAAA/C,KAAAwI,IAAA,EAAAkC,GACAvQ,GAAA2Q,IAEAjK,EAAAnD,EAAAsC,KAAAwI,IAAA,EAAAsC,EAAA,GAAA9K,KAAAwI,IAAA,EAAAkC,GACAvQ,EAAA,IAIAuQ,GAAA,EAAA3J,EAAAe,EAAAlH,GAAA,IAAAiG,EAAAjG,GAAAoQ,EAAAnK,GAAA,IAAA6J,GAAA,GAIA,IAFAvQ,EAAAA,GAAAuQ,EAAA7J,EACA+J,GAAAF,EACAE,EAAA,EAAA7J,EAAAe,EAAAlH,GAAA,IAAAT,EAAAS,GAAAoQ,EAAA7Q,GAAA,IAAAyQ,GAAA,GAEA7J,EAAAe,EAAAlH,EAAAoQ,IAAA,IAAAzQ,yCCzEA,SAAAR,EAAAyR,GACA,iBAAA9R,QAAA,IAAAC,EAAAA,EAAAD,QAAA8R,EAAAzR,GAEAA,EAAA0R,OAAAD,EAAAzR,GAHA,CAIA,oBAAAC,KAAAA,KACA,oBAAAF,OAAAA,YACA,IAAAC,EAAAA,EACAE,KACA,SAAAF,GACA,aAEA,IAGAgH,EAHA2K,EAAA3R,EAAA4R,OAIA,QAAA,IAAAhS,GAAAA,EAAAD,QACA,IACAqH,EAAApG,EAAA,UAAAyC,OACA,MAAAwO,IAGA,IAAAC,EACA,mEACAC,EAAA,SAAAC,GAEA,IAAA,IADA3R,KACAQ,EAAA,EAAAG,EAAAgR,EAAA9Q,OAAAL,EAAAG,EAAAH,IAAAR,EAAA2R,EAAAC,OAAApR,IAAAA,EACA,OAAAR,EAHA,CAIAyR,GACA1L,EAAAD,OAAAC,aAEA8L,EAAA,SAAAlJ,GACA,GAAAA,EAAA9H,OAAA,EAAA,CAEA,OADAiR,EAAAnJ,EAAAvG,WAAA,IACA,IAAAuG,EACAmJ,EAAA,KAAA/L,EAAA,IAAA+L,IAAA,GACA/L,EAAA,IAAA,GAAA+L,GACA/L,EAAA,IAAA+L,IAAA,GAAA,IACA/L,EAAA,IAAA+L,IAAA,EAAA,IACA/L,EAAA,IAAA,GAAA+L,GAEA,IAAAA,EAAA,MACA,MAAAnJ,EAAAvG,WAAA,GAAA,QACAuG,EAAAvG,WAAA,GAAA,OACA,OAAA2D,EAAA,IAAA+L,IAAA,GAAA,GACA/L,EAAA,IAAA+L,IAAA,GAAA,IACA/L,EAAA,IAAA+L,IAAA,EAAA,IACA/L,EAAA,IAAA,GAAA+L,IAGAC,EAAA,gDACAC,EAAA,SAAA3R,GACA,OAAAA,EAAAkK,QAAAwH,EAAAF,IAEAI,EAAA,SAAAC,GACA,IAAAC,GAAA,EAAA,EAAA,GAAAD,EAAArR,OAAA,GACAuR,EAAAF,EAAA9P,WAAA,IAAA,IACA8P,EAAArR,OAAA,EAAAqR,EAAA9P,WAAA,GAAA,IAAA,GACA8P,EAAArR,OAAA,EAAAqR,EAAA9P,WAAA,GAAA,GAOA,OALAqP,EAAAG,OAAAQ,IAAA,IACAX,EAAAG,OAAAQ,IAAA,GAAA,IACAD,GAAA,EAAA,IAAAV,EAAAG,OAAAQ,IAAA,EAAA,IACAD,GAAA,EAAA,IAAAV,EAAAG,OAAA,GAAAQ,IAEAxQ,KAAA,KAEAyQ,EAAA1S,EAAA0S,KAAA,SAAA7L,GACA,OAAA7G,EAAA0S,KAAA7L,IACA,SAAAA,GACA,OAAAA,EAAA+D,QAAA,eAAA0H,IAEAK,EAAA3L,EACAA,EAAAtD,MAAAsD,EAAAtD,OAAAZ,WAAAY,KAAA,SAAAhD,GACA,OAAAA,EAAAwK,cAAAlE,EAAAkE,YAAAxK,EAAAsG,EAAAtD,KAAAhD,IACA4E,SAAA,WAEA,SAAA5E,GACA,OAAAA,EAAAwK,cAAAlE,EAAAkE,YAAAxK,EAAA,IAAAsG,EAAAtG,IACA4E,SAAA,WAEA,SAAA5E,GAAA,OAAAgS,EAAAL,EAAA3R,KAEAkS,EAAA,SAAAlS,EAAAmS,GACA,OAAAA,EAEAF,EAAAxM,OAAAzF,IAAAkK,QAAA,SAAA,SAAAkI,GACA,MAAA,KAAAA,EAAA,IAAA,MACAlI,QAAA,KAAA,IAHA+H,EAAAxM,OAAAzF,KAOAqS,EAAA,IAAAC,QACA,yBACA,4BACA,6BACA/Q,KAAA,KAAA,KACAgR,EAAA,SAAAC,GACA,OAAAA,EAAAhS,QACA,KAAA,EACA,IAIA6G,IAJA,EAAAmL,EAAAzQ,WAAA,KAAA,IACA,GAAAyQ,EAAAzQ,WAAA,KAAA,IACA,GAAAyQ,EAAAzQ,WAAA,KAAA,EACA,GAAAyQ,EAAAzQ,WAAA,IACA,MACA,OAAA2D,EAAA,OAAA2B,IAAA,KACA3B,EAAA,OAAA,KAAA2B,IACA,KAAA,EACA,OAAA3B,GACA,GAAA8M,EAAAzQ,WAAA,KAAA,IACA,GAAAyQ,EAAAzQ,WAAA,KAAA,EACA,GAAAyQ,EAAAzQ,WAAA,IAEA,QACA,OAAA2D,GACA,GAAA8M,EAAAzQ,WAAA,KAAA,EACA,GAAAyQ,EAAAzQ,WAAA,MAIA0Q,EAAA,SAAAtM,GACA,OAAAA,EAAA+D,QAAAmI,EAAAE,IAEAG,EAAA,SAAAF,GACA,IAAA5R,EAAA4R,EAAAhS,OACAsR,EAAAlR,EAAA,EACAhB,GAAAgB,EAAA,EAAAyQ,EAAAmB,EAAAjB,OAAA,KAAA,GAAA,IACA3Q,EAAA,EAAAyQ,EAAAmB,EAAAjB,OAAA,KAAA,GAAA,IACA3Q,EAAA,EAAAyQ,EAAAmB,EAAAjB,OAAA,KAAA,EAAA,IACA3Q,EAAA,EAAAyQ,EAAAmB,EAAAjB,OAAA,IAAA,GACAoB,GACAjN,EAAA9F,IAAA,IACA8F,EAAA9F,IAAA,EAAA,KACA8F,EAAA,IAAA9F,IAGA,OADA+S,EAAAnS,SAAA,EAAA,EAAA,EAAA,GAAAsR,GACAa,EAAApR,KAAA,KAEAqR,EAAAtT,EAAAsT,KAAA,SAAA3S,GACA,OAAAX,EAAAsT,KAAA3S,IACA,SAAAA,GACA,OAAAA,EAAAiK,QAAA,eAAAwI,IAEAG,EAAAvM,EACAA,EAAAtD,MAAAsD,EAAAtD,OAAAZ,WAAAY,KAAA,SAAA/C,GACA,OAAAA,EAAAuK,cAAAlE,EAAAkE,YACAvK,EAAAqG,EAAAtD,KAAA/C,EAAA,WAAA2E,YAEA,SAAA3E,GACA,OAAAA,EAAAuK,cAAAlE,EAAAkE,YACAvK,EAAA,IAAAqG,EAAArG,EAAA,WAAA2E,YAEA,SAAA3E,GAAA,OAAAwS,EAAAG,EAAA3S,KACA6S,EAAA,SAAA7S,GACA,OAAA4S,EACApN,OAAAxF,GAAAiK,QAAA,QAAA,SAAAkI,GAAA,MAAA,KAAAA,EAAA,IAAA,MACAlI,QAAA,oBAAA,MAuBA,GAdA5K,EAAA4R,QACA6B,QAzJA,QA0JAH,KAAAA,EACAZ,KAAAA,EACAgB,WAAAF,EACAG,SAAAf,EACAP,KAAAA,EACAO,OAAAA,EACAgB,UAnFA,SAAAlT,GAAA,OAAAkS,EAAAlS,GAAA,IAoFAyS,KAAAA,EACAK,OAAAA,EACAK,WAjBA,WACA,IAAAjC,EAAA5R,EAAA4R,OAEA,OADA5R,EAAA4R,OAAAD,EACAC,IAiBA,mBAAA5F,OAAAC,eAAA,CACA,IAAA6H,EAAA,SAAAC,GACA,OAAApQ,MAAAoQ,EAAA5H,YAAA,EAAAC,UAAA,EAAAF,cAAA,IAEAlM,EAAA4R,OAAAoC,aAAA,WACAhI,OAAAC,eACA9F,OAAA7C,UAAA,aAAAwQ,EAAA,WACA,OAAAN,EAAAtT,SAEA8L,OAAAC,eACA9F,OAAA7C,UAAA,WAAAwQ,EAAA,SAAAjB,GACA,OAAAD,EAAA1S,KAAA2S,MAEA7G,OAAAC,eACA9F,OAAA7C,UAAA,cAAAwQ,EAAA,WACA,OAAAlB,EAAA1S,MAAA,OAoBA,OAbAF,EAAA,SACA4R,OAAA5R,EAAA4R,aAIA,IAAAhS,GAAAA,EAAAD,UACAC,EAAAD,QAAAiS,OAAA5R,EAAA4R,SAOAA,OAAA5R,EAAA4R;;;;;;;;;;;;CCjMA,SAAA7R,EAAAkU,GAIA,aAuBA,SAAAC,EAAAC,EAAAC,GAopHA,SAAAC,EAAAC,GAGA,OAAAC,GAAAC,aAAAC,KAAAF,GAAAG,aAAAH,GAAAI,MAAAL,KAAAL,GAAAM,GAAAI,MAAAL,GA0EA,SAAAM,EAAAC,GAIA,OAAA,SAAAzU,GAEA,IACA0U,EADAtU,EAAAN,KAAA6U,GAgBA,OAbAvU,GAAAA,EAAAwU,GAUAF,EAAAD,EAAA5T,KAAAf,KAAAE,IARAI,GAAAA,EAAAyU,GACAV,GAAAW,IAAA1U,EAAAyU,GAAA,cAAA7U,EAAA4E,MAEAuP,GAAAW,IAAAC,GAAA,YAAA/U,EAAA4E,MAGA8P,EAAA,MAKAA,GA/uHA5U,KAAAkV,cAEAC,IAAAlB,GAAA,KACAmB,aAAA,EACAC,WAAA,EACAC,YAAA,EACAC,YAAA,EACAC,aAAA,EACAC,mBAAA,EACAC,QAAA,UACAC,oBAAA,EACAC,qBAAA,KACAC,qBAAA,KACAC,iBAAA,IACAC,MAAA,KACAC,kBAAA,SACAC,eAAA,EACAC,eAAA,EACAC,0BAAA,EACAC,0BAAA,EACAC,UAAA,sBACA/B,aAAA,EACAgC,YAAA,EACAC,SAAA,SAIAvW,KAAAwW,gBAOAC,UAAA,EACAC,UAAA,EACAlT,KAAA,KACAmT,MAAA,EACAC,MAAA,KACAC,QAAA,KACAC,OAAA,KACAC,aAAA,KACAC,OAAA,KACAC,QAAA,KACAC,SAAA,KACAC,aAAA,KACAC,WAAA,KACAC,OAAA,KACAC,SAAA,KACAC,WAAA,EACAC,iBAAA,EACAC,SAAA,KACAC,IAAA,EACAC,aAAA,EACAC,QAAA,EACAC,GAAA,KACA/S,KAAA,KACAgT,eAAA,EACAC,OAAA,KAIA/X,KAAAgY,eAOAC,UAAA,KACAC,YAAA,KACAC,aAAA,EACAC,iBAAA,EACAC,WAAA,EACAC,eAAA,KACAC,YAAA,MAIAvY,KAAAwY,kBAOAC,WAAA,EACAC,UAAA,KACAC,UAAA,KACAC,SAAA,MAIA5Y,KAAA6Y,cAQAC,KACAhU,MAAA,2BAAA,aAAA,YAAA,YAAA,oBACAiU,UAAA,GAGAC,KACAC,SAAA,MAAA,MAAA,OACAnU,MAAA,gCAAA,YAAA,cAAA,kBAAA,uBACAiU,UAAA,GAGAG,KACApU,MAAA,4BACAiU,UAAA,GAGAI,MACArU,MAAA,yBAAA,cACAiU,UAAA,GAGAK,KACAtU,MAAA,wBAAA,YAAA,aAAA,eACAiU,UAAA,GAGAM,MACAvU,MAAA,cACAiU,UAAA,IAOA/Y,KAAAsZ,QAAA,gBACAtZ,KAAA+U,GAAAb,GAAA,WAEAlU,KAAAuZ,QAAA,qBACAvZ,KAAAwZ,cAAA,kBAIAxZ,KAAAyZ,cAAA,kBACAzZ,KAAA0Z,QAAA,KACA1Z,KAAA2Z,SAAA,KACA3Z,KAAA4Z,OAAA,KACA5Z,KAAA6Z,WAAA,EACA7Z,KAAA8Z,SAAA,EACA9Z,KAAA+Z,IAAA,KACA/Z,KAAAga,UACAha,KAAAia,YACAja,KAAAka,OAAA,EACAla,KAAAma,eAAA,EACAna,KAAAoa,YAAA,KAEApa,KAAAqa,cACAC,OAAA,iBACAC,OAAA,kBAKAva,KAAAwa,UACAC,WAAA,EACAC,UAAA,EACAC,cAAA,EACAC,QAAA,EACAC,WAAA,GAKA7a,KAAA8a,SAEAhW,KAAA,KACAiW,OACAC,OAAA,8BACAC,cAAA,8CACAC,iBAAA,6DACAC,aAAA,0CAEAC,YAAA,KACAC,SAAA,KACAC,QAAA,MAWAtb,KAAAub,OACAC,WAAA,MAIAxb,KAAAyU,SAGAzU,KAAAyb,WAAA,EAGAzb,KAAAwU,aAAA,EAMA,IAAAkH,EACA3G,EAAA4G,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAlV,EAAAmV,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EACAC,EAAAC,EAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAzK,GAAA0K,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GADAlL,GAAArU,KAAAwf,GAAA,KAAA/K,GAAA,KAAAgL,GAAA,eAAAC,GAAAD,GAAA,KAAAxK,GAAA,UAAA0K,GAAAC,UAAAC,UAAAC,GAAAjgB,EAAAkgB,SAAAC,KAAA5a,WAAA6a,GAAAC,SAAAC,MAAAC,IAAA,EAAAC,IAAA,EAAAC,IAAA,EAAAC,IAAA,EAAAC,IAAA,EAAAC,IAAA,EAAAC,GAAA,EAAAC,IAAA,MAAA,OAAA,OAAA,SAAAC,GAAA,KAAAC,GAAA,KAAAC,IAAA,EAAAC,IAAA,EAAAC,GAAA,EAAAC,GAAA,KAAAC,MACAC,GAAA,KAAA9c,GAAAxB,MAAAO,UAAAiB,MAAA+c,IAAA,EAAAC,GAAA,EACAC,GAAA3B,GAAAxS,MAAA,uBAAAoU,GAAA5B,GAAAxS,MAAA,YAAAqU,GAAA7B,GAAAxS,MAAA,iBACAsU,GAAA9B,GAAAxS,MAAA,WACAuU,GAAA/B,GAAAxS,MAAA,aAAAwS,GAAAxS,MAAA,WACAwU,GAAAhC,GAAAxS,MAAA,UACAyU,GAAAjC,GAAAxS,MAAA,yBAAAmU,IAAAC,GACAM,IAAA/B,GAAA3S,MAAA,oBAAA2S,GAAA3S,MAAA,qBAAAuU,KAAA/B,GAAAxS,MAAA,UAAAwS,GAAAxS,MAAA,wBACA2U,GAAAjiB,EAAA6L,UAAAqI,GAAArI,QAAA2F,MAAA0C,EACAgO,GAAA9B,GAAA+B,WAAAjO,EAAAkM,GAAA+B,WAAA,KACAC,GAAAP,KAAAzB,GAAA+B,WAAAjO,IAAAkM,GAAA+B,YACAE,IAAAD,GACAE,GAAA,yBACAC,GAAA,cAEAC,GAAApC,GAAAF,SAAAE,GAAAF,SAAAuC,SAAAnV,MAAA,SAAA,KACAoV,GAAAF,GAAA,GAAA,KAEAG,GAAA,kFAEAC,IAAA,QAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,OAAA,MAAA,OACAC,GAAA,IAAA5P,OAAA,OAAA2P,GAAA1gB,KAAA,KAAA,aAAA,KAEA/B,KAAA2iB,YAAA,8CAGA3iB,KAAA4iB,WAAAP,GAEAzE,GACAiF,OAAA,iBACAC,WAAA,iBACAC,SAAA,YACAC,YAAA,eACAnJ,UAAA,aACAoJ,aAAA,gBACAC,SAAA,YACAC,SAAA,mBACAC,WAAA,eAWA1E,IACA,KACA,oBACA,oBACA,mBACA,+BASA1e,KAAAqjB,SAAA,WACA,IAEA,OAAAC,QAAAvP,IAAA4N,IAAA4B,QAAAxP,GAAAwP,MAAA7J,UAAA,GAAA,IAAA4J,MAAA,MAAA,IAAAA,OAAAE,cAAAzP,EACA,MAAA7T,GACA,OAAA,GALA,GAqBAF,KAAAyjB,MAAA,SAAAC,GAEA,IAAAC,GAAAtP,GAAAc,IA+FA,OA3FAuO,IAAA3P,GAAAwM,IAAAY,IAAA9M,GAAAuP,OAAAF,EAAAtO,eAAArB,GAAA2P,EAAAvO,MAAApB,GAAA2P,EAAArN,YAAAtC,IACAiK,EAAAzV,EAAA,cAKA4T,EAAAuH,GAEAtC,KAEAQ,GAGAvN,GAAAa,aAAAkB,2BAAA/B,GAAAa,aAAAiB,2BACA+K,GAAApf,KAAA+a,EAAAgH,aACAzC,IAAA,GAGA/M,GAAAa,aAAAiB,2BAGA+K,GAAApf,KAAA+a,EAAAgH,aACAzC,IAAA,KAMA7B,IAAAqC,KAEAvN,GAAAa,aAAAkB,yBAEA8K,GAAApf,KAAA+a,EAAAiH,eAOAzP,GAAAa,aAAAgB,gBAAA7B,GAAAa,aAAAZ,aAEAD,GAAAW,IAAA6H,EAAAkH,UAIA1P,GAAAa,aAAAgB,eAAA,EACA7B,GAAAa,aAAAZ,aAAA,EAEAgN,GAGAjN,GAAAG,aAAA,GAEA+M,KAAA5B,GAAAxS,MAAA,oBAAAoU,MASAlN,GAAAW,IAAA6H,EAAAgH,aAGAzC,IAAA,KAUAsC,IAEAC,GAAA1G,GAAAyG,EAAAvO,MAAApB,GACAM,GAAA2P,mBAKA/G,GAAAyG,EAAAvO,MAAApB,GAAA,aAAAkM,GAAAgE,YACAC,WAAAnH,EAAA,IAKAwC,IAAA,EAEAlL,IAIArU,KAAA4jB,GAAA,WAEA,OAAAzC,GAAAZ,KAAAC,GAAAnM,GAAA6B,eAAA7B,GAAAgP,UAIArjB,KAAAmkB,UAAAnkB,KAAA4jB,GAEA5jB,KAAAokB,SAAA,SAAAC,GAGA,OAAAtP,EAAAsP,IAAApE,GAAAoE,IAAAxkB,EAAAwkB,IAWArkB,KAAAskB,YAAA,SAAAC,EAAAC,GA6CA,SAAAC,IAKA,OAHAf,EAAA5F,EAAA4F,GACArP,GAAA2F,OAAA0J,EAAA3O,IAAA,IAAA2G,EAAAgI,GACArP,GAAA4F,SAAAnY,KAAA4hB,EAAA3O,IACAV,GAAA2F,OAAA0J,EAAA3O,IAhDA,IAAA2P,EAAAC,EAAAjB,EAAAkB,EAAA,KAOA,GAJAF,EAAAjF,GAAA,mBACAkF,EAAAD,EAAAnc,EAAAgY,GAAA,QAAA,aAGAA,KAAAlM,GAAAuP,KAEA,OADA5F,EAAA2G,IACA,EA6BA,GA1BAH,IAAAzQ,IAEAwQ,GACAxP,GAAAwP,EACApP,IAAAqP,IAKAd,EAAAxH,EAAAqI,GAEAb,EAAAvO,IAAAkJ,EAAAqF,EAAAvO,KAGAuO,EAAA3O,KAAAhB,IACA2P,EAAA3O,GAAAV,GAAAa,aAAAqB,SAAA8K,MAIAqC,EAAA3O,GAAA3P,WAAA2M,OAAA,GAAA5E,MAAA,YACAkH,GAAAW,IAAA0P,EAAAnc,EAAA,QAAAmb,EAAA3O,IAAA,GAGAV,GAAAW,IAAA0P,EAAAhB,EAAA3O,IAAA2O,EAAAvO,IAAA,KAAAuO,EAAAvO,IAAA,IAAA,IAAA,GAGA8I,EAAAyF,EAAA3O,IAAA,GAEA,OADAV,GAAAW,IAAA0P,EAAAhB,EAAA3O,GAAA,UAAA,GACAV,GAAA2F,OAAA0J,EAAA3O,IAYA,GAAAyJ,GAAAkF,GAEAkB,EAAAH,IAEApQ,GAAAoH,WACApH,GAAAW,IAAA0O,EAAA3O,GAAA,iBAGA6P,EAAAC,aAAAnB,OAEA,CAEA,GAAArP,GAAAoH,UAEA,OADApH,GAAAW,IAAA0O,EAAA3O,GAAA,6DACA0P,IAKA,GAAApQ,GAAAkH,MAAAC,YAAAkI,EAAAvO,KAAAuO,EAAAvO,IAAAhI,MAAA,UAGA,OADAkH,GAAAW,IAAA0O,EAAA3O,GAAA,kDACA0P,IAGA3I,EAAA,IACA,OAAA4H,EAAAxL,cAEAwL,EAAAxL,eAAAwL,EAAAhL,WAAAgL,EAAA5e,MAAA4e,EAAA5e,KAAAqI,MAAAqV,KAAAkB,EAAAvO,KAAAuO,EAAAvO,IAAAhI,MAAAuV,MAGAgB,EAAAxL,cACA7D,GAAAW,IAAA0P,EAAA,4BACAhB,EAAA/M,MAAA,GACAqF,EAAA,cAMA0H,EAAA3F,EAAA2F,EAAAgB,GACAE,EAAAH,IAEA,IAAA3I,EACArH,GAAAqQ,aAAApB,EAAA3O,GAAA2O,EAAA/M,OAAA,EAAA+M,EAAA5L,gBAEArD,GAAAqQ,aAAApB,EAAA3O,GAAA2O,EAAAvO,IAAAuO,EAAAvL,YAAAuL,EAAAtL,gBAAAsL,EAAArL,UAAAqL,EAAAxL,cAAAwL,EAAAxL,aAAAwL,EAAAjL,WAAAiL,EAAA/M,OAAA,EAAA+M,EAAAhL,UAAAgL,EAAA9K,UAAA,KAAA8K,EAAAhN,UAAA,EAAAgN,EAAAjN,SAAAiN,EAAA5L,eACA4L,EAAAhL,YAEAkM,EAAAG,WAAA,EACArB,EAAA/K,WACA+K,EAAA/K,UAAAhP,MAAAib,KAKAlB,EAAAhL,YAAAgL,EAAAjN,WAAAiN,EAAAhN,UAEAkO,EAAAI,KAAAtB,GAUA,OAJAA,EAAAhL,WAAAgL,EAAAhN,UACAkO,EAAAK,OAGAL,GAUA5kB,KAAAklB,aAAA,SAAAC,EAAAC,GAIA,IAAAnH,EAAAkH,GAAA,OAAA,EAEA,IAAAxkB,EAAA0kB,EAAAhR,GAAA2F,OAAAmL,GASA,IAPAE,EAAAC,OAGAD,EAAAE,OAEAF,EAAAG,SAEA7kB,EAAA,EAAAA,EAAA0T,GAAA4F,SAAAjZ,OAAAL,IACA,GAAA0T,GAAA4F,SAAAtZ,KAAAwkB,EAAA,CACA9Q,GAAA4F,SAAAwL,OAAA9kB,EAAA,GACA,MAYA,OARAykB,GAEAC,EAAAK,UAAA,GAGAL,EAAA,YACAhR,GAAA2F,OAAAmL,IAEA,GAWAnlB,KAAAglB,KAAA,SAAAG,EAAAZ,GAEA,QAAAtG,EAAAkH,IAEA9Q,GAAA2F,OAAAmL,GAAAH,KAAAT,IAUAvkB,KAAAwlB,OAAA,SAAAL,GAEA,QAAAlH,EAAAkH,IAEA9Q,GAAA2F,OAAAmL,GAAAK,UAcAxlB,KAAA2lB,WAAA,SAAAR,EAAAS,EAAAC,EAAAC,GAEA,QAAA7H,EAAAkH,IAEA9Q,GAAA2F,OAAAmL,GAAA/N,WAAAwO,EAAAC,EAAAC,IAKA9lB,KAAAoX,WAAApX,KAAA2lB,WAWA3lB,KAAA+lB,gBAAA,SAAAZ,EAAAS,EAAAC,GAEA,QAAA5H,EAAAkH,IAEA9Q,GAAA2F,OAAAmL,GAAAY,gBAAAH,EAAAC,IAYA7lB,KAAAilB,KAAA,SAAAE,EAAAZ,GAEA,IAAA3P,EAAA,KAEAoR,EAAAzB,KAAAA,aAAAzY,QAEA,IAAAyU,KAAAlM,GAAAuP,KAEA,OADA5F,EAAAyB,GAAA,YAAAlX,EAAAgY,GAAA,QAAA,cACA,EAGA,GAAAtC,EAAAkH,EAAAa,GAkBAA,IAGAzB,GACApP,IAAAoP,QAtBA,CAGA,IAAAyB,EAAA,OAAA,EAEAA,IACAzB,GACApP,IAAAoP,IAIAA,GAAAA,EAAApP,MAEAd,GAAAW,IAAAyK,GAAA,kCAAA0F,EAAA,IAAA,GACAZ,EAAAxP,GAAAoQ,EACAvQ,EAAAP,GAAAiQ,YAAAC,GAAAU,QAiBA,OALA,OAAArQ,IAEAA,EAAAP,GAAA2F,OAAAmL,GAAAF,KAAAV,IAGA3P,GAKA5U,KAAA0B,MAAA1B,KAAAilB,KASAjlB,KAAAimB,gBAAA,SAAAd,EAAAe,EAAAC,GAEA,QAAAlI,EAAAkH,IAEA9Q,GAAA2F,OAAAmL,GAAAc,gBAAAC,EAAAC,IAYAnmB,KAAAomB,YAAA,SAAAjB,EAAAkB,GAEA,QAAApI,EAAAkH,IAEA9Q,GAAA2F,OAAAmL,GAAAiB,YAAAC,IAWArmB,KAAAslB,KAAA,SAAAH,GAEA,QAAAlH,EAAAkH,KAEA9Q,GAAAW,IAAAyK,GAAA,SAAA0F,EAAA,IAAA,GAEA9Q,GAAA2F,OAAAmL,GAAAG,SAQAtlB,KAAAsmB,QAAA,WAEA,IAAA1B,EACAvQ,GAAAW,IAAAyK,GAAA,aAAA,GAEA,IAAAmF,KAAAvQ,GAAA2F,OACA3F,GAAA2F,OAAAuM,eAAA3B,IAEAvQ,GAAA2F,OAAA4K,GAAAU,QAaAtlB,KAAAwmB,MAAA,SAAArB,GAEA,QAAAlH,EAAAkH,IAEA9Q,GAAA2F,OAAAmL,GAAAqB,SAQAxmB,KAAAymB,SAAA,WAEA,IAAA9lB,EACA,IAAAA,EAAA0T,GAAA4F,SAAAjZ,OAAA,EAAAL,GAAA,EAAAA,IACA0T,GAAA2F,OAAA3F,GAAA4F,SAAAtZ,IAAA6lB,SAYAxmB,KAAA0mB,OAAA,SAAAvB,GAEA,QAAAlH,EAAAkH,IAEA9Q,GAAA2F,OAAAmL,GAAAuB,UAQA1mB,KAAA2mB,UAAA,WAEA,IAAAhmB,EACA,IAAAA,EAAA0T,GAAA4F,SAAAjZ,OAAA,EAAAL,GAAA,EAAAA,IACA0T,GAAA2F,OAAA3F,GAAA4F,SAAAtZ,IAAA+lB,UAYA1mB,KAAA4mB,YAAA,SAAAzB,GAEA,QAAAlH,EAAAkH,IAEA9Q,GAAA2F,OAAAmL,GAAAyB,eAYA5mB,KAAA6mB,OAAA,SAAA1B,EAAA2B,GAEA,QAAA7I,EAAAkH,IAEA9Q,GAAA2F,OAAAmL,GAAA0B,OAAAC,IAaA9mB,KAAA+mB,UAAA,SAAA5B,EAAA6B,GAIA,IAAArmB,EAAAgH,EAEA,GAAAwd,IAAApR,IAAA5C,MAAAgU,IAAA6B,IAAAjT,EAAA,CACA,IAAApT,EAAA,EAAAgH,EAAA0M,GAAA4F,SAAAjZ,OAAAL,EAAAgH,EAAAhH,IACA0T,GAAA2F,OAAA3F,GAAA4F,SAAAtZ,IAAAomB,UAAA5B,GAEA,OAAA,EAKA,QAAAlH,EAAAkH,IAEA9Q,GAAA2F,OAAAmL,GAAA4B,UAAAC,IAUAhnB,KAAAinB,KAAA,SAAA9B,GAEA,IAAAxkB,EAAA,EAMA,GAJAwkB,aAAAlf,SACAkf,EAAA,MAGAA,EAUA,QAAAlH,EAAAkH,KAEA9Q,GAAAW,IAAAyK,GAAA,oBAAA0F,EAAA,KACA9Q,GAAA2F,OAAAmL,GAAA8B,QAVA,IADA5S,GAAAW,IAAAyK,GAAA,8BACA9e,EAAA0T,GAAA4F,SAAAjZ,OAAA,EAAAL,GAAA,EAAAA,IACA0T,GAAA2F,OAAA3F,GAAA4F,SAAAtZ,IAAAsmB,OAaA,OAXA5S,GAAA6F,OAAA,GAWA,GAQAla,KAAAknB,QAAA,WAEA7S,GAAA4S,QAUAjnB,KAAAmnB,OAAA,SAAAhC,GAEA,IAAAxkB,EAMA,GAJAwkB,aAAAlf,SACAkf,EAAA,MAGAA,EAUA,QAAAlH,EAAAkH,KAEA9Q,GAAAW,IAAAyK,GAAA,wBAAA0F,EAAA,KAEA9Q,GAAA2F,OAAAmL,GAAAgC,UAXA,IADA9S,GAAAW,IAAAyK,GAAA,kCACA9e,EAAA0T,GAAA4F,SAAAjZ,OAAA,EAAAL,GAAA,EAAAA,IACA0T,GAAA2F,OAAA3F,GAAA4F,SAAAtZ,IAAAwmB,SAcA,OAZA9S,GAAA6F,OAAA,GAYA,GAQAla,KAAAonB,UAAA,WAEA/S,GAAA8S,UAWAnnB,KAAAqnB,WAAA,SAAAlC,GAEA,QAAAlH,EAAAkH,IAEA9Q,GAAA2F,OAAAmL,GAAAkC,cAUArnB,KAAAsnB,aAAA,WAGA,IAAAC,EAAA,EAMA,OAJA9S,IAAA,IAAAqH,IACAyL,EAAArf,SAAAuM,GAAA+S,gBAAA,KAGAD,GAQAvnB,KAAAynB,QAAA,SAAAC,GAGA,IAAA/mB,EAOA,GALA+mB,IAAA3T,IACA2T,GAAA,GAIAlH,GAAA,OAAA,EAMA,IAJAA,IAAA,EAEAxE,EAAA,WAAA,GAEArb,EAAA0T,GAAA4F,SAAAjZ,OAAA,EAAAL,GAAA,EAAAA,IACA4c,EAAAlJ,GAAA2F,OAAA3F,GAAA4F,SAAAtZ,KAUA,OAPA4c,EAAAlJ,IAGA4H,EAAAyL,GAEA3I,GAAA4I,OAAA9nB,EAAA,OAAA0c,IAEA,GAQAvc,KAAA4nB,YAAA,SAAAC,GAEA,IAAAjT,EAaA,OAXAP,GAAAgP,WACAzO,EAAA6J,IACA3Z,KAAA+iB,MAIAjT,GAAAuM,KAEAvM,EAAAiT,GAAAxT,GAAAuP,QAAA9H,EAAA,GAAA+L,EAAA1a,MAAAqV,KAAAqF,EAAA1a,MAAAkH,GAAAsO,cAAA,MAGA/N,GAWA5U,KAAA8nB,WAAA,SAAAC,GAEA,IAAAnT,EAYA,OAVAP,GAAAgP,WACAzO,EAAA6J,IACAtJ,IAAA4S,MAIAnT,GAAAuM,KACAvM,EAAAmT,GAAA1T,GAAAuP,OAAAmE,EAAA5a,MAAAkH,GAAA+F,aAAA,MAGAxF,GAWA5U,KAAAgoB,YAAA,SAAAC,GAEA,QAAAA,EAAAnjB,OAAAiP,IAAAkU,EAAAnjB,OAAAuP,GAAAuT,YAAAK,EAAAnjB,QAEAuP,GAAAyT,WAAAG,EAAAjI,OAWAhgB,KAAAkoB,aAAA,SAAA/C,EAAAgD,GAEA,IAAAhD,EAAA,OAAA,KAEA,IAAAvQ,EAAAP,GAAA2F,OAAAmL,GAQA,OALAvQ,GAAAuT,GACA9T,GAAAW,IAAAyK,GAAA,2BAAA0F,EAAA,eAAA,GAIAvQ,GAWA5U,KAAAooB,QAAA,SAAAvC,EAAAC,GAKA,GAAA,mBAAAD,EAmBA,MAAAtd,EAAA,eAtBA,WA0BA,OApBAgY,IACAlM,GAAAW,IAAAzM,EAAA,QAPA,YAWAud,IACAA,EAAAjmB,GAGAwc,EAfA,UAeAwJ,EAAAC,GACAxJ,KAEA,GAmBAtc,KAAAqoB,UAAA,SAAAxC,EAAAC,GAEA,IAAAwC,EAAA,YAGA,GAAA,mBAAAzC,EAmBA,MAAAtd,EAAA,eAAA+f,GAIA,OApBA/H,IACAlM,GAAAW,IAAAzM,EAAA,QAAA+f,IAIAxC,IACAA,EAAAjmB,GAGAwc,EAAAiM,EAAAzC,EAAAC,GACAxJ,GAAAxX,KAAAwjB,KAEA,GAoBAtoB,KAAAuoB,YAAA,SAAAC,EAAAC,GAKA,IAAAloB,EAAAmoB,EAEA,QAAArU,GAAAa,aAAAG,eAEAyM,IAAAzN,GAAAkB,aACAkT,GAAA,iBAAAA,EAEA/c,QAAA2F,IAAAmX,EAAAC,GACA9H,GAAA8H,KAAA1U,EACArI,QAAAiV,GAAA8H,IAAAD,GAEA9c,QAAA2F,IAAAmX,GAEAnU,GAAAmB,kBAGAjV,EAAAwU,EAhBA,yBAoBA2T,EAAAzI,GAAA0I,cAAA,SAEAjI,GAAA,GAAA,IACAgI,EAAAE,UAAA,WAIAH,EADAA,IAAA1U,EACA,EAEA7L,SAAAugB,EAAA,IAGAC,EAAAG,YAAA5I,GAAA6I,eAAAN,IAEAC,IACAA,GAAA,IACAC,EAAAK,MAAAC,WAAA,QAEA,IAAAP,IACAC,EAAAK,MAAAE,MAAA,YAQA1oB,EAAA2oB,aAAAR,EAAAnoB,EAAA4oB,YAEA5oB,EAAA,MAGA,MAMA,IAAAuf,GAAA5Y,QAAA,qBACAlH,KAAAuoB,YAAA,SAAAC,GACA3oB,EAAAupB,MAAAZ,KAMAxoB,KAAAgV,IAAAhV,KAAAuoB,YAMAvoB,KAAAqpB,OAAA,WAGA,IAAA1oB,EAAAgH,EAGA,IAFAqU,EAAA,aAAA,GAEArb,EAAA,EAAAgH,EAAA0M,GAAA4F,SAAAjZ,OAAAL,EAAAgH,EAAAhH,IACA0T,GAAA2F,OAAA3F,GAAA4F,SAAAtZ,IAAA0oB,UAcArpB,KAAAspB,OAAA,SAAAC,EAAAC,GAKAnV,GAAA4F,SAAAjZ,QACAqT,GAAAW,IAAA,cAAAX,GAAA4F,SAAAjZ,OAAA,mBAAA,IAAAqT,GAAA4F,SAAAjZ,OAAA,IAAA,IAAA,OAIA,IAAAL,EAAAgH,EAAA8hB,EAEA,IAAA9oB,EAAA0T,GAAA4F,SAAAjZ,OAAA,EAAAL,GAAA,EAAAA,IACA0T,GAAA2F,OAAA3F,GAAA4F,SAAAtZ,IAAA+kB,WAKA,GAAAjR,GAEA,IAEA+M,KACAX,GAAApM,GAAAiV,WAGA9I,GAAAnM,GAAAkV,WAAAC,YAAAnV,IAEA,MAAAvU,GAIA8b,EAAA,YAAA,GAkBA,GAVA6E,GAAAD,GAAAO,GAAA1M,GAAA,KAEAJ,GAAAyF,QAAAmD,EAAAsD,GAAAO,GAAAC,GAAAV,GAAAC,GAAAE,GAAAY,GAAA/M,GAAAwF,WAAA,EAEAxF,GAAA4F,YACA5F,GAAA2F,UAEAqH,GAAA,EACA9B,IAAA,EAEAgK,EAWApJ,WATA,IAAAxf,KAAAwf,GACA,GAAAA,GAAAoG,eAAA5lB,GACA,IAAAgH,EAAA,EAAA8hB,EAAAtJ,GAAAxf,GAAAK,OAAA2G,EAAA8hB,EAAA9hB,IACAwY,GAAAxf,GAAAgH,GAAAkiB,OAAA,EAsCA,OA5BAL,GACAnV,GAAAW,IAAAyK,GAAA,kBAMApL,GAAAkH,OACAC,WAAA,MAGAnH,GAAAI,SAIAJ,GAAAoH,WAAA,EACApH,GAAAG,aAAA,EAEA3U,EAAAqkB,WAAA,WAIAsF,GACAnV,GAAA2P,oBAGA,IAEA3P,IAIArU,KAAA8pB,MAAA,WAUA,OAFA9N,EAAA,SAEA3H,GAAAiV,QAAA,GAAA,IAUAtpB,KAAA+pB,gBAAA,WASA,OAAAtV,IAAA,kBAAAA,GAAAA,GAAAuV,gBAAA,MAQAhqB,KAAAgkB,iBAAA,WAEAvD,IAAA,EACA1D,IAEAmH,WAAA,WAEA,OAAAnD,KAEA5D,IACAL,IACAiE,IAAA,GAEA,IAEA,IAEAvE,KAQAxc,KAAA0lB,SAAA,WAEArR,GAAAW,IAAAyK,GAAA,eACApL,GAAAoT,SAAA,IAYA/L,EAAA,SAAA6I,GAEA,IAAA0F,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAApqB,EAAAN,KAAA2qB,GAAA,EAAAC,KAAAC,EAAA,EAAAC,EAAA,KAEAL,GAEA7R,SAAA,KACAmS,KAAA,MAGA/qB,KAAA+U,GAAAwP,EAAAxP,GAGA/U,KAAAmlB,IAAAnlB,KAAA+U,GAEA/U,KAAAmV,IAAAoP,EAAApP,IACAnV,KAAA0jB,QAAAxH,EAAAqI,GAGAvkB,KAAAgrB,gBAAAhrB,KAAA0jB,QAGA1jB,KAAAulB,IAAAvlB,KAAAgrB,gBAGAhrB,KAAA0X,IAAA1X,KAAA0jB,QAAAhM,IACA1X,KAAA+X,OAAA/X,KAAA0jB,QAAA3L,OAGA/X,KAAAirB,SAAA,EAGAjrB,KAAA8U,GAAA,KAGA4V,GAAA1qB,KAAAmV,IAOAnV,KAAAkrB,OAMAlrB,KAAAqpB,OAAA,WAGAhV,GAAAW,IAAA1U,EAAAyU,GAAA,oBAAAzU,EAAAojB,UAYA1jB,KAAAglB,KAAA,SAAAtB,GAEA,IAAAsH,EA4BA,GA1BAtH,IAAA3P,EACAzT,EAAAilB,IAAArJ,EAAAwH,EAAApjB,EAAAojB,UAEAA,EAAApjB,EAAAojB,QACApjB,EAAAilB,IAAA7B,EACAoH,GAAAA,IAAAxqB,EAAA6U,MACA6G,EAAA,UACA1b,EAAAilB,IAAApQ,IAAA7U,EAAA6U,IACA7U,EAAA6U,IAAA,OAIA7U,EAAAilB,IAAApQ,MACA7U,EAAAilB,IAAApQ,IAAA7U,EAAA6U,KAGA7U,EAAAilB,IAAApQ,IAAAkJ,EAAA/d,EAAAilB,IAAApQ,KAGA7U,EAAA0qB,gBAAA1qB,EAAAilB,IAGAyF,EAAA1qB,EAAAilB,IAEAlR,GAAAW,IAAA1U,EAAAyU,GAAA,WAAAiW,EAAA7V,IAAA,MAEA6V,EAAA7V,MAAA7U,EAAA6U,IAEA,OADAd,GAAAW,IAAA1U,EAAAyU,GAAA,wCAAA,GACAzU,EAUA,GANAA,EAAA2qB,SAAA,IAAAnP,GAAAxb,EAAA6U,KAAA6V,EAAAtU,UAEArC,GAAAW,IAAA1U,EAAAyU,GAAA,wEAAA,GAIAiW,EAAA7V,MAAA7U,EAAA6U,KAAA,IAAA7U,EAAA2jB,YAAA,IAAA3jB,EAAA2jB,WASA,OARAjI,EAAA,QAAA,GAEA,IAAA1b,EAAA2jB,YAAA+G,EAAAlU,QAEAwI,GAAAhf,EAAA,WACA0qB,EAAAlU,OAAAnN,MAAArJ,KAAAA,EAAAsY,aAGAtY,EAYA,GAPAA,EAAA6qB,QAAA,EACA7qB,EAAA2jB,WAAA,EACA3jB,EAAA8qB,UAAA,EACA9qB,EAAA4qB,OAIA1M,GAAAwM,GAEA1qB,EAAAukB,aAAAmG,GAEAK,aAkCAhX,GAAAW,IAAA1U,EAAAyU,GAAA,qCAhCAzU,EAAAgrB,gBAAA,EAMAhrB,EAAA6U,MAAA6V,EAAA7V,MAEAd,GAAAW,IAAAgH,EAAA,UAAA,KAAAgP,EAAA7V,KAEA7U,EAAAwU,GAAAjK,IAAAmgB,EAAA7V,IAKA7U,EAAA8lB,YAAA,IAOA9lB,EAAAwU,GAAAyW,WAAA,OAIAjrB,EAAAwU,GAAA0W,QAAA,OAEAlrB,EAAAwU,GAAAuW,cAAA,OAQA,CAEA,GAAAhX,GAAAoH,UAEA,OADApH,GAAAW,IAAA1U,EAAAyU,GAAA,gCACAzU,EAGA,GAAAA,EAAAilB,IAAApQ,KAAA7U,EAAAilB,IAAApQ,IAAAhI,MAAA,UAGA,OADAkH,GAAAW,IAAA1U,EAAAyU,GAAA,kDACAzU,EAGA,IACAA,EAAA2qB,SAAA,EACA3qB,EAAAilB,IAAAxH,EAAAD,EAAAkN,IAEA1qB,EAAAilB,IAAA7O,WAAApW,EAAAilB,IAAA9N,UAAAnX,EAAAilB,IAAA/hB,QACA6Q,GAAAW,IAAA1U,EAAAyU,GAAA,wDACAzU,EAAAilB,IAAA7O,UAAA,GAGAsU,EAAA1qB,EAAAilB,IACA,IAAAzJ,EACArH,GAAAgX,MAAAnrB,EAAAyU,GAAAiW,EAAA7V,IAAA6V,EAAApT,OAAAoT,EAAAtU,SAAAsU,EAAAlT,eAEArD,GAAAgX,MAAAnrB,EAAAyU,GAAAiW,EAAA7V,MAAA6V,EAAA,SAAAA,EAAA,SAAAA,EAAArU,OAAA,IAAAqU,EAAA,SAAAA,EAAAlT,eAEA,MAAA5X,GACA8b,EAAA,UAAA,GACAD,EAAA,UAAA,GACAqB,GACAtY,KAAA,4BACA4mB,OAAA,KASA,OAFAprB,EAAA6U,IAAA6V,EAAA7V,IAEA7U,GAUAN,KAAAwlB,OAAA,WAsCA,OAhCA,IAAAllB,EAAA2jB,aAEA5P,GAAAW,IAAA1U,EAAAyU,GAAA,cAEAzU,EAAA2qB,SAUAb,IAEA9pB,EAAAwU,KAEAxU,EAAAwU,GAAA0R,QAGAsE,EAAAlM,GAAAte,EAAAwU,MAfA,IAAAgH,EACArH,GAAAkX,QAAArrB,EAAAyU,GAAAqN,IAEA3N,GAAAkX,QAAArrB,EAAAyU,IAmBAkV,KAIA3pB,GAQAN,KAAA0lB,SAAA,SAAAkG,GAEAvX,GAAAW,IAAA1U,EAAAyU,GAAA,cAEAzU,EAAA2qB,SASAb,IAEA9pB,EAAAwU,KACAxU,EAAAwU,GAAA0R,QACA5H,GAAAte,EAAAwU,IACAsM,IACA+I,IAGA7pB,EAAAwU,GAAAD,GAAA,KACAvU,EAAAwU,GAAA,QAfAxU,EAAAilB,IAAAtN,UAAA,KACAxD,GAAAoX,cAAAvrB,EAAAyU,KAmBA6W,GAEAvX,GAAA6Q,aAAA5kB,EAAAyU,IAAA,IAYA/U,KAAAilB,KAAA,SAAAvB,EAAAoI,GAEA,IAAAC,EAAAtrB,EAAA2nB,EACA4D,EAAAC,EAAAC,EACAC,GAAA,EA6BA,GA1BAJ,EAAAzrB,EAAAyU,GAAA,aAIA+W,EAAAA,IAAA/X,GAAA+X,EAEApI,IACAA,MAIApjB,EAAA6U,MACA7U,EAAAilB,IAAApQ,IAAA7U,EAAA6U,KAIA7U,EAAAilB,IAAArJ,EAAA5b,EAAAilB,IAAAjlB,EAAAojB,SAGApjB,EAAAilB,IAAArJ,EAAAwH,EAAApjB,EAAAilB,KAEAjlB,EAAAilB,IAAApQ,IAAAkJ,EAAA/d,EAAAilB,IAAApQ,KAEA7U,EAAA0qB,gBAAA1qB,EAAAilB,KAGAjlB,EAAA2qB,SAAA3qB,EAAAilB,IAAA7M,YAAApY,EAAAykB,UAMA,OALAzkB,EAAA8rB,gBACA/X,GAAAW,IAAA+W,EAAA,mDACAzrB,EAAA+rB,aAAA,IAGA/rB,EAQA,GALAke,GAAAle,EAAAilB,OACAjlB,EAAAukB,aAAAvkB,EAAAilB,KACA8E,KAGA,IAAA/pB,EAAA8qB,YAAA9qB,EAAAgsB,OAAA,CAIA,IAFAhsB,EAAAilB,IAAAhO,UAWA,OAPAlD,GAAAW,IAAA+W,EAAA,6BAAA,GAEAzrB,EAAA2qB,SAEA3qB,EAAA8lB,YAAA9lB,EAAAilB,IAAA9N,UAGAnX,EAIA+T,GAAAW,IAAA+W,EAAA,+BAAA,GAqBA,GAhBArI,EAAAvO,KAAAuO,EAAAvO,MAAA7U,EAAA6U,MAGA7U,EAAA2jB,YAAA3jB,EAAA2qB,SAAA,IAAAnP,IAAA4O,EAOApqB,EAAA0kB,KAAA1kB,EAAAilB,KALAmF,GAAA,GAWApqB,EAAA6qB,OA4CA9W,GAAAW,IAAA+W,EAAA5jB,OAAA,EAAA4jB,EAAA5kB,YAAA,YA1CA,GAAA,IAAA7G,EAAA2jB,WAAA,CAKA,GAHA5P,GAAAW,IAAA+W,EAAA,sBAGAzrB,EAAA2qB,SAAA5W,GAAAoH,UAMA,CAAA,IAAAnb,EAAA2qB,QASA,OAFA5W,GAAAW,IAAA+W,EAAA,8BAEAzrB,EANAA,EAAA0kB,KAAA1kB,EAAAilB,UANAjlB,EAAAilB,IAAA7O,UAAA,EACApW,EAAA0kB,KAAA1kB,EAAAilB,KAgBAjlB,EAAA0qB,gBAAA1qB,EAAAilB,QAEA,CAAA,GAAA,IAAAjlB,EAAA2jB,WAIA,OAFA5P,GAAAW,IAAA+W,EAAA,2BAAA,GAEAzrB,EAIA+T,GAAAW,IAAA+W,EAAA,mCA6LA,OAlLAzrB,EAAA2qB,SAAA,IAAAnP,GAAAxb,EAAAmX,SAAA,GAAAnX,EAAAmX,WAAAnX,EAAAsY,WAEAvE,GAAAW,IAAA+W,EAAA,0CACArI,EAAAjM,SAAA,GAYAnX,EAAAgsB,QAAAhsB,EAAAmX,UAAA,KAAAnX,EAAAilB,IAAA7M,WAAApY,EAAAmX,SAAA,IAGApD,GAAAW,IAAA+W,EAAA,6BAAA,GACAzrB,EAAAomB,WAIApmB,EAAAilB,IAAArJ,EAAAwH,EAAApjB,EAAAilB,OAMAjlB,EAAA2qB,SAAA,OAAA3qB,EAAAilB,IAAA9N,UAAAnX,EAAAilB,IAAA9N,SAAA,GAAA,OAAAnX,EAAAilB,IAAA/hB,MAAAlD,EAAAilB,IAAA/hB,KAAA,GAAA,OAAAlD,EAAAilB,IAAA1N,KAAA,IAAAvX,EAAAisB,eAAA,IAAAjsB,EAAA8qB,YAAA9qB,EAAAilB,IAAA7M,YAEA0P,EAAA,WAGA9nB,EAAAilB,IAAArJ,EAAAwH,EAAApjB,EAAAilB,KACAjlB,EAAA2kB,KAAA3kB,EAAAilB,MAIAjlB,EAAA2qB,UAAA3qB,EAAAgrB,gBAGAjX,GAAAW,IAAA+W,EAAA,2CAEAzrB,EAAA0kB,MAEAwH,WAAApE,KAGA9nB,EAAA2qB,SAAA3qB,EAAA6qB,QAAA7qB,EAAA2jB,YAAA,IAAA3jB,EAAA2jB,aAIA5P,GAAAW,IAAA+W,EAAA,uCAEAzrB,EAAA0kB,MACAlO,OAAAsR,KAOA9nB,EAAAilB,IAAAiF,OAOAlqB,EAAAisB,eAAAjsB,EAAAilB,IAAA/N,iBAAAlX,EAAA2qB,SAAA3qB,EAAAilB,IAAAhO,YAAA6J,KAAA9gB,EAAA2qB,SAAAnP,EAAA,IAAAxb,EAAA8rB,gBACA9rB,EAAAisB,gBAIAjsB,EAAAilB,IAAAnO,YAAA,IAAA9W,EAAA8qB,WACAd,EAAAhqB,GAGAA,EAAA8qB,UAAA,EACA9qB,EAAAgsB,QAAA,EAEAhsB,EAAAmX,SAAAnX,EAAAilB,IAAA9N,WAAA1D,GAAA5C,MAAA7Q,EAAAilB,IAAA9N,UAAA,EAAAnX,EAAAilB,IAAA9N,SAEAnX,EAAA2qB,UACA3qB,EAAAilB,IAAAxH,EAAAD,EAAAxd,EAAAilB,OAGAjlB,EAAAilB,IAAAvO,QAAA8U,IACAxrB,EAAAilB,IAAAvO,OAAArN,MAAArJ,GACAqqB,GAAA,GAGArqB,EAAAymB,UAAAzmB,EAAAilB,IAAAxN,QAAA,GACAzX,EAAAumB,OAAAvmB,EAAAilB,IAAA7N,KAAA,GAEA,IAAApX,EAAAilB,IAAA5N,cACArX,EAAA2lB,gBAAA3lB,EAAAilB,IAAA5N,cAGArX,EAAA2qB,QAeA3qB,EAAAisB,cAAA,GAIAlC,IAEA5pB,EAAAH,EAAAukB,eAEAvkB,EAAA8lB,YAAA9lB,EAAAilB,IAAA9N,UAEAhX,EAAAwkB,SAMA5Q,GAAAW,IAAA1U,EAAAyU,GAAA,mCAAAzU,EAAAisB,cAAA,OAEAP,EAAA,IAAA1I,MAAAhjB,EAAAilB,IAAApQ,KAEA8W,EAAA,WACAlN,GAAA4I,OAAAqE,EAAA,QAAAC,GACA3rB,EAAAmsB,UAAAnsB,GAEAse,GAAAoN,GACAA,EAAA,MAGAE,EAAA,WACAnN,GAAA4I,OAAAqE,EAAA,UAAAE,GACA,IACAF,EAAAU,YAAApsB,EAAAilB,IAAA9N,SA90DA,IA+0DA,MAAA9F,GACAqM,EAAA1d,EAAAyU,GAAA,kDAAAzU,EAAAilB,IAAA9N,SAh1DA,KAk1DAuU,EAAA/G,QAGAlG,GAAA4N,IAAAX,EAAA,QAAAC,GAGA3rB,EAAAilB,IAAAxN,SAAAhE,IACAiY,EAAAjU,OAAAhS,KAAAiE,IAAA,EAAAjE,KAAAC,IAAA,EAAA1F,EAAAilB,IAAAxN,OAAA,OAIAzX,EAAA4Z,QACA8R,EAAA9R,OAAA,GAGA5Z,EAAAilB,IAAA9N,SAGAsH,GAAA4N,IAAAX,EAAA,UAAAE,GAGAF,EAAA/G,SArEAkH,EAAA1X,GAAAmY,OAAAtsB,EAAAyU,GAAAzU,EAAAilB,IAAA5O,OAAA,EAAA,IAAAmF,EAAAxb,EAAAmX,SAAAnX,EAAAmX,SAlyDA,IAkyDAnX,EAAAilB,IAAAhO,YAAA,GAEA,IAAAuE,GAAAqQ,IAIA9X,GAAAW,IAAA+W,EAAA,6CAAA,GACAzrB,EAAAilB,IAAAsH,aACAvsB,EAAAilB,IAAAsH,YAAAljB,MAAArJ,MAoEAA,GAKAN,KAAA0B,MAAA1B,KAAAilB,KASAjlB,KAAAslB,KAAA,SAAAwH,GAEA,IACAC,EADA/B,EAAA1qB,EAAAilB,IAgEA,OA7DA,IAAAjlB,EAAA8qB,YAEA/W,GAAAW,IAAA1U,EAAAyU,GAAA,YAEAzU,EAAA0sB,gBAAA,GACA1sB,EAAA2sB,iBAAA,GACA3sB,EAAAgsB,QAAA,EAEAhsB,EAAA2qB,UACA3qB,EAAA8qB,UAAA,GAIAb,IAGAS,EAAAnT,IACAvX,EAAAylB,gBAAAiF,EAAAnT,IAGAvX,EAAA2qB,QASA3qB,EAAAwU,KAEAiY,EAAAzsB,EAAAmX,SAGAnX,EAAA8lB,YAAA,GAGA9lB,EAAAmX,SAAAsV,EAIAzsB,EAAAwU,GAAA0R,QAEAlmB,EAAA8qB,UAAA,EAGA9qB,EAAA4sB,WAEA9C,MA1BA3V,GAAA0Y,MAAA7sB,EAAAyU,GAAA+X,GAGA9B,EAAAtS,WACApY,EAAAklB,UA0BAllB,EAAAisB,cAAA,EACAjsB,EAAAilB,OAEAyF,EAAA3T,QACA2T,EAAA3T,OAAA1N,MAAArJ,IAKAA,GAUAN,KAAAqsB,YAAA,SAAA3V,GAEArC,GAAAW,IAAA1U,EAAAyU,GAAA,sBAAA2B,EAAA,KAAA,QACApW,EAAAilB,IAAA7O,SAAAA,EAEApW,EAAA2qB,UACAxW,GAAA2Y,aAAA9sB,EAAAyU,GAAA2B,GACAA,IAEApW,EAAAisB,eAAA,IAAAjsB,EAAA2jB,aACA3jB,EAAAisB,gBACAlY,GAAAW,IAAA1U,EAAAyU,GAAA,mCAAAzU,EAAAisB,mBAaAvsB,KAAAosB,YAAA,WAEA,OAAA9rB,EAAAilB,IAAA7O,UAWA1W,KAAAimB,gBAAA,SAAAtO,GAIA,IAAA0V,EAAAtnB,KAAAiE,IAAA,GAAAjE,KAAAC,IAAA,EAAA2R,IAQA,GALA0V,IAAA1V,GACAtD,GAAAW,IAAA1U,EAAAyU,GAAA,qBAAA4C,EAAA,uBAAA0V,EAAA,GAIA/sB,EAAA2qB,QACA,IACA3qB,EAAAilB,IAAA5N,aAAA0V,EACA/sB,EAAAwU,GAAA6C,aAAA0V,EACA,MAAAntB,GACAmU,GAAAW,IAAA1U,EAAAyU,GAAA,qBAAAsY,EAAA,aAAAntB,EAAAotB,QAAA,GAIA,OAAAhtB,GAWAN,KAAAomB,YAAA,SAAAC,GAEAA,IAAAtS,IACAsS,EAAA,GAGA,IAAA5O,EAAA8V,EAGA1lB,EAAAvH,EAAA2qB,QAAAllB,KAAAiE,IAAAqc,EAAA,GAAAtgB,KAAAC,IAAA1F,EAAAsY,UAAAtY,EAAAilB,IAAA3M,SAAA7S,KAAAiE,IAAAqc,EAAA,IAOA,GALA/lB,EAAAmX,SAAA5P,EACA0lB,EAAAjtB,EAAAmX,SAzhEA,IA0hEAnX,EAAA2sB,iBAAA3sB,EAAAmX,UACAnX,EAAAilB,IAAA9N,SAAA5P,EAEAvH,EAAA2qB,SASA,GAAA3qB,EAAAwU,GAAA,CAGA,GAAAxU,EAAAgrB,gBAEA,GAAAhrB,EAAAwU,GAAA4X,YAAAc,QAAA,KAAAD,EAAAC,QAAA,GAAA,CAOAnZ,GAAAW,IAAA1U,EAAAyU,GAAA,iBAAAwY,EAAA,KAEA,IACAjtB,EAAAwU,GAAA4X,YAAAa,GACA,IAAAjtB,EAAA8qB,WAAA9qB,EAAAgsB,SAEAhsB,EAAAwU,GAAA0R,QAEA,MAAAtmB,GACAmU,GAAAW,IAAA1U,EAAAyU,GAAA,iBAAAwY,EAAA,aAAArtB,EAAAotB,QAAA,UAKA,GAAAC,EAIA,OADAlZ,GAAAW,IAAA1U,EAAAyU,GAAA,iBAAAwY,EAAA,sCAAA,GACAjtB,EAIAA,EAAAgsB,QAGAhsB,EAAA4sB,UAAA,SA5CAzV,EAAA,IAAAqE,EAAAxb,EAAAmX,SAAA8V,EAEAjtB,EAAA2jB,YAAA,IAAA3jB,EAAA2jB,YAEAxP,GAAAgZ,aAAAntB,EAAAyU,GAAA0C,EAAAnX,EAAAgsB,SAAAhsB,EAAA8qB,UAAA9qB,EAAAilB,IAAAhO,WA8CA,OAAAjX,GAUAN,KAAAwmB,MAAA,SAAAkH,GAEA,OAAAptB,EAAAgsB,QAAA,IAAAhsB,EAAA8qB,WAAA,IAAA9qB,EAAA2jB,WAAA3jB,GAEA+T,GAAAW,IAAA1U,EAAAyU,GAAA,aACAzU,EAAAgsB,QAAA,EAEAhsB,EAAA2qB,SAKA3qB,EAAAukB,eAAA2B,QACA4D,MALAsD,GAAAA,IAAA3Z,IACAU,GAAAkZ,OAAArtB,EAAAyU,GAAAzU,EAAAilB,IAAAhO,WAOAjX,EAAAilB,IAAAtO,SACA3W,EAAAilB,IAAAtO,QAAAtN,MAAArJ,GAGAA,IAkBAN,KAAA0mB,OAAA,WAEA,IAAAsE,EAAA1qB,EAAAilB,IAEA,OAAAjlB,EAAAgsB,QAEAjY,GAAAW,IAAA1U,EAAAyU,GAAA,cACAzU,EAAAgsB,QAAA,EACAhsB,EAAA8qB,UAAA,EAEA9qB,EAAA2qB,SAYA3qB,EAAAukB,eAAAI,OACAoF,MAXAW,EAAA9S,cAAA8S,EAAAtS,WAEApY,EAAA8lB,YAAA9lB,EAAAmX,UAIAhD,GAAAkZ,OAAArtB,EAAAyU,GAAAiW,EAAAzT,aASAoT,GAAAK,EAAAhU,QAEAgU,EAAAhU,OAAArN,MAAArJ,GACAqqB,GAAA,GAEAK,EAAA9T,UAEA8T,EAAA9T,SAAAvN,MAAArJ,GAIAA,GAlCAA,GA4CAN,KAAA4mB,YAAA,WAIA,OAFAvS,GAAAW,IAAA1U,EAAAyU,GAAA,mBAEA,IAAAzU,EAAA8qB,WACA9qB,EAAA2kB,MACAxN,SAAA,IAAAqE,GAAAxb,EAAA2qB,QAAA3qB,EAAAmX,SAvrEA,IAurEAnX,EAAAmX,WAEAnX,IAGAA,EAAAgsB,OACAhsB,EAAAomB,SAEApmB,EAAAkmB,QAGAlmB,IAWAN,KAAA6mB,OAAA,SAAAC,EAAA8G,GAqBA,OAnBA9G,IAAA/S,IACA+S,EAAA,GAGA8G,IAAA7Z,IACA6Z,GAAA,GAGAttB,EAAA2qB,SACAxW,GAAAoZ,QAAAvtB,EAAAyU,GAAA+R,GAGAxmB,EAAAilB,IAAA7N,IAAAoP,EAEA8G,IACAttB,EAAAoX,IAAAoP,EACAxmB,EAAAojB,QAAAhM,IAAAoP,GAGAxmB,GAWAN,KAAA+mB,UAAA,SAAAC,EAAA8G,GAwCA,OA/BA9G,IAAAjT,IACAiT,EAAA,KAGA8G,IAAA/Z,IACA+Z,GAAA,GAGAxtB,EAAA2qB,QAIA3qB,EAAAwU,KAEAT,GAAA6F,QAAA5Z,EAAA4Z,QACA5Z,EAAA4Z,OAAA,EACA5Z,EAAAwU,GAAAoF,OAAA,GAIA5Z,EAAAwU,GAAAiD,OAAAhS,KAAAiE,IAAA,EAAAjE,KAAAC,IAAA,EAAAghB,EAAA,OAVAvS,GAAAsZ,WAAAztB,EAAAyU,GAAAV,GAAA6F,QAAA5Z,EAAA4Z,OAAA5Z,EAAA4Z,MAAA,EAAA8M,GAcA1mB,EAAAilB,IAAAxN,OAAAiP,EAEA8G,IACAxtB,EAAAyX,OAAAiP,EACA1mB,EAAAojB,QAAA3L,OAAAiP,GAGA1mB,GAUAN,KAAAinB,KAAA,WAUA,OARA3mB,EAAA4Z,OAAA,EAEA5Z,EAAA2qB,QAEA3qB,EAAAwU,KACAxU,EAAAwU,GAAAoF,OAAA,GAFAzF,GAAAsZ,WAAAztB,EAAAyU,GAAA,GAKAzU,GAUAN,KAAAmnB,OAAA,WAEA7mB,EAAA4Z,OAAA,EACA,IAAA8T,EAAA1tB,EAAAilB,IAAAxN,SAAAhE,EAQA,OANAzT,EAAA2qB,QAEA3qB,EAAAwU,KACAxU,EAAAwU,GAAAoF,OAAA,GAFAzF,GAAAsZ,WAAAztB,EAAAyU,GAAAiZ,EAAA1tB,EAAAilB,IAAAxN,OAAAzX,EAAAojB,QAAA3L,QAKAzX,GAUAN,KAAAqnB,WAAA,WAEA,OAAA/mB,EAAA4Z,MAAA5Z,EAAA6mB,SAAA7mB,EAAA2mB,QAaAjnB,KAAA2lB,WAAA,SAAAC,EAAAC,EAAAC,GAWA,OAPA8E,EAAA9oB,MACA2V,SAAAvP,SAAA0d,EAAA,IACAqI,OAAApI,EACAqI,MAAApI,IAAA/R,EAAA+R,EAAAxlB,EACAupB,OAAA,IAGAvpB,GAKAN,KAAAoX,WAAApX,KAAA2lB,WAUA3lB,KAAA+lB,gBAAA,SAAAH,EAAAC,GAEA,IAAAllB,EAIA,GAFAilB,EAAA1d,SAAA0d,EAAA,KAEAzU,MAAAyU,GAKA,IAAAjlB,EAAA,EAAAA,EAAAiqB,EAAA5pB,OAAAL,IAEAilB,IAAAgF,EAAAjqB,GAAA8W,WAGAoO,GAAAA,IAAA+E,EAAAjqB,GAAAstB,SAEArD,EAAAjqB,GAAAkpB,OAEAgB,IAGAD,EAAAnF,OAAA9kB,EAAA,MAUAX,KAAAmuB,mBAAA,WAEA,IAAAxtB,EAAAytB,EAAAzmB,EAAAijB,EAAA5pB,OAEA,IAAA2G,IAAArH,EAAA8qB,WAAAP,GAAAljB,EAAA,OAAA,EAEA,IAAAhH,EAAAgH,EAAA,EAAAhH,GAAA,EAAAA,MAEAytB,EAAAxD,EAAAjqB,IAEAkpB,OAAAvpB,EAAAmX,UAAA2W,EAAA3W,WAEA2W,EAAAvE,OAAA,EACAgB,IACAuD,EAAAH,OAAAtkB,MAAAykB,EAAAF,OAAAE,EAAA3W,WAGA9P,EAAAijB,EAAA5pB,QAMA,OAAA,GAIAhB,KAAAitB,iBAAA,SAAArH,GAGA,IAAAjlB,EAAAytB,EAAAzmB,EAAAijB,EAAA5pB,OAEA,IAAA2G,EAAA,OAAA,EAEA,IAAAhH,EAAAgH,EAAA,EAAAhH,GAAA,EAAAA,KAEAytB,EAAAxD,EAAAjqB,IAEAkpB,OAAAjE,GAAAwI,EAAA3W,WACA2W,EAAAvE,OAAA,EACAgB,KAKA,OAAA,GASAL,EAAA,WAEA,IAGA9oB,EAAAC,EAHAqpB,EAAA1qB,EAAAilB,IACA/lB,EAAAwrB,EAAAxnB,KACArD,EAAA6qB,EAAAnT,GAwCA,OArCAlW,EAAA,WAGA0S,GAAAW,IAAA1U,EAAAyU,GAAA,kBAAA5U,EAAA,aAGAG,EAAAylB,gBAAA5lB,EAAAwB,GAGArB,EAAAglB,QAIA5jB,EAAA,WAEA2S,GAAAW,IAAA1U,EAAAyU,GAAA,oBAAAvV,GAGA,OAAAW,GAAAgR,MAAAhR,IACAG,EAAAqlB,WAAAxlB,EAAAwB,IAKA,OAAAnC,GAAA2R,MAAA3R,KAGAwrB,EAAAvT,SAAAjY,EAGAwrB,EAAAzT,WAAA,EAEA7V,KAKAspB,GAIAV,EAAA,WAEA,IAAA8D,EACAC,EAAA/tB,EAAAilB,IAAAnO,WAIA,GAAAiX,EAEA,IAAAD,KAAAC,EACAA,EAAA9H,eAAA6H,IACA9tB,EAAAqlB,WAAAzd,SAAAkmB,EAAA,IAAAC,EAAAD,KAQA7D,EAAA,WAEA,IAAA6D,EACAC,EAAA/tB,EAAAilB,IAAAnO,WAIA,GAAAiX,EAEA,IAAAD,KAAAC,EACAA,EAAA9H,eAAA6H,IACA9tB,EAAAylB,gBAAA7d,SAAAkmB,EAAA,MAQA/D,EAAA,WAEA/pB,EAAA2qB,SACA/M,EAAA5d,IAKA8pB,EAAA,WAEA9pB,EAAA2qB,SACA9M,EAAA7d,KAKA2pB,EAAA,SAAAqE,GAEAA,IACA1D,KACAC,EAAA,GAGAF,GAAA,EAEArqB,EAAAiuB,UAAA,KACAjuB,EAAAwU,GAAA,KACAxU,EAAAgrB,gBAAA,EACAhrB,EAAAkuB,YAAA,KACAluB,EAAAmuB,WAAA,KACAnuB,EAAAsY,SAAAtY,EAAAilB,KAAAjlB,EAAAilB,IAAA3M,SAAAtY,EAAAilB,IAAA3M,SAAA,KACAtY,EAAAouB,iBAAA,KACApuB,EAAAquB,YAGAruB,EAAAsa,UAEAta,EAAAsa,OAAAgU,QACAtuB,EAAAsa,OAAAiU,SAEAvuB,EAAAwuB,SAAA,EACAxuB,EAAAyuB,aAAA,EACAzuB,EAAA0qB,mBACA1qB,EAAAisB,cAAA,EACAjsB,EAAA6qB,QAAA,EACA7qB,EAAA0uB,YAGA1uB,EAAA2jB,WAAA,EAEA3jB,EAAA4Z,OAAA,EACA5Z,EAAAgsB,QAAA,EAEAhsB,EAAAoa,UACAkU,KAAA,EACAC,MAAA,GAGAvuB,EAAAqa,cACAiU,QACAC,UAGAvuB,EAAA8qB,UAAA,EACA9qB,EAAAmX,SAAA,KAEAnX,EAAA4qB,WAWAlrB,KAAAktB,SAAA,SAAA+B,GAQA,IAAArW,EAAAmS,EAAAmE,GAAA,EAAA1iB,KA8CA,OA5CAlM,EAAAiuB,WAAAU,IAIA3uB,EAAAwU,KAAAma,IAAA3uB,EAAA8qB,UAAA,GAAA,IAAA9qB,EAAA2jB,cAAA3jB,EAAAgsB,WAEA1T,EAAAtY,EAAA6uB,yBAEA1E,EAAA7R,WAEA6R,EAAA7R,SAAAA,EACAtY,EAAAsY,SAAAA,EACAsW,GAAA,GAKA5uB,EAAAouB,iBAAApuB,EAAAsY,UAEAmS,EAxoFA,IAwoFAzqB,EAAAwU,GAAA4X,aAAA,KAEAjC,EAAAM,OAEAN,EAAAM,KAAAA,EACAmE,GAAA,IAIAA,GAAAD,IAEA3uB,EAAA8uB,cAAArE,EAAAve,EAAAA,EAAAA,EAAAA,IAcA0iB,GAIAlvB,KAAAmvB,oBAAA,WAEA,IAAAnE,EAAA1qB,EAAAilB,IAEAxU,EAAAzQ,EAAAwU,IAAAxU,EAAAwU,GAAA8D,SAzqFA,IAyqFAtY,EAAAwU,GAAA8D,SAAAoS,GAAAA,EAAApS,SAAAoS,EAAApS,SAAA,KAGA,OAFA7H,IAAAI,MAAAJ,IAAAA,IAAAxG,EAAAA,EAAAwG,EAAA,MAMA/Q,KAAAqvB,YAAA,SAAA5uB,EAAA6uB,IAQA7uB,EAAA8uB,MAAAD,EAAA,GACAjb,GAAAW,IAAA,0CAAA,GAIAvU,EAAA8uB,KAAAD,EAAA,EAAA,OAAA,IAIAtvB,KAAA6kB,aAAA,SAAAnB,GAEA,IAGA8L,EAHAxE,EAAA9O,EAAA5b,EAAAilB,IAAA7B,GACAjjB,EAAA2gB,GAAA5B,GAAAlf,EAAAwU,GACA2a,EAAAC,UAAA1E,EAAA7V,KAuBA,GAdAiM,GAEAqO,IAAAC,UAAA1Q,MAEAwQ,GAAA,GAGAC,IAAAC,UAAA5E,KAGA0E,GAAA,GAIA/uB,EAAA,CAEA,GAAAA,EAAAoU,GAEA,GAAAuM,GAEA3gB,EAAAoU,IAAApU,EAAAoU,GAAAuW,YAAAoE,GAGA/uB,EAAAoU,GAAAyQ,YAIA,IAAAlE,IAAAqO,IAAAC,UAAA5E,GAKA,OAFAxqB,EAAA+uB,YAAA5uB,EAAAuqB,EAAArU,OAEAlW,EAMA+uB,IAIA1E,GACAb,GAAA,GAKAxpB,EAAAoK,IAAAmgB,EAAA7V,IAEA7U,EAAA6U,IAAA6V,EAAA7V,IAEA2V,EAAAE,EAAA7V,IAEA6J,GAAAgM,EAAA7V,IAEA1U,EAAA4qB,cAAA,QAMAL,EAAAvU,UAAAuU,EAAAtU,UAEApW,EAAAwU,GAAA,IAAAwO,MAAA0H,EAAA7V,KACA7U,EAAAwU,GAAAkQ,QAKA1kB,EAAAwU,GAAA6M,IAAA4B,MAAA7J,UAAA,GAAA,IAAA4J,MAAA,MAAA,IAAAA,OAKA7iB,EAAAH,EAAAwU,IAEAuW,cAAA,EAEAjK,KAEA5B,GAAA/e,GAgCA,OA1BAH,EAAA2qB,SAAA,EAGA3qB,EAAAwU,GAAArU,EAGAA,EAAAoU,GAAAvU,EAEA4pB,IAEA5pB,EAAA+uB,YAAA5uB,EAAAuqB,EAAArU,OAEAqU,EAAAvU,UAAAuU,EAAAtU,SAEApW,EAAA0kB,QAKAvkB,EAAA8qB,YAAA,EAGA9qB,EAAA+qB,QAAA,QAIA/qB,GAIAypB,EAAA,WAMA,SAAAyC,EAAAgD,EAAAhb,EAAAib,GACA,OAAAtvB,EAAAwU,GAAAxU,EAAAwU,GAAA+a,iBAAAF,EAAAhb,EAAAib,IAAA,GAAA,KALA,GAAAtvB,EAAAwU,GAAAgb,cAAA,OAAA,EAEA,IAAAtwB,EAMAc,EAAAwU,GAAAgb,eAAA,EAEA,IAAAtwB,KAAA2f,GACAA,GAAAoH,eAAA/mB,IACAmtB,EAAAntB,EAAA2f,GAAA3f,IAIA,OAAA,GAIA2qB,EAAA,WAMA,SAAAxC,EAAAgI,EAAAhb,EAAAib,GACA,OAAAtvB,EAAAwU,GAAAxU,EAAAwU,GAAAib,oBAAAJ,EAAAhb,EAAAib,IAAA,GAAA,KAHA,IAAApwB,EAMA6U,GAAAW,IAAA1U,EAAAyU,GAAA,8BACAzU,EAAAwU,GAAAgb,eAAA,EAEA,IAAAtwB,KAAA2f,GACAA,GAAAoH,eAAA/mB,IACAmoB,EAAAnoB,EAAA2f,GAAA3f,KAWAQ,KAAAgwB,QAAA,SAAAC,GAEA,IAAAlE,EAEAmE,IAAAD,IAAA3vB,EAAA2qB,SAAA,IAAAnP,GAAAxb,EAAAsY,SA+BA,OA5BAmT,EAAAzrB,EAAAyU,GAAA,KACAV,GAAAW,IAAA+W,GAAAmE,EAAA,WAAA,mCAAA5vB,EAAAsY,SAAA,KAAA,mCAAA,KAAAtY,EAAA6U,IAAA,KAAA+a,EAAA,EAAA,GAEAA,GAAA5vB,EAAA2qB,WACA,IAAA5W,GAAAyG,QAAAO,UACAhH,GAAAW,IAAA+W,EAAAxjB,EAAA,SAAA,IAEA,IAAA8L,GAAAyG,QAAAQ,SACAjH,GAAAW,IAAA+W,EAAAxjB,EAAA,WAAA,IAKAjI,EAAA6qB,OAAA+E,EACA5vB,EAAA2jB,WAAAiM,EAAA,EAAA,EACA5vB,EAAA0sB,gBAAA,GAEAkD,GAAA5vB,EAAA2qB,SAEA3qB,EAAA6vB,WAGA7vB,EAAAilB,IAAAzO,QACAwI,GAAAhf,EAAA,WACAA,EAAAilB,IAAAzO,OAAAnN,MAAArJ,GAAA4vB,OAIA,GAIAlwB,KAAAmwB,SAAA,SAAAC,EAAAhV,GAGA9a,EAAAilB,IAAA1O,SACAyI,GAAAhf,EAAA,WACAA,EAAAilB,IAAA1O,QAAAlN,MAAArJ,GAAA8vB,EAAAhV,OAMApb,KAAAgtB,gBAAA,SAAAqD,GAGA,OAAA,IAAA/vB,EAAA8qB,cAEAiF,GAAA/vB,EAAAyuB,cAAAsB,IAAA/vB,EAAAyuB,eAEAzuB,EAAAyuB,YAAA,IAAAsB,EAEA/vB,EAAAilB,IAAAjN,iBACAjE,GAAAW,IAAA1U,EAAAyU,GAAA,0BAAAsb,GACA/vB,EAAAilB,IAAAjN,eAAA3O,MAAArJ,GAAA+vB,MAGA,KASArwB,KAAAswB,WAAA,WAOA,OALAhwB,EAAAilB,IAAAgL,YACAlc,GAAAW,IAAA1U,EAAAyU,GAAA,wBACAzU,EAAAilB,IAAAgL,UAAA5mB,MAAArJ,KAGA,GASAN,KAAAwwB,WAAA,SAAAC,EAAAC,EAAA7vB,GAEAP,EAAAwuB,WACAza,GAAAW,IAAA1U,EAAAyU,GAAA,cAAAzU,EAAAwuB,SAAA,MAAA2B,GAEAnwB,EAAAilB,IAAAtN,WAAA,IAAA3X,EAAAwuB,SACAxuB,EAAAilB,IAAAtN,UAAAwY,EAAAC,EAAA7vB,GAEAwT,GAAAW,IAAA1U,EAAAyU,GAAA,uBAUA/U,KAAA2wB,WAAA,SAAAF,EAAAC,EAAA7vB,GAEAP,EAAAilB,IAAAqL,WACAtwB,EAAAilB,IAAAqL,UAAAH,EAAAC,EAAA7vB,IAKAb,KAAAysB,UAAA,WAGA,IAAAoE,EAAAvwB,EAAAilB,IAAAjO,SAEAhX,EAAA0sB,gBAAA,GACA1sB,EAAA2sB,iBAAA,GAGA3sB,EAAAisB,gBAEAjsB,EAAAisB,gBAEAjsB,EAAAisB,gBAGAhC,IAGAjqB,EAAA8qB,UAAA,EACA9qB,EAAAgsB,QAAA,EACAhsB,EAAAisB,cAAA,EACAjsB,EAAA0qB,mBACA1qB,EAAAilB,OACA6E,IAGA9pB,EAAA2qB,UACA3qB,EAAAmX,SAAA,IAKAnX,EAAAisB,gBAAAjsB,EAAAilB,IAAA/N,iBAEAqZ,IACAxc,GAAAW,IAAA1U,EAAAyU,GAAA,gBACAuK,GAAAhf,EAAA,WACAuwB,EAAAlnB,MAAArJ,QASAN,KAAA8wB,cAAA,SAAAC,EAAAC,EAAAC,EAAAC,GAEA,IAAAlG,EAAA1qB,EAAAilB,IAEAjlB,EAAAkuB,YAAAuC,EACAzwB,EAAAmuB,WAAAuC,EACA1wB,EAAAsY,SAAA7S,KAAAqL,MAAA6f,GACA3wB,EAAA6wB,aAAAD,EAEA5wB,EAAA2qB,SAAAD,EAAA9S,YAWA5X,EAAAouB,iBAAApuB,EAAAsY,SATAoS,EAAApS,SAEAtY,EAAAouB,iBAAApuB,EAAAsY,SAAAoS,EAAApS,SAAAtY,EAAAsY,SAAAoS,EAAApS,SAEAtY,EAAAouB,iBAAAxmB,SAAA5H,EAAAmuB,WAAAnuB,EAAAkuB,YAAAluB,EAAAsY,SAAA,IAUAtY,EAAA2qB,UACA3qB,EAAAquB,WACAjtB,MAAA,EACAC,IAAArB,EAAAsY,aAKA,IAAAtY,EAAA2jB,YAAA3jB,EAAA2qB,UAAAD,EAAAjU,cACAiU,EAAAjU,aAAApN,MAAArJ,IAKAN,KAAAovB,cAAA,SAAAxJ,EAAAwL,EAAAC,EAAAC,EAAAC,GAEA,IACAC,EADAxG,EAAA1qB,EAAAilB,IAIA,OAAApU,MAAAyU,IAAA,OAAAA,IAGAtlB,EAAAmX,SAAA1R,KAAAiE,IAAA,EAAA4b,GAEAtlB,EAAA6tB,sBAEA7tB,EAAA2qB,SAAAnP,EAAA,IAEAkP,EAAA7S,aAAAiZ,IAAArd,GAAAqd,IACA9wB,EAAAoa,UACAkU,KAAAwC,EAAAK,SACA5C,MAAAuC,EAAAM,YAIA1G,EAAA5S,iBAAAiZ,IAAAtd,GAAAsd,IACA/wB,EAAAqa,cACAiU,KAAAyC,EAAAM,MAAA,KACA9C,MAAAyC,EAAAK,MAAA,OAIA3G,EAAA3S,WACAkZ,IAAAxd,GAAAwd,GAAAA,EAAAK,SACAJ,EAAAD,EAAAK,OAAAD,MAAA,KACArxB,EAAAsa,OAAA4W,EACAlxB,EAAAsa,OAAAgU,KAAA4C,EACAD,EAAAM,UAAA9d,GAAAwd,EAAAM,UACAvxB,EAAAsa,OAAAiU,MAAA0C,EAAAM,QAAAF,MAAA,QAOA,IAAArxB,EAAA8qB,YAGA9qB,EAAA2qB,SAAA,IAAAnP,GAAAxb,EAAAmX,WAAAnX,EAAAyuB,aACAzuB,EAAA0sB,gBAAA,GAGAhC,EAAA7T,cAEA6T,EAAA7T,aAAAxN,MAAArJ,KAKA,IAIAN,KAAA8xB,eAAA,SAAAC,GAQA1d,GAAAW,IAAA1U,EAAAyU,GAAA,4BAEAzU,EAAA0xB,YAAAD,EAEAzxB,EAAAilB,IAAA0M,eACA3xB,EAAAilB,IAAA0M,cAAAtoB,MAAArJ,GAAAyxB,KAKA/xB,KAAAkyB,YAAA,SAAAC,EAAAC,GAUA/d,GAAAW,IAAA1U,EAAAyU,GAAA,wBAEA,IAAApU,EAAAgH,EAAAoqB,KAEA,IAAApxB,EAAA,EAAAgH,EAAAwqB,EAAAnxB,OAAAL,EAAAgH,EAAAhH,IACAoxB,EAAAI,EAAAxxB,IAAAyxB,EAAAzxB,GAGAL,EAAA0uB,SAAA+C,EAEAzxB,EAAAilB,IAAA8M,YACA/xB,EAAAilB,IAAA8M,WAAAtxB,KAAAT,EAAAA,EAAA0uB,WAKAhvB,KAAAsyB,OAAA,SAAAC,EAAAC,GAUAne,GAAAW,IAAA1U,EAAAyU,GAAA,wBAEA,IAAApU,EAAAgH,EAAAoqB,KAEA,IAAApxB,EAAA,EAAAgH,EAAA4qB,EAAAvxB,OAAAL,EAAAgH,EAAAhH,IACAoxB,EAAAQ,EAAA5xB,IAAA6xB,EAAA7xB,GAGAL,EAAA4qB,IAAAhP,EAAA5b,EAAA4qB,IAAA6G,GAEAzxB,EAAAilB,IAAA3O,OACAtW,EAAAilB,IAAA3O,MAAAjN,MAAArJ,IAOAN,KAAAyyB,WAAA,SAAAC,GAEAA,EAAA,IAAAA,EACAre,GAAAW,IAAA1U,EAAAyU,GAAA,MAAA2d,EAAA,aAAA,wBAAApyB,EAAA6U,KAAAud,EAAA,EAAA,GACApyB,EAAAykB,UAAA2N,EAEAA,IAEApyB,EAAAwuB,SAAA,EAEA7Q,EAAA3d,EAAAyU,MACAzU,EAAA8rB,cAEA9rB,EAAA2kB,KAAAlR,EAAAzT,EAAA8rB,eACA9rB,EAAAilB,IAAA9O,UACAnW,EAAA0kB,QAIA1kB,EAAAilB,IAAA5M,WACArY,EAAAilB,IAAA5M,UAAAhP,MAAArJ,GAAAoyB,MAOA1yB,KAAA2yB,aAAA,SAAAC,GAIAtyB,EAAA8qB,UAAA,IACA/W,GAAAW,IAAA1U,EAAAyU,GAAA,iBAAA6d,GACAtyB,EAAAilB,IAAAhN,aACAjY,EAAAilB,IAAAhN,YAAA5O,MAAArJ,KAOAN,KAAAqpB,UAUAnM,EAAA,WAEA,OAAA+C,GAAA4S,MAAA5S,GAAA6S,qBAAA,OAAA,IAIA/d,EAAA,SAAAoQ,GAEA,OAAAlF,GAAA8S,eAAA5N,IAIAjJ,EAAA,SAAA8W,EAAAC,GAGA,IAAAC,EAAA3yB,EAAA4yB,EAAAH,MAGAE,EAAAD,IAAAlf,EAAAM,GAAAmC,eAAAyc,EAEA,IAAA1yB,KAAA2yB,EAEAA,EAAA3M,eAAAhmB,IAAA4yB,EAAA5yB,KAAAwT,IAEA,iBAAAmf,EAAA3yB,IAAA,OAAA2yB,EAAA3yB,GAGA4yB,EAAA5yB,GAAA2yB,EAAA3yB,GAKA4yB,EAAA5yB,GAAA2b,EAAAiX,EAAA5yB,GAAA2yB,EAAA3yB,KAQA,OAAA4yB,GAIA7T,GAAA,SAAAsF,EAAAwO,GASAxO,EAAAqG,SAAA,IAAAnP,EAGAsX,IAFAvzB,EAAAqkB,WAAAkP,EAAA,IASAhX,GACAgM,QAAA,EACAC,UAAA,EACA7R,eAAA,EACAwB,cAAA,EACAQ,iBAAA,GAGA2D,EAAA,SAAA5b,EAAA8yB,GAOA,IAAA1yB,EACAiU,GAAA,EACA0e,EAAAD,IAAAtf,EACAmB,EAAAb,GAAAa,aACAqe,EAAAnX,EAMA,GAAA7b,IAAAwT,EAAA,CAEAa,KAEA,IAAAjU,KAAAuU,EAEAA,EAAAqR,eAAA5lB,IACAiU,EAAA9S,KAAAnB,GAKA,IAAAA,KAAA4yB,EAEAA,EAAAhN,eAAA5lB,KAEA,iBAAA0T,GAAA1T,GACAiU,EAAA9S,KAAAnB,EAAA,WACA0T,GAAA1T,aAAA6yB,SACA5e,EAAA9S,KAAAnB,EAAA,sBAEAiU,EAAA9S,KAAAnB,IASA,OAFA0T,GAAAW,IAAAzM,EAAA,QAAAqM,EAAA7S,KAAA,SAEA,EAMA,IAAApB,KAAAJ,EAEA,GAAAA,EAAAgmB,eAAA5lB,GAIA,GAAA,iBAAAJ,EAAAI,IAAA,OAAAJ,EAAAI,IAAAJ,EAAAI,aAAAkC,OAAAtC,EAAAI,aAAAmS,OAIAwgB,GAAAC,EAAAF,KAAAtf,EAGAM,GAAAgf,GAAA1yB,GAAAJ,EAAAI,GAEAuU,EAAAvU,KAAAoT,GAGAM,GAAAa,aAAAvU,GAAAJ,EAAAI,GAGA0T,GAAA1T,GAAAJ,EAAAI,IAEA4yB,EAAA5yB,KAAAoT,GAGAiK,EAAAzV,EAAA8L,GAAA1T,KAAAoT,EAAA,aAAA,aAAApT,GAAA,GAEAiU,GAAA,GAEAP,GAAA1T,aAAA6yB,SAOAnf,GAAA1T,GAAAgJ,MAAA0K,GAAA9T,EAAAI,aAAAkC,MAAAtC,EAAAI,IAAAJ,EAAAI,KAKA0T,GAAA1T,GAAAJ,EAAAI,OAIA,CAAA,GAAA4yB,EAAA5yB,KAAAoT,EAYA,OAAAoI,EAAA5b,EAAAI,GAAAA,GAPAqd,EAAAzV,EAAA8L,GAAA1T,KAAAoT,EAAA,aAAA,aAAApT,GAAA,GAEAiU,GAAA,EAaA,OAAAA,GAgBAmK,GAAA,WAUA,SAAA0U,EAAAC,GAEA,IAAAC,EAAAtvB,GAAAtD,KAAA2yB,GACAtyB,EAAAuyB,EAAA3yB,OAaA,OAXA4yB,GAEAD,EAAA,GAAA,KAAAA,EAAA,GACAvyB,EAAA,GAEAuyB,EAAAE,OAEA,IAAAzyB,GACAuyB,EAAA7xB,MAAA,GAGA6xB,EAIA,SAAAhqB,EAAAgqB,EAAArL,GAGA,IAAAwL,EAAAH,EAAAI,QACA9F,GAAA+F,EAAA1L,IAEAsL,EAEAE,EAAA7F,GAAA0F,EAAA,GAAAA,EAAA,IAEAG,EAAA7F,GAAAtkB,MAAAmqB,EAAAH,GArCA,IAAAC,EAAA/zB,EAAA,YACAm0B,GACArH,IAAAiH,EAAA,cAAA,mBACAjM,OAAAiM,EAAA,cAAA,uBA+CA,OACAjH,IATA,WACAhjB,EAAA8pB,EAAAzmB,WAAA,QASA2a,OANA,WACAhe,EAAA8pB,EAAAzmB,WAAA,YAlDA,GA6FAmS,IAIA8U,MAAAvf,EAAA,WAEAL,GAAAW,IAAAhV,KAAA6U,GAAAE,GAAA,aAMAmf,QAAAxf,EAAA,WAEA,IACA6Y,EADAjtB,EAAAN,KAAA6U,GAGA,IAAAvU,EAAAgrB,eAAA,CAaA,GARAhrB,EAAAgrB,gBAAA,EACAjX,GAAAW,IAAA1U,EAAAyU,GAAA,aACAzU,EAAA0sB,gBAAA,GAGAO,EAAAjtB,EAAAilB,IAAA9N,WAAA1D,GAAA5C,MAAA7Q,EAAAilB,IAAA9N,UAAA,KAAAnX,EAAAilB,IAAA9N,SAzjHA,IA4jHAzX,KAAA0sB,cAAAa,EAAA,CACAlZ,GAAAW,IAAA1U,EAAAyU,GAAA,kCAAAwY,GACA,IACAvtB,KAAA0sB,YAAAa,EACA,MAAA4G,GACA9f,GAAAW,IAAA1U,EAAAyU,GAAA,kCAAAwY,EAAA,YAAA4G,EAAA7G,QAAA,IAKAhtB,EAAAilB,IAAAiH,YACAlsB,EAAAilB,IAAAiH,gBAKA4H,eAAA1f,EAAA,WAEA,IAAApU,EAAAN,KAAA6U,GAEAvU,EAAA6qB,SACA7qB,EAAA0sB,gBAAA,GACA1sB,EAAAwwB,cAAAxwB,EAAAkuB,YAAAluB,EAAAmuB,WAAAnuB,EAAA6uB,uBACA7uB,EAAA0vB,SAAA,MAKAqE,eAAA3f,EAAA,WAIA,IACAkE,EADAtY,EAAAN,KAAA6U,GAGA+D,EAAAtY,EAAA6uB,sBAEAhe,MAAAyH,IAAAA,IAAAtY,EAAAsY,WAEAvE,GAAAW,IAAAhV,KAAA6U,GAAAE,GAAA,qBAAA6D,EAAA,KAAAtY,EAAAsY,SAAA,gBAAAtY,EAAAsY,SAAA,KAEAtY,EAAAouB,iBAAApuB,EAAAsY,SAAAA,KAeA0b,MAAA5f,EAAA,WAEA,IAAApU,EAAAN,KAAA6U,GAEAR,GAAAW,IAAA1U,EAAAyU,GAAA,WAEAzU,EAAAmsB,cAIA9gB,MAAA+I,EAAA,WAEA,IAAA0G,EAAAsD,GAAA1e,KAAA2L,MAAA9K,OAAA,KACAwT,GAAAW,IAAAhV,KAAA6U,GAAAE,GAAA,uBAAA/U,KAAA2L,MAAA9K,MAAAua,EAAA,KAAAA,EAAA,IAAA,KACApb,KAAA6U,GAAAmb,SAAA,GACAhwB,KAAA6U,GAAAsb,SAAAnwB,KAAA2L,MAAA9K,KAAAua,KAIAmZ,WAAA7f,EAAA,WAEA,IAAApU,EAAAN,KAAA6U,GAEAR,GAAAW,IAAA1U,EAAAyU,GAAA,gBAGAzU,EAAAk0B,SAAA9S,KACAphB,EAAAsY,SAAAtY,EAAA6uB,yBAKAsF,eAAA/f,EAAA,WAEAL,GAAAW,IAAAhV,KAAA6U,GAAAE,GAAA,sBAIA2f,UAAAhgB,EAAA,WAEAL,GAAAW,IAAAhV,KAAA6U,GAAAE,GAAA,eAEA/U,KAAA6U,GAAAmY,gBAAA,KAIA/H,KAAAvQ,EAAA,WAIA1U,KAAA6U,GAAAmY,gBAAA,KAIA2H,QAAAjgB,EAAA,WAEAL,GAAAW,IAAAhV,KAAA6U,GAAAE,GAAA,aAAA9O,OAAAC,aAAA,OAEAlG,KAAA6U,GAAAmY,gBAAA,KAIA4H,SAAAlgB,EAAA,SAAAxU,GAIA,IACAS,EAAAgH,EAAAktB,EADAv0B,EAAAN,KAAA6U,GACA8Z,EAAA,EACAmG,EAAA,aAAA50B,EAAA4E,KACAiwB,EAAA70B,EAAAkN,OAAAuhB,SAEAxD,EAAAjrB,EAAAirB,QAAA,EACA6J,EAAA90B,EAAA80B,OAAA,EAKA,GAFA10B,EAAAquB,YAEAoG,GAAAA,EAAA/zB,OAAA,CAOA,IAAAL,EAAA,EAAAgH,EAAAotB,EAAA/zB,OAAAL,EAAAgH,EAAAhH,IACAL,EAAAquB,SAAA7sB,MACAJ,MA1sHA,IA0sHAqzB,EAAArzB,MAAAf,GACAgB,IA3sHA,IA2sHAozB,EAAApzB,IAAAhB,KAWA,GANAguB,EAhtHA,KAgtHAoG,EAAApzB,IAAA,GAAAozB,EAAArzB,MAAA,IAGAypB,EAAAplB,KAAAC,IAAA,EAAA2oB,GAntHA,IAmtHAzuB,EAAAkN,OAAAwL,WAGAkc,GAAAC,EAAA/zB,OAAA,EAAA,CAGA,IAFA6zB,KACAltB,EAAAotB,EAAA/zB,OACAL,EAAA,EAAAA,EAAAgH,EAAAhH,IACAk0B,EAAA/yB,KA1tHA,IA0tHA5B,EAAAkN,OAAAuhB,SAAAjtB,MAAAf,GAAA,IA1tHA,IA0tHAT,EAAAkN,OAAAuhB,SAAAhtB,IAAAhB,IAEA0T,GAAAW,IAAAhV,KAAA6U,GAAAE,GAAA,2BAAA8f,EAAA9yB,KAAA,OAGA+yB,IAAA3jB,MAAAga,IACA9W,GAAAW,IAAAhV,KAAA6U,GAAAE,GAAA,eAAAhP,KAAAqL,MAAA,IAAA+Z,GAAA,YAMAha,MAAAga,KAGA7qB,EAAAwwB,cAAA3F,EAAA6J,EAAA10B,EAAA6uB,uBACAhE,GAAA6J,GAAA7J,IAAA6J,GAEA7V,GAAAiV,eAAArzB,KAAAf,KAAAE,MAOA+0B,WAAAvgB,EAAA,WAEAL,GAAAW,IAAAhV,KAAA6U,GAAAE,GAAA,kBAIAmgB,QAAAxgB,EAAA,SAAAxU,GAGA,IAAAI,EAAAN,KAAA6U,GAEAR,GAAAW,IAAAhV,KAAA6U,GAAAE,GAAA,aACAoK,GAAAyV,SAAA7zB,KAAAf,KAAAE,GACAI,EAAAgwB,eAIA6E,QAAAzgB,EAAA,WAEAL,GAAAW,IAAAhV,KAAA6U,GAAAE,GAAA,eAIAqgB,WAAA1gB,EAAA,WAEA1U,KAAA6U,GAAAqY,aAIAmI,QAAA3gB,EAAA,WAEA,IAAApU,EAAAN,KAAA6U,GAGAR,GAAAW,IAAAhV,KAAA6U,GAAAE,GAAA,aAGAzU,EAAA0sB,gBAAA,MAMAxO,GAAA,SAAA8W,GAuBA,SAjBAA,KAAAA,EAAAxwB,MAAAwwB,EAAAngB,KAAAmgB,EAAA5c,gBAKA4c,EAAA5c,WAAA4c,EAAAxwB,MAAAqP,EAAAmhB,EAAAxwB,SAQAwwB,EAAAxwB,KAAA2Z,IAAA3Z,KAAAwwB,EAAAxwB,OAAA2Z,IAAAtJ,IAAAmgB,EAAAngB,OAAAd,GAAAoH,WAAA6Z,EAAAngB,IAAAhI,MAAA,aAQAyR,GAAA,SAAA2W,GAUA,IAAApgB,EAwBA,OAtBAogB,IAIApgB,EAAAuM,GAAAU,GAAA/N,GAAAkH,MAAAiI,YAAA,aA5zHA,2FA4zHApB,GAEAmT,EAAA1qB,IAAAsK,EAGAogB,EAAAC,iBAAAzhB,IACAwhB,EAAAlK,cAAA,IAKAjK,KAGApC,GAAA,MAIA7J,GAIAsJ,GAAA,SAAAle,GAUA,IAAA8T,GAAA6B,gBAAA7B,GAAAgP,SAAA,OAAA,EAEA,IAGAzO,EACA/M,EACA4tB,EACArH,EANAjZ,EAAA5U,EAAA4U,KAAA,KACAugB,EAAAn1B,EAAAuE,MAAA,KACA6wB,EAAAthB,GAAAwE,aAQA,GAAA6c,GAAArhB,GAAAkH,MAAAma,KAAA3hB,EAAA,OAAAM,GAAAkH,MAAAma,KAAAvhB,EAAAuhB,GAEA,IAAA/W,GAAA,CAEAA,MAEA,IAAAyP,KAAAuH,EAEAA,EAAApP,eAAA6H,KAEAzP,GAAA7c,KAAAssB,GAEAuH,EAAAvH,GAAAnV,UACA0F,GAAAA,GAAAjS,OAAAipB,EAAAvH,GAAAnV,WAOA0F,GAAA,IAAA7L,OAAA,OAAA6L,GAAA5c,KAAA,KAAA,aAAA,KA8CA,OAzCA0zB,EAAAtgB,EAAAA,EAAA3P,cAAA2H,MAAAwR,IAAA,OAEA8W,EAAAz0B,OAmBAy0B,EAAAA,EAAA,GAjBAC,EAUAD,IAAA,KAHA5tB,EAAA6tB,EAAAxuB,QAAA,MAGAwuB,EAAAvtB,OAAA,EAAAN,GAAA6tB,GAAAvtB,OAAA,GARAyM,GAAA,EAmBA6gB,GAAAphB,GAAAkH,MAAAka,KAAA1hB,EAGAa,EAAAP,GAAAkH,MAAAka,KAAAthB,EAAAshB,IAIAC,EAAA,SAAAD,EACA7gB,EAAAP,GAAAkH,MAAAiI,aAAA1e,KAAA4wB,IAEArhB,GAAAkH,MAAAka,GAAA7gB,EAGAA,EAAAA,GAAAP,GAAAkH,MAAAma,KAAAvhB,EAAAuhB,IAGA9gB,GAIAkK,GAAA,WAqBA,SAAA8W,EAAAhvB,GAEA,IAAAivB,EAAAluB,EACAiN,GAAA,EACAkhB,GAAA,EAEA,IAAAr1B,GAAA,mBAAAA,EAAA+iB,YAAA,OAAA5O,EAEA,GAAAhO,aAAA/D,MAAA,CAIA,IAAAlC,EAAA,EAAAgH,EAAAf,EAAA5F,OAAAL,EAAAgH,EAAAhH,KAEA0T,GAAAkH,MAAA3U,EAAAjG,KAAAF,EAAA+iB,YAAA5c,EAAAjG,IAAAwM,MAAAkH,GAAAgC,cAEAyf,GAAA,EACAzhB,GAAAkH,MAAA3U,EAAAjG,KAAA,EAGA0T,GAAAI,MAAA7N,EAAAjG,MAAAiG,EAAAjG,GAAAwM,MAAAgV,KAMAvN,EAAAkhB,OAKAlhB,MADAihB,KAAAp1B,GAAA,mBAAAA,EAAA+iB,cAAA/iB,EAAA+iB,YAAA5c,MACAivB,EAAA1oB,MAAAkH,GAAAgC,YAIA,OAAAzB,EAjDA,IAAAP,GAAA6B,gBAAA7B,GAAAgP,SAMA,OAHAhP,GAAAkH,MAAAC,YAAA,EACA2F,IAAA,GAEA,EAKA,IACAiN,EAAA7sB,EAAAo0B,EAAAh1B,EADAF,EAAA6iB,QAAAvP,EAAA4N,IAAA4B,MAAA7J,UAAA,GAAA,IAAA4J,MAAA,MAAA,IAAAA,MAAA,KACAyS,KA2CAJ,EAAAthB,GAAAwE,aAEA,IAAAuV,KAAAuH,EAEA,GAAAA,EAAApP,eAAA6H,KAEA7sB,EAAA,SAAA6sB,EAEA2H,EAAA3H,GAAAwH,EAAAD,EAAAvH,GAAAtpB,MAGAixB,EAAAx0B,GAAAw0B,EAAA3H,GAGAA,EAAAjhB,MAAAgV,KAEA9N,GAAAI,MAAA2Z,IAAA,EACA/Z,GAAAI,MAAAlT,IAAA,IAIA8S,GAAAI,MAAA2Z,IAAA,EACA/Z,GAAAI,MAAAlT,IAAA,GAMAo0B,EAAAvH,IAAAuH,EAAAvH,GAAAnV,SAEA,IAAAtY,EAAAg1B,EAAAvH,GAAAnV,QAAAjY,OAAA,EAAAL,GAAA,EAAAA,IAGAo1B,EAAA,SAAAJ,EAAAvH,GAAAnV,QAAAtY,IAAAo1B,EAAA3H,GACA/Z,GAAAkH,MAAAoa,EAAAvH,GAAAnV,QAAAtY,IAAAo1B,EAAA3H,GACA/Z,GAAAI,MAAAkhB,EAAAvH,GAAAnV,QAAAtY,IAAAo1B,EAAA3H,GAgBA,OANA2H,EAAAvS,YAAA/iB,EAAAm1B,EAAA,KACAvhB,GAAAkH,MAAAW,EAAA7H,GAAAkH,MAAAwa,GAEA1hB,GAAAkH,MAAAC,WAAA+C,IACA4C,GAAA9M,GAAAkH,MAAAC,YAEA,GAIAqB,GAGAmZ,SAAA,gDACAC,MAAA,kCACAC,SAAAzW,GAAA,+CACA0W,SAAA,wDACAC,OAAA1W,GAAA,kCACA2W,SAAA,OAAA5W,GAAA,qEACA6W,SAAA,sCACAC,UAAA7W,GAAA,kBAAAO,GAAAF,SAAAuC,SAAA,8NACAkU,UAAA9W,GAAA,6DACA+W,YAAA/W,GAAA,gEACAgX,QAAAhX,GAAA,+BACAiX,aAAAjX,GAAA,kCACAkX,MAAA,0EACAC,WAAAnX,GAAA,kCACAoX,WAAApX,GAAA,8BACAqX,UAAArX,GAAA,0BACA5I,OAAA4I,GAAA,gDACAsX,SAAAvX,GAAA,qBACAc,QAAAb,GAAA,0BACAuX,QAAA,8PACAC,UAAAxX,GAAA,+BACAyX,SAAA1X,GAAA,4BACA2X,MAAA1X,GAAA,sBACA2X,QAAA,yEACAC,UAAA,gCAAA1Z,EAAAoF,YAAA,UACAuU,SAAA,eACAC,UAAA9X,GAAA,sBACA+X,OAAA,8CACAC,MAAAjY,GAAA,yCACAkY,MAAAlY,GAAA,kEACAmY,QAAA,sEACAC,SAAA,sDACAC,QAAA,wDACAC,UAAA,4EACAC,UAAAtY,GAAA,oFACAuY,SAAAvY,GAAA,oBACAwY,OAAA,yCACAzU,MAAAhE,GAAA,mCACA0Y,WAAA1Y,GAAA,sDACA2Y,WAAA3Y,GAAA,uCACA4Y,UAAA5Y,GAAA,kGACAkE,MAAAjE,GAAA,yEACA4Y,UAAA,0BAAAryB,OAAAC,aAAA,OACA4jB,MAAArK,GAAA,qCACAsE,SAAA,mDACAF,YAAA,yDACAC,aAAA,iDAKAvb,EAAA,WAMA,IAAAorB,EACAhzB,EAAAgH,EAAApH,EACAg4B,EAUA,GAPA5E,EAAAtvB,GAAAtD,KAAAiM,WAGAzM,EAAAozB,EAAAI,SAEAwE,EAAA1b,GAAAA,EAAAtc,GAAAsc,EAAAtc,GAAA,KAEAozB,GAAAA,EAAA3yB,OACA,IAAAL,EAAA,EAAAgH,EAAAgsB,EAAA3yB,OAAAL,EAAAgH,EAAAhH,IACA43B,EAAAA,EAAA7tB,QAAA,KAAAipB,EAAAhzB,IAIA,OAAA43B,GAKAza,EAAA,SAAA0a,GAQA,OALA,IAAA1c,GAAA0c,EAAA7hB,MAAA,GAAA6hB,EAAA5gB,SACAoE,EAAA,WACAwc,EAAA5gB,QAAA,GAGA4gB,GAIAza,EAAA,SAAAya,EAAAC,GAOA,OALAD,IAAAA,EAAA1gB,gBAAA0gB,EAAA5hB,OAAA4hB,EAAArgB,aAAAqgB,EAAApgB,iBAAAogB,EAAAngB,aACAhE,GAAAW,KAAAyjB,GAAA,IAAAlwB,EAAA,WACAiwB,EAAA1gB,eAAA,GAGA0gB,GAIAxa,EAAA,SAAA0a,GAGA5W,IAAApW,QAAAitB,OAAA5kB,EACArI,QAAAitB,KAAAD,GAEArkB,GAAAW,IAAA0jB,IAMA/c,EAAA,WAEA,OAAA,GAIA4B,EAAA,SAAAhd,GAEA,IAAAq4B,EAEA,IAAAA,KAAAr4B,EACAA,EAAAgmB,eAAAqS,IAAA,mBAAAr4B,EAAAq4B,KACAr4B,EAAAq4B,GAAAjd,GAIAid,EAAA,MAIApb,EAAA,SAAAkK,GAIAA,IAAA3T,IACA2T,GAAA,IAGAlH,IAAAkH,IACArT,GAAAoT,QAAAC,IAKAjK,EAAA,SAAA9D,GAEA,IAAAxE,EAEA,GAAAwE,EAEA,GAAAA,EAAAxM,MAAA,mBAKA,GAHAwM,EAAAxR,OAAAwR,EAAAnU,cAAA2B,YAAA,SAAA,GAGA,OAAAwS,OAEAA,EAAAxS,YAAA,OAAAwS,EAAA3Y,OAAA,IAGA2Y,GAAA,KAYA,OANAxE,GAAAwE,IAAA,IAAAA,EAAAxS,YAAA,KAAAwS,EAAAxR,OAAA,EAAAwR,EAAAxS,YAAA,KAAA,GAAA,MAAAkN,GAAAsF,SAEAtF,GAAAiC,aACAnB,GAAA,QAAA,IAAA0jB,MAAAC,WAGA3jB,GAIAwH,EAAA,WAMA,KAFAb,EAAA5T,SAAAmM,GAAAe,aAAA,MAEA,IAAA0G,IACAzH,GAAAW,IAAAzM,EAAA,QAAAuT,EAhvIA,IAivIAzH,GAAAe,aAAA0G,EAjvIA,GAsvIA,IAAAid,EAAA1kB,GAAAgB,WAAAhB,GAAAiB,WAAA,aAAA,OAEAjB,GAAA6B,gBAAA7B,GAAAoH,WAAApH,GAAAwE,aAAAG,IAAAD,UAAA+C,EAAA,IACAzH,GAAAW,IAAAzM,EAAA,YACA8L,GAAAe,aAAA0G,EAAA,GAGAzH,GAAAqF,QAAArF,GAAAoF,eAAApF,GAAAoH,UAAA,qBAAA,IAAAK,EAAA,iBAAA,kBAGAA,EAAA,GAGAzH,GAAAmC,eAAA0F,EAAA7H,GAAAmC,eAAAnC,GAAA2D,eACA3D,GAAAmG,SAAAC,WAAA,EAGApG,GAAAmC,eAAA0F,EAAA7H,GAAAmC,eAAAnC,GAAAmE,kBACAnE,GAAAgG,aAAAE,OAAA,IAAAzH,OAAA,WAAA2P,GAAA1gB,KAAA,KAAA,aAAA,KACAsS,GAAAmG,SAAAK,WAAA,GAIAxG,GAAAmG,SAAAK,WAAA,EAKAxG,GAAA+F,YAAA/F,GAAAgG,aAAA,IAAAyB,EAAA,SAAA,UAGAzH,GAAAsF,UAAA,IAAAmC,EAAA,oBAAA,4BAAApR,QAAA,OAAAquB,GAEA1kB,GAAAmG,SAAAE,SAAArG,GAAAmG,SAAAG,aAAAtG,GAAAmG,SAAAI,OAAAkB,EAAA,GAIAuB,EAAA,SAAA2b,EAAAC,GAEAxkB,IAIAA,GAAAykB,YAAAF,EAAAC,IAIA3b,EAAA,WAUA,GAJAjJ,GAAAmF,cAAA2f,KAAArZ,MACAzL,GAAAa,aAAAG,UAAAhB,GAAAgB,WAAA,IAGAN,EAAAV,GAAAkF,SAAA,CAIA,IAAA6f,EAAAC,EAAAC,EAAAC,EAAA33B,EAEA,GAAAyS,GAAAgB,YAAAN,EAAAV,GAAAkF,YAAAuI,KAAAzN,GAAAkB,aAAAlB,GAAAmB,aAAA,EAEA4jB,EAAAnZ,GAAA0I,cAAA,QACA5T,GAAAV,GAAAkF,QAAA,UAEAggB,GACA9hB,SAAA,QACA+hB,OAAA,MACA3K,MAAA,MACA4K,MAAA,QACAC,OAAA,QACAC,WAAA,QACAC,OAAA,MACAC,UAAA,SACAC,OAAA,iBACAC,OAAA,UACAC,WAAA,OACA/Q,MAAA,OACAgR,OAAA,OAGAb,EAAAvQ,YAAA5I,GAAA6I,eAAA,MACAsQ,EAAAc,QAAArc,EACAub,EAAAe,MAAA,2BAEAxa,GAAAxS,MAAA,aACAisB,EAAArQ,MAAAtR,SAAA,WACA2hB,EAAArQ,MAAAgR,OAAA,QAGA,IAAAn4B,KAAA23B,EACAA,EAAAhT,eAAA3kB,KACAw3B,EAAArQ,MAAAnnB,GAAA23B,EAAA33B,IAQA,GAJAy3B,EAAApZ,GAAA0I,cAAA,OACA0Q,EAAAtkB,GAAAV,GAAAkF,QACA8f,EAAAtQ,MAAAqR,QAAA/lB,GAAAgB,UAAA,QAAA,OAEAhB,GAAAgB,YAAAN,EAAAqkB,EAAArkB,IAAA,CACA,KACAukB,EAAApc,KACA2L,YAAAuQ,GACA,MAAAiB,GACA,MAAA,IAAAz5B,MAAA2H,EAAA,YAAA,MAAA8xB,EAAAj1B,YAEAk0B,EAAAzQ,YAAAwQ,IAKAC,EAAA,OAKArb,EAAAje,KAAAkoB,aAGAlM,EAAA,SAAAzb,EAAA+5B,GAEA,OAAA/5B,EAAA8T,GAAAW,IAAAzM,EAAAhI,GAAA+5B,GAAA,IAIAzc,EAAA,WAEA,IAAAtd,EAAAwU,EAAAV,GAAAkF,SACAghB,EAAAxlB,EAAAV,GAAAkF,QAAA,WAEAhZ,IAIA6f,IAEAma,EAAA7Q,UAAA,IACAnpB,EAAAwoB,MAAAqR,QAAA,SAEAG,EAAA7Q,UAAA,IACAnpB,EAAAwoB,MAAAqR,QAAA,SAGAha,IAAAA,KAIArE,EAAA,SAAAye,EAAA9H,EAAA+H,GAIA,GAAA56B,EAAA66B,cAAA3mB,EACA,IACA2mB,YAAAC,YAAAH,EAAA9H,EAAA+H,GACA,MAAAv6B,GAEA,OAAA,EAIA,OAAA,GAKAyd,EAAA,WAEA,IAAAid,KAcA,OAZAvmB,GAAAgB,WACAulB,EAAA94B,KAAA8b,EAAAsF,UAGA7O,GAAAiB,YACAslB,EAAA94B,KAAA8b,EAAAwF,YAGA/O,GAAAsB,oBACAilB,EAAA94B,KAAA8b,EAAAuF,UAGAyX,EAAA74B,KAAA,MAIA2b,EAAA,WAIA,IAAAzS,EAAA1C,EAAA,aACAsyB,EAAAxmB,GAAA0V,kBACA6Q,EAAAhd,EACAjS,GACA7G,KAAA,cAGAuP,GAAAoH,YAKApH,GAAAuP,MAwBAvP,GAAA8F,eACA9F,GAAAW,IAAA/J,EAAA,eAIAoJ,GAAA0F,MACA1F,GAAA0F,IAAA6O,WAAAjL,IAAAid,EAAA9X,WAAA8X,EAAA/gB,WAAAxF,GAAA8F,cAAA,IAAAygB,EAAA3X,aAAA,KAAAlhB,KAAA,QA5BAof,KAEA9M,GAAA0F,IAAA6O,UAAAjL,IAAA,IAAAid,EAAA9X,WAAA,KAAA,OAAA+X,EAAAD,EAAA5X,YAAA4X,EAAA7X,UACA1O,GAAAW,IAAA/J,EAAA,KAAA1C,EAAA,cAAAsyB,EAAA,KAAAtyB,EAAA,YAAA,IAAA,MAGA8L,GAAA8F,eAAA,EAGAmC,GACAxX,KAAA,YACAg2B,YAAA,EACAnvB,MAAAA,IAGAyR,EAAAzR,MAoBA0Q,EAAA,SAAAiM,EAAAzC,EAAAC,GAEA3F,GAAAmI,KAAAvU,IACAoM,GAAAmI,OAGAnI,GAAAmI,GAAAxmB,MACAmsB,OAAApI,EACAqI,MAAApI,GAAA,KACA+D,OAAA,KAKAvN,EAAA,SAAAiI,GAWA,GAPAA,IACAA,GACAzf,KAAAuP,GAAAuP,KAAA,UAAA,eAKArD,IAAAgE,IAAAA,EAAAuW,WAAA,OAAA,EAGA,GAAA,cAAAvW,EAAAzf,OAAAuP,GAAAuP,MAAApD,KAAA+D,EAAAuW,YAAA,OAAA,EAEA,IAOAn6B,EAAAgH,EAPAozB,GACAC,QAAAzW,GAAAA,EAAAuW,WAAAzmB,GAAAuP,MAAApD,IAIAya,EAAA1W,GAAAA,EAAAzf,KAAAqb,GAAAoE,EAAAzf,aAEAsyB,KACAzD,GAAAoH,GACAG,EAAA/Z,KAAA9M,GAAAuP,KAMA,IAJAW,EAAA5Y,QACAgoB,EAAA,GAAAhoB,MAAA4Y,EAAA5Y,OAGAhL,EAAA,EAAAgH,EAAAszB,EAAAj6B,OAAAL,EAAAgH,EAAAhH,KACA,IAAAs6B,EAAAt6B,GAAAkpB,OACAuN,EAAAt1B,KAAAm5B,EAAAt6B,IAIA,GAAAy2B,EAAAp2B,OAGA,IAAAL,EAAA,EAAAgH,EAAAyvB,EAAAp2B,OAAAL,EAAAgH,EAAAhH,IAEAy2B,EAAAz2B,GAAAutB,MACAkJ,EAAAz2B,GAAAstB,OAAAtkB,MAAAytB,EAAAz2B,GAAAutB,MAAAyF,GAEAyD,EAAAz2B,GAAAstB,OAAAtkB,MAAA3J,KAAA2zB,GAGAuH,IAEA9D,EAAAz2B,GAAAkpB,OAAA,GAQA,OAAA,GAIAtN,EAAA,WAEA1c,EAAAqkB,WAAA,WAEA7P,GAAA4B,eACAyH,IAGApB,IAIA,mBAAAjI,GAAAyC,SACAkF,EAAA,SAAA,GACA3H,GAAAyC,OAAAnN,MAAA9J,GACAmc,EAAA,WAAA,IAGA3H,GAAAoB,mBACAsJ,GAAA4N,IAAA9sB,EAAA,OAAA0c,IAGA,IAIA0C,GAAA,WAQA,GAAA1K,KAAAR,EAAA,OAAAQ,GAEA,IAAAhQ,EAAAO,EAAAiW,EAGAogB,EAHAC,GAAA,EAAAh7B,EAAAwf,UAAAyb,EAAAx7B,EAAAy7B,cAKA,IACAH,EAAA/6B,EAAAm7B,QACA,MAAAr7B,GACAi7B,OAAAr3B,EAGA,GAAAq3B,GAAAA,EAAAn6B,OAEA8D,EAAA,iCACAiW,EAAA3a,EAAAo7B,YAEAzgB,EAAAjW,IAAAiW,EAAAjW,GAAA22B,eAAA1gB,EAAAjW,GAAA22B,cAAArgB,cACAggB,GAAA,QAGA,GAAAC,IAAAtnB,IAAA4L,GAAAxS,MAAA,cAAA,CAGA,IACA5I,EAAA,IAAA82B,EAAA,iCACA,MAAAn7B,GAEAqE,EAAA,KAGA62B,IAAA72B,EAGAA,EAAA,KAMA,OAFAgQ,GAAA6mB,EAEAA,GAIA7c,EAAA,WAEA,IAAAmd,EACAtN,EACAuN,EAAAtnB,GAAAwE,aAgCA,GA9BAyI,MAAA3B,GAAAxS,MAAA,wBAKAkH,GAAAgP,UAAA,EAGAhP,GAAAoH,WAAA,EAGApH,GAAA0F,MACA1F,GAAA0F,IAAAgP,MAAAqR,QAAA,SAGA/lB,GAAA6B,gBAEA7B,GAAAkH,OAAAlH,GAAAkH,MAAAiI,cACAnP,GAAAW,IAAA,oDACAX,GAAAgP,UAAA,GAIAxB,IACAxN,GAAAW,IAAA0K,GAAA,gHAAAnL,GAAA,oDAAA,6DAAA,IAMAF,GAAA6B,eAAA7B,GAAAgP,SAAA,CAKA/E,GAAA,EAEA,IAAA8P,KAAAuN,EAEAA,EAAApV,eAAA6H,IAEAuN,EAAAvN,GAAArV,WAEA1E,GAAAkH,MAAAiI,YAAAmY,EAAAvN,GAAAtpB,MAMAuP,GAAAC,cAAAD,GAAAI,MAAA2Z,IAAA/Z,GAAAI,MAAAknB,EAAAvN,GAAAtpB,SAGA42B,GAAA,IANApd,GAAA,EACAod,GAAA,IAyBA,OAPArnB,GAAAG,cACAknB,GAAA,EACApd,GAAA,GAGAjK,GAAAoH,UAAApH,GAAAgP,UAAAhP,GAAA6B,gBAAAwlB,GAEArnB,GAAAoH,WAIA4C,EAAA,SAAAlJ,GAOA,IAAAxU,EAAAgH,EAAAiN,EAAAgnB,EAAA,EAEA,GAAAzmB,aAAAtS,MAAA,CAGA,IAAAlC,EAAA,EAAAgH,EAAAwN,EAAAnU,OAAAL,EAAAgH,EAAAhH,IAEA,GAAAwU,EAAAxU,aAAAmL,QAGA,GAAAuI,GAAAuT,YAAAzS,EAAAxU,GAAAmE,MAAA,CACA82B,EAAAj7B,EACA,YAGA,GAAA0T,GAAAyT,WAAA3S,EAAAxU,IAAA,CAGAi7B,EAAAj7B,EACA,MAOAwU,EAAAymB,GAAAzmB,MACAA,EAAAymB,GAAAzmB,EAAAymB,GAAAzmB,KAGAP,EAAAO,EAAAymB,QAKAhnB,EAAAO,EAIA,OAAAP,GAKAsJ,EAAA,SAAA0G,GAMAA,EAAA2J,YAEA3J,EAAA2J,WAAA,GAEA3M,IAAAvN,GAAAwB,uBAEA,OAAAoL,IAAA,IAAAD,KAEAC,GAAA4a,YAAAzd,EAAA/J,GAAAwB,uBAIAmL,QAQA7C,EAAA,SAAAyG,GAMAA,EAAA2J,YAEA3J,EAAA2J,WAAA,GAEA3M,IAAAvN,GAAAwB,sBAIAmL,OAQA5C,EAAA,WAOA,IAAAzd,EAEA,GAAA,OAAAsgB,KAAAD,GAQA,OAJA8a,cAAA7a,SAEAA,GAAA,MAQA,IAAAtgB,EAAA0T,GAAA4F,SAAAjZ,OAAA,EAAAL,GAAA,EAAAA,IAEA0T,GAAA2F,OAAA3F,GAAA4F,SAAAtZ,IAAAsqB,SAAA5W,GAAA2F,OAAA3F,GAAA4F,SAAAtZ,IAAA4tB,WACAla,GAAA2F,OAAA3F,GAAA4F,SAAAtZ,IAAAusB,YAOA9P,EAAA,SAAAsG,GAEAA,EAAAA,IAAA3P,EAAA2P,KAEA,mBAAArP,GAAAwC,SACAxC,GAAAwC,QAAAlN,MAAA9J,IACAiF,KAAA4e,EAAA5e,OAAAiP,EAAA2P,EAAA5e,KAAA,QAIA4e,EAAAgI,QAAA3X,GAAA2P,EAAAgI,OACArX,GAAAoT,WAKAvI,GAAA,WAGA,GAAA2C,IAAA5C,KAAA,CAKA,IAAAte,EAAAytB,EAAAuH,EAAAthB,GAAAwE,aAEA,IAAAuV,KAAAuH,EAEA,GAAAA,EAAApP,eAAA6H,KAEA,QAAAA,GAAA,QAAAA,KAEA/Z,GAAAW,IAAAyK,GAAA,8BAAA2O,EAAA,WACA/Z,GAAAkH,MAAA6S,IAAA,EAGAuH,EAAAvH,IAAAuH,EAAAvH,GAAAnV,SACA,IAAAtY,EAAAg1B,EAAAvH,GAAAnV,QAAAjY,OAAA,EAAAL,GAAA,EAAAA,IACA0T,GAAAkH,MAAAoa,EAAAvH,GAAAnV,QAAAtY,KAAA,IAiBAX,KAAA+7B,gBAAA,SAAAC,GAIA,IAAAC,EAAA5nB,GAAAyG,QAEAmhB,EAAAn3B,KAAAk3B,EACAC,EAAA7gB,YAAA6gB,EAAAlhB,MAAAkhB,EAAAlhB,MAAAihB,KAAAjoB,EAAAioB,EAAA,WAEA,kBAAAC,EAAAn3B,MAEAm3B,EAAA5gB,UAAA,EACA4gB,EAAA3gB,SAAA,EACAU,EAAA,UAAA,IAEA,qBAAAigB,EAAAn3B,MAEAm3B,EAAA5gB,UAAA,EACA4gB,EAAA3gB,SAAA,GAEA,iBAAA2gB,EAAAn3B,OAEAm3B,EAAA5gB,UAAA,EACA4gB,EAAA3gB,SAAA,IAOAtb,KAAAk8B,qBAAA,SAAAC,GAKA,IAAA9nB,GAAAwF,UAAA,CAIA,IAAA3Z,EAaA,GAXA6b,EAAA,OAAA,GACAA,EAAA,aAAA,GACA1H,GAAAwF,WAAA,EACAoI,IAAA,EAEAJ,IACA3C,MAKAid,GAAAA,EAAAzxB,QAAA,SAAA,MAAA2J,GAAAoF,cAAA/O,QAAA,SAAA,IAUA,OARAxK,EAAAuf,GAAA,mCAAApL,GAAAoF,cAAA,qCAAA0iB,EAAA,QAAA9nB,GAAAc,IAAA,qCAGA+O,WAAA,WACA,MAAA,IAAAtjB,MAAAV,IACA,GASAgkB,WAAArI,EAAA2F,GAAA,IAAA,KASArE,EAAA,SAAA7D,EAAAK,GAKA,SAAAyiB,IAIA,IACAjC,EADAzW,KAEA+M,KAGA0J,EAAA,gBAAA9lB,GAAAqF,UAAArF,GAAAoH,WAAApH,GAAA6B,cAAA7B,GAAAgP,SAAA,iBAAA,2BAAA,IAEAhP,GAAAoH,UA8BApH,GAAAwB,sBACA6N,EAAA5hB,KAAA,yBAAAuS,GAAAwB,qBAAA,QA7BAxB,GAAAC,aACAoP,EAAA5hB,KAAA,eAGAuS,GAAAsB,oBACA+N,EAAA5hB,KAAA,sBAGAuS,GAAAuB,sBACA8N,EAAA5hB,KAAA,yBAAAuS,GAAAuB,qBAAA,OAGAvB,GAAAwB,sBACA6N,EAAA5hB,KAAA,yBAAAuS,GAAAwB,qBAAA,OAGAxB,GAAA0B,OACA2N,EAAA5hB,KAAA,UAAAuS,GAAA0B,MAAA,KAGA1B,GAAAiB,YACAoO,EAAA5hB,KAAA,cAGAuS,GAAA4B,eACAyN,EAAA5hB,KAAA,eAOA4hB,EAAA1iB,SACAyvB,EAAAA,EAAA/jB,QAAAgX,EAAA3hB,KAvCA,UA0CAsS,GAAAW,IAAAmlB,GAAA1J,EAAAzvB,OA1CA,MA0CAyvB,EAAA1uB,KAAA,MAAA,IAAA,GAEAqd,KAqCA,SAAAid,EAAApxB,EAAAxH,GACA,MAAA,gBAAAwH,EAAA,YAAAxH,EAAA,OA3FA,GAAA4c,IAAAC,GAAA,OAAA,EA2DA,GAAAjM,GAAAoH,UAcA,OAXAkB,IAEAyf,IACA/nB,GAAA0F,IAAAhF,EAAAV,GAAAiF,SACAuC,IAGAwE,IAAA,EAEAC,IAAA,GAEA,EAKA,IAOAgc,EAAAC,EAAA36B,EAAA46B,EAAAC,EAAAn8B,EAAAkM,EAAAkwB,EAPAC,EAAAhjB,GAAAtF,GAAAc,IACAynB,EAAAvoB,GAAAuF,QAAA+iB,EAEArD,EAAApc,IACA2f,EAAAlf,IACAmf,EAAA,KACAC,EAAA9c,GAAA6S,qBAAA,QAAA,GAmDA,GAhDAgK,EAAAC,GAAAA,EAAA/1B,KAAA+1B,EAAA/1B,IAAAmG,MAAA,QACAmM,EAAAA,IAAAvF,EAAAM,GAAAU,GAAAuE,EAOAqD,IACAtI,GAAAc,IAAAsI,EAAA4E,GAAAsa,EAAAC,GACAjjB,EAAAtF,GAAAc,IAEAd,GAAA0B,OAAA1B,GAAA0B,OAAA1B,GAAAsB,mBAAA,cAAAtB,GAAA0B,MAEA,OAAA1B,GAAA0B,QAAA4J,GAAAxS,MAAA,aAAAqU,KAAAnN,GAAAsB,qBAAAiK,UAAAod,SAAA7vB,MAAA,kBAMA+T,GAAApf,KAAA+a,EAAAsZ,UACA9hB,GAAA0B,MAAA,MAGAumB,GACArxB,KAAAqO,EACAvE,GAAAuE,EACAzO,IAAA8O,EACAsjB,QAAA,OACAjnB,kBAAA3B,GAAA2B,kBACAknB,QAAA7oB,GAAAqB,QACAynB,YAAA5a,GAAA,uCACA4X,MAvCA,4CAwCAr1B,KAAA,gCACAiR,MAAA1B,GAAA0B,MAEAqnB,YAAA,QAGA/oB,GAAAiB,aACAgnB,EAAAe,UAAA,WAGAhpB,GAAA0B,cAEAumB,EAAAvmB,MAGAyL,GAGA+a,EAAAtc,GAAA0I,cAAA,OACA6T,GACA,eAAAljB,EAAA,WAAAK,EAAA,WAAA2iB,EAAAx3B,KAAA,YAAAw3B,EAAAnC,MAAA,0JACAkC,EAAA,QAAA1iB,GACA0iB,EAAA,oBAAAhoB,GAAA2B,mBACAqmB,EAAA,UAAAC,EAAAW,SACA5oB,GAAA0B,MAAAsmB,EAAA,QAAAhoB,GAAA0B,OAAA,GACAsmB,EAAA,UAAAhoB,GAAAqB,SACA2mB,EAAA,cAAA,QACAhoB,GAAAiB,WAAA+mB,EAAA,YAAAC,EAAAe,WAAA,GACA,aACAt7B,KAAA,QAEA,CAEAw6B,EAAAtc,GAAA0I,cAAA,SACA,IAAA/mB,KAAA06B,EACAA,EAAA/V,eAAA3kB,IACA26B,EAAAe,aAAA17B,EAAA06B,EAAA16B,IAUA,GAJA0b,IACAuf,EAAAlf,IACA2b,EAAApc,IAMA,GAFA7I,GAAA0F,IAAAhF,EAAAV,GAAAiF,UAAA2G,GAAA0I,cAAA,OAEAtU,GAAA0F,IAAAhF,GAwEA2nB,EAAAroB,GAAA0F,IAAA6O,UACAvU,GAAA0F,IAAA6O,WAAA8T,EAAAA,EAAA,IAAA9e,EAAAkF,aAAA+Z,EAAA,IAAAA,EAAA,IACAxoB,GAAA0F,IAAA8O,YAAA0T,GAEA/a,MACAib,EAAApoB,GAAA0F,IAAA8O,YAAA5I,GAAA0I,cAAA,SACAC,UAAAhL,EAAAiF,OACA4Z,EAAA/S,UAAA8S,GAGAlc,IAAA,MAlFA,CAuCA,GArCAjM,GAAA0F,IAAAhF,GAAAV,GAAAiF,QACAjF,GAAA0F,IAAA6O,UAAAhL,EAAAkF,WAAA,IAAA+Z,EACAv8B,EAAA,KACAm8B,EAAA,KAEApoB,GAAA4B,gBACA5B,GAAAsB,mBAEArV,GACAmX,SAAA,QACAgiB,MAAA,MACAC,OAAA,MAEAF,OAAA,MACA5K,KAAA,MACA2O,SAAA,WAIAj9B,GACAmX,SAAA,WACAgiB,MAAA,MACAC,OAAA,MACA8D,IAAA,UACA5O,KAAA,WAEAkO,IACAx8B,EAAAsuB,KAAA7oB,KAAAmL,IAAAhJ,SAAA5H,EAAAsuB,KAAA,KAAA,QAKAnN,KAEApN,GAAA0F,IAAAgP,MAAAkR,OAAA,MAGA5lB,GAAAiB,WACA,IAAA9I,KAAAlM,EACAA,EAAAimB,eAAA/Z,KACA6H,GAAA0F,IAAAgP,MAAAvc,GAAAlM,EAAAkM,IAKA,IAEAgV,IACAnN,GAAA0F,IAAA8O,YAAA0T,GAGAjD,EAAAzQ,YAAAxU,GAAA0F,KAEAyH,MACAib,EAAApoB,GAAA0F,IAAA8O,YAAA5I,GAAA0I,cAAA,SACAC,UAAAhL,EAAAiF,OACA4Z,EAAA/S,UAAA8S,GAGAlc,IAAA,EAEA,MAAApgB,GAEA,MAAA,IAAAU,MAAA2H,EAAA,YAAA,MAAArI,EAAAkF,aA6BA,OANAib,IAAA,EAEA+b,KAIA,GAIAtf,EAAA,WAEA,OAAAzI,GAAAoH,WACA0B,KACA,IAIA1I,KAEAJ,GAAAc,MAcAV,GAAAJ,GAAA+P,SAAA/P,GAAAU,OAIA6L,IAQAY,GAGAnN,GAAA0F,IAAA2P,UAAA7I,GAFAxM,GAAA0F,IAAA8O,YAAAjI,IAKAA,GAAA,KACAP,IAAA,GAZAlD,EAAA9I,GAAAU,GAAAV,GAAAc,KAgBAV,GAAAJ,GAAA+P,SAAA/P,GAAAU,KAIA,mBAAAV,GAAAopB,aACAvZ,WAAA7P,GAAAopB,YAAA,GAIApe,MAGA,IAzCArD,EAAA,UACA,KA4CAQ,EAAA,WAEA0H,WAAAzH,EAAA,MAIAC,EAAA,WAIA7c,EAAAqkB,WAAA,WAEAlG,EAAA0B,GAAA,6FAEArL,GAAAoP,OACAnP,aAAA,IACAgV,SAGAjV,GAAA8F,eAAA,EAEA9F,GAAA2P,oBAEA,IAIAvH,EAAA,WAEA,IAAAoe,EACA6C,GAAA,EAEArpB,GAAAc,MAKA2L,KAIAA,IAAA,EACA/B,GAAA4I,OAAA9nB,EAAA,OAAA2c,GAEAjI,IAAA0N,KAAAF,GAEA/F,EAAA,cAIAuE,KACAsa,EAAAxmB,GAAA0V,mBACA,GAAA8Q,EAAA,MACA6C,GAAA,GAIAxZ,WAAA,WAIA,GAFA2W,EAAAxmB,GAAA0V,kBAEA2T,EAKA,OAHA5c,IAAA,EACAzM,GAAAW,IAAAzM,EAAA,iBACA1I,EAAAqkB,WAAA1H,EAAA,GAKA+D,KAEAlM,GAAAW,IAAAyK,GAAA,6DAAA,IAAAob,EAAA,oBAAA,IAAA,6CAAAxmB,GAAAiB,WAAA,IAAA/M,EAAA,YAAA,IAAA,IAEA8Z,IAAAwY,IAEA7e,EAAA,YAAA,GAEA3H,GAAAiB,YACA0G,EAAA,WAAA,IAKA,IAAA6e,GAGAxmB,GAAAW,IAAAzM,EAAA,SAAA8L,GAAAc,KAAA,GAIA4G,EAAA,aAAA,EAAA,eAAAsG,GAAA,4CAAA,gCAOA9B,IAAA2B,KAEA,OAAA2Y,EAIAxmB,GAAA4B,eAAA,IAAA5B,GAAAyB,kBAEAzB,GAAA4B,eAEAyH,IAIA1B,EAAA,iBAEA3H,GAAA4B,eAAAqI,EAGA5B,KAIAV,EAAA,eAGAM,GACAxX,KAAA,YACAg2B,YAAA,EACAnvB,OACA7G,KAAA,sBAMA,IAAAuP,GAAAyB,iBAIAkG,EAAA,gBAEA3H,GAAA4B,eAAAqI,EAEA5B,IAIAc,GAAA,KAMAnJ,GAAAyB,sBAIA8G,EAAA,WAEA,SAAA+gB,IACA5e,GAAA4I,OAAA9nB,EAAA,QAAA+c,GAGA,OAAAmF,KAAAE,IAEA0b,KACA,IAGAzb,IAAA,EACAH,IAAA,EACA/F,EAAA,YAGA8E,IAAA,EAGAtE,IAEAmhB,KACA,IAIAte,GAAA,WAKA6B,GAAAlgB,SACAqT,GAAAW,IAAA,mBAAAkM,GAAAnf,KAAA,KAAA,GACAmf,QAOA9B,GAAA,WAIAC,KAEA,IAAA+O,EAAAwP,KAEA,GAAAvpB,GAAA6B,eAAA7B,GAAAgP,SAAA,CACA,IAAA+K,KAAA/Z,GAAAwE,aACAxE,GAAAwE,aAAA0N,eAAA6H,IACAwP,EAAA97B,KAAAssB,EAAA,MAAA/Z,GAAAkH,MAAA6S,KAAA/Z,GAAAkH,MAAA6S,IAAAjN,IAAA9M,GAAAI,MAAA2Z,GAAA,iBAAA/Z,GAAAC,aAAAD,GAAAI,MAAA2Z,IAAAjN,GAAA,sBAAA9M,GAAAkH,MAAA6S,GAAA,GAAA,MAAA/Z,GAAAwE,aAAAuV,GAAArV,SAAA,aAAA,IAAA,0BAGA1E,GAAAW,IAAA,iCAAA4oB,EAAA77B,KAAA,MAAA,KAOAka,EAAA,SAAAyL,GAEA,GAAAnH,GAAA,OAAA,EAEA,GAAAlM,GAAAoH,UAMA,OAJAO,EAAA,YAAA,GACAuE,IAAA,EACAhE,IACAR,EAAA,UAAA,IACA,EAGA,IAEApQ,EADAiJ,GAAA,EAyDA,OA1DAP,GAAA4B,eAAA5B,GAAAyB,mBAAAzB,GAAA0V,oBAKAxJ,IAAA,GAGA5U,GACA7G,MAAAyP,IAAA4M,GAAA,WAAA,gBAGA9M,GAAAW,IAAA,mBAAAwL,GAAA,iBAAA,UAAA,MAAAA,GAAA,4BAAA,MAAA,KAAAva,OAAAC,aAAAsa,GAAA,MAAA,OAAAA,GAAA,EAAA,GAEAA,IAAAkH,GAEArT,GAAA4B,eAAA5B,GAAA0F,MACA1F,GAAA0F,IAAA6O,UAAAjL,IAAA,KAAA,OAAAtJ,GAAA0V,kBAAAnM,EAAAoF,YAAApF,EAAAmF,WAGAzG,GACAxX,KAAA,YACA6G,MAAAA,EACAmvB,YAAA,IAGA/e,EAAA,UAAA,GACAqB,EAAAzR,GAEAiJ,GAAA,GAIAmH,EAAA,UAAA,GAIAyE,KAEAnM,GAAAoB,oBAAAgL,IAEAzE,EAAA,cACA+C,GAAA4N,IAAA9sB,EAAA,OAAA0c,KAKAlI,GAAAoB,mBAAAgL,IACAzE,EAAA,aAIAO,MAMA3H,GASAgH,EAAA,WAEA,IAAAjb,EACAJ,EAAA8T,GAAAa,aAEA,IAAAvU,KAAAJ,EAEAA,EAAAgmB,eAAA5lB,KAIA0T,GAAA1T,KAAAoT,EAEAM,GAAA1T,GAAAJ,EAAAI,GAEA0T,GAAA1T,KAAAJ,EAAAI,KAGA0T,GAAAa,aAAAvU,GAAA0T,GAAA1T,MAWAkb,EAAA,WASA,SAAA8hB,IACA5e,GAAA4I,OAAA9nB,EAAA,OAAAwU,GAAA2P,kBANA,GAAAzD,GAEA,OADAvE,EAAA,YACA,EAOA,GAAA3H,GAAAoH,UASA,OAPA8E,KAEAod,IACAtpB,GAAAyF,SAAA,EACAmC,MAGA,EAKAa,IAEA,IAGArI,GAAAopB,wBAAA,GAMAxgB,GAAA,EAAAhJ,GAAAuB,uBAAAvB,GAAAsB,mBAAA,GAAA,KAEAtB,GAAAgB,WAEAZ,GAAAqpB,gBAGAzpB,GAAAyF,SAAA,EACAiC,EAAA,aAAA,GAEA1H,GAAAoH,WAGAsD,GAAA4N,IAAA9sB,EAAA,SAAA8b,GAGA,MAAAzb,GAgBA,OAdAmU,GAAAW,IAAA,uBAAA9U,EAAAkF,YAEA2W,EAAA,aAAA,GAEAqB,GACAtY,KAAA,wBACA4mB,OAAA,IAIAlO,GAAA,GAEAvB,KAEA,EASA,OALAA,IAGA0hB,KAEA,GAIA5gB,EAAA,WAEA,OAAAE,IAEAA,GAAA,EAGArB,IAEA0B,KAEA/I,IAAAF,GAAAgP,WAEAhP,GAAAW,IAAA,qCAAAX,GAAA6B,cAAA,4BAAA,qBAAA,GAEA7B,GAAAoP,OACAvN,eAAA,EAGA5B,aAAA,KAKAwK,MAEAvK,IAAA4M,KAEAD,GAAApf,KAAA+a,EAAAmb,WAIA3jB,GAAAoP,OACA3N,iBAAA,KAKAmK,GAAA8P,qBACA9P,GAAA8P,oBAAA,mBAAAhT,GAAA,GAGAD,KAEA,IAIA+B,GAAA,WAOA,MALA,aAAAoB,GAAAgE,aACAlH,IACAkD,GAAA8d,YAAA,qBAAAlf,MAGA,GAIA7B,EAAA,WAGAyD,IAAA,EAGA1D,IAEAgC,GAAA4I,OAAA9nB,EAAA,OAAAmd,IAKAiC,KAGAF,GAAA4N,IAAA9sB,EAAA,QAAA+c,GACAmC,GAAA4N,IAAA9sB,EAAA,OAAA2c,GACAuC,GAAA4N,IAAA9sB,EAAA,OAAAmd,GAEAiD,GAAA4P,iBAEA5P,GAAA4P,iBAAA,mBAAA9S,GAAA,GAEAkD,GAAA+d,YAEA/d,GAAA+d,YAAA,qBAAAnf,KAKA9C,EAAA,UAAA,GACAqB,GACAtY,KAAA,iBACA4mB,OAAA,KArhMA,IAAA7rB,IAAAA,EAAAqgB,SAKA,MAAA,IAAAtf,MAAA,qEAIA,IAAAq9B,EAAA,KAqhMAp+B,EAAAq+B,YAAAnqB,GAAAmqB,YACAD,EAAA,IAAAjqB,GAQA,iBAAAtU,GAAAA,GAAA,iBAAAA,EAAAD,UAMAC,EAAAD,QAAAuU,aAAAA,EACAtU,EAAAD,QAAAw+B,aAAAA,GA0DAp+B,EAAAmU,aAAAA,EAQAnU,EAAAo+B,aAAAA,EAtnMA,CAwnMAp+B,gCCrpMA,aAUA,SAAAs+B,IACA,IAEAC,EAAA,IAAAtrB,OAAA,0BAEAoN,SAAAme,OAAAC,UAEA,IAAAxkB,EAAAskB,EAAAjF,KAAAjZ,SAAAme,QAOA,OALAvkB,GAEA6N,EAVA,SAaA7N,EAIA,SAAAykB,EAAAD,GACA,IAAAE,EAAAxxB,UAAAhM,OAAA,QAAA8C,IAAAkJ,UAAA,GAAAA,UAAA,GAAAyxB,mBAEA,GAAA,iBAAAH,IAAAA,EACA,OAAA,KAGA,IACAnxB,EADA,IAAA2F,OAAA,YAAA,EAAA4rB,EAAAC,UAAAL,GAAA,wBACAM,KAAA1e,SAAAme,QAEA,OAAA,OAAAlxB,EACA,KAGA,mBAAAqxB,EAAAA,EAAArxB,EAAA,IAAAA,EAAA,GAIA,SAAA0xB,IAQA,IAPA,IAAAL,EAAAxxB,UAAAhM,OAAA,QAAA8C,IAAAkJ,UAAA,GAAAA,UAAA,GAAAyxB,mBAEAK,EAAA,wCACAC,KACA5xB,OAAA,EAGAA,EAAA2xB,EAAAF,KAAA1e,SAAAme,SACAS,EAAAE,UAAA7xB,EAAA8xB,MAAA9xB,EAAAnM,OAAA,EACA+9B,EAAA5xB,EAAA,IAAA,mBAAAqxB,EAAAA,EAAArxB,EAAA,IAAAA,EAAA,GAGA,OAAA4xB,EAIA,SAAAxuB,EAAA+tB,EAAA76B,GACA,IAAAy7B,EAAAlyB,UAAAhM,OAAA,QAAA8C,IAAAkJ,UAAA,GAAAA,UAAA,GAAAmyB,mBACAC,EAAApyB,UAAA,GAEA,iBAAA,IAAAkyB,EAAA,YAAAG,EAAAH,KAAA,OAAAA,IAEAE,EAAAF,EACAA,EAAAC,oBAGA,IAAAG,GAAA,EAAAZ,EAAAa,SAAAH,OAEAI,EAAAlB,EAAA,KADA,mBAAAY,EAAAA,EAAAz7B,GAAAA,GACA67B,EACApf,SAAAme,OAAAmB,EAIA,SAAA7X,EAAA2W,EAAA5a,GACA,IAAA+b,GAAAC,SAAA,GAMA,OAJAhc,GAAAA,EAAAic,SACAF,EAAAE,OAAAjc,EAAAic,QAGApvB,EAAA+tB,EAAA,IAAAmB,GAIA,SAAAG,EAAAtB,GACA,OAAAC,EAAAD,EAAA,MAIA,SAAAuB,EAAAvB,EAAA76B,EAAAg8B,GACA,OAAAlvB,EAAA+tB,EAAA76B,EAAA,KAAAg8B,GA/FAhgC,EAAAqgC,YAAA,EACArgC,EAAAsgC,aAAAtgC,EAAAugC,aAAAvgC,EAAAwgC,aAAAxgC,EAAAygC,UAAAzgC,EAAA0gC,cAAA1gC,EAAA2gC,UAAA3gC,EAAA4gC,gBAAA5gC,EAAAkoB,OAAAloB,EAAAogC,OAAApgC,EAAAmgC,OAAAngC,EAAA8Q,IAAA9Q,EAAAo/B,OAAAp/B,EAAA8+B,IAAA9+B,EAAA0+B,eAAAr6B,EAEA,IAAAu7B,EAAA,mBAAAzzB,QAAA,iBAAAA,OAAA00B,SAAA,SAAA/7B,GAAA,cAAAA,GAAA,SAAAA,GAAA,OAAAA,GAAA,mBAAAqH,QAAArH,EAAAyG,cAAAY,QAAArH,IAAAqH,OAAAxI,UAAA,gBAAAmB,GAEAm6B,EAAAh+B,EAAA,UA6FAjB,EAAA0+B,UAAAA,EACA1+B,EAAA8+B,IAAAA,EACA9+B,EAAAo/B,OAAAA,EACAp/B,EAAA8Q,IAAAA,EACA9Q,EAAAmgC,OAAAA,EACAngC,EAAAogC,OAAAA,EACApgC,EAAAkoB,OAAAA,EACAloB,EAAA4gC,gBAAAlC,EACA1+B,EAAA2gC,UAAA7B,EACA9+B,EAAA0gC,cAAAtB,EACAp/B,EAAAygC,UAAA3vB,EACA9Q,EAAAwgC,aAAAL,EACAngC,EAAAugC,aAAAH,EACApgC,EAAAsgC,aAAApY,oCCjHA,aAMA,SAAA4Y,EAAAh8B,EAAA+5B,GACA,OAAAxyB,OAAA1I,UAAAmjB,eAAAxlB,KAAAwD,EAAA+5B,GASA,SAAAkC,EAAAj4B,GACA,IAAAk4B,EAAAl4B,EAAAwJ,OAAAxJ,EAAAvH,OAAA,GACAyC,EAAAyE,SAAAK,EAAA,IACAm3B,EAAA,IAAA7G,KAEA,OAAA4H,GACA,IAAA,IACAf,EAAAgB,YAAAhB,EAAAiB,cAAAl9B,GAAA,MACA,IAAA,IACAi8B,EAAAkB,SAAAlB,EAAAmB,WAAAp9B,GAAA,MACA,IAAA,IACAi8B,EAAAoB,QAAApB,EAAAqB,UAAAt9B,GAAA,MACA,IAAA,IACAi8B,EAAAsB,SAAAtB,EAAAuB,WAAAx9B,GAAA,MACA,IAAA,IACAi8B,EAAAwB,WAAAxB,EAAAyB,aAAA19B,GAAA,MACA,IAAA,IACAi8B,EAAA0B,WAAA1B,EAAA2B,aAAA59B,GAAA,MACA,QACAi8B,EAAA,IAAA7G,KAAAtwB,GAGA,OAAAm3B,EApCAjgC,EAAAqgC,YAAA,EAEA,IAAAT,EAAA,mBAAAzzB,QAAA,iBAAAA,OAAA00B,SAAA,SAAA/7B,GAAA,cAAAA,GAAA,SAAAA,GAAA,OAAAA,GAAA,mBAAAqH,QAAArH,EAAAyG,cAAAY,QAAArH,IAAAqH,OAAAxI,UAAA,gBAAAmB,GAqEA9E,EAAA8gC,OAAAA,EACA9gC,EAAAk/B,SA/DA,SAAAp2B,GACA,OAAAA,EAAAmC,QAAA,uBAAA,SA+DAjL,EAAA+gC,eAAAA,EACA/gC,EAAA8/B,QAlCA,SAAAE,GACA,IAAAj5B,EAAA,GAGA,IAAA,IAAA83B,KAAAmB,EACA,GAAAc,EAAAd,EAAAnB,GACA,GAAA,aAAAnF,KAAAmF,GAAA,CACA,IAAAoB,EAAAD,EAAAnB,GAEA,iBAAA,IAAAoB,EAAA,YAAAL,EAAAK,MAEAA,EAAAc,EADAd,GAAA,iBAAAA,EAAA,IAAA,KAGAl5B,GAAA,IAAA83B,EAAA,IAAAoB,EAAA4B,kBACA,WAAAnI,KAAAmF,GACAmB,EAAAnB,KACA93B,GAAA,IAAA83B,GAGA93B,GAAA,IAAA83B,EAAA,IAAAmB,EAAAnB,GASA,OAJAiC,EAAAd,EAAA,UACAj5B,GAAA,WAGAA,wCChDA,IAAA+6B,EAAA,oBAAA1hC,OAAAA,OAAA,OAAA,IAAAC,EAAAA,EAAA,EAAA,KAEAuE,EAAAxB,MAAAO,UAAAiB,MAEAm9B,GAIAC,GAAA,SAAAx2B,EAAAmoB,EAAAsO,GACA,IAAAC,EAAA3hC,KAAA,KAAAiL,GAAAmoB,EAAAsO,MAAAtO,EAAA,OAAApzB,KACAA,KAAA4hC,UAAA5hC,KAAA4hC,YAGA,OAFA5hC,KAAA4hC,QAAA32B,KAAAjL,KAAA4hC,QAAA32B,QACAnJ,MAAAsxB,SAAAA,EAAAsO,QAAAA,EAAAG,IAAAH,GAAA1hC,OACAA,MAKA8hC,KAAA,SAAA72B,EAAAmoB,EAAAsO,GACA,IAAAC,EAAA3hC,KAAA,OAAAiL,GAAAmoB,EAAAsO,MAAAtO,EAAA,OAAApzB,KACA,IAAAD,EAAAC,KACA8hC,EAAAP,EAAAO,KAAA,WACA/hC,EAAAgiC,IAAA92B,EAAA62B,GACA1O,EAAAzpB,MAAA3J,KAAAgN,aAGA,OADA80B,EAAAE,UAAA5O,EACApzB,KAAAyhC,GAAAx2B,EAAA62B,EAAAJ,IAOAK,IAAA,SAAA92B,EAAAmoB,EAAAsO,GACA,IAAAO,EAAAC,EAAAC,EAAAC,EAAAzhC,EAAAG,EAAA6G,EAAA8hB,EACA,IAAAzpB,KAAA4hC,UAAAD,EAAA3hC,KAAA,MAAAiL,GAAAmoB,EAAAsO,IAAA,OAAA1hC,KACA,IAAAiL,IAAAmoB,IAAAsO,EAEA,OADA1hC,KAAA4hC,WACA5hC,KAIA,IAAAW,EAAA,EAAAG,GADAshC,EAAAn3B,GAAAA,GAAAs2B,EAAAc,KAAAriC,KAAA4hC,UACA5gC,OAAAL,EAAAG,EAAAH,IAEA,GADAsK,EAAAm3B,EAAAzhC,GACAwhC,EAAAniC,KAAA4hC,QAAA32B,GAAA,CAEA,GADAjL,KAAA4hC,QAAA32B,GAAAg3B,KACA7O,GAAAsO,EACA,IAAA/5B,EAAA,EAAA8hB,EAAA0Y,EAAAnhC,OAAA2G,EAAA8hB,EAAA9hB,IACAu6B,EAAAC,EAAAx6B,IACAyrB,GAAAA,IAAA8O,EAAA9O,UAAAA,IAAA8O,EAAA9O,SAAA4O,WACAN,GAAAA,IAAAQ,EAAAR,UACAO,EAAAngC,KAAAogC,GAIAD,EAAAjhC,eAAAhB,KAAA4hC,QAAA32B,GAIA,OAAAjL,MAOAsiC,QAAA,SAAAr3B,GACA,IAAAjL,KAAA4hC,QAAA,OAAA5hC,KACA,IAAA2zB,EAAAtvB,EAAAtD,KAAAiM,UAAA,GACA,IAAA20B,EAAA3hC,KAAA,UAAAiL,EAAA0oB,GAAA,OAAA3zB,KACA,IAAAmiC,EAAAniC,KAAA4hC,QAAA32B,GACAs3B,EAAAviC,KAAA4hC,QAAAY,IAGA,OAFAL,GAAAM,EAAAN,EAAAxO,GACA4O,GAAAE,EAAAF,EAAAv1B,WACAhN,MAKA0iC,cAAA,SAAAn+B,EAAA0G,EAAAmoB,GACA,IAAAuP,EAAA3iC,KAAA4iC,WACA,IAAAD,EAAA,OAAA3iC,KACA,IAAA6iC,GAAA53B,IAAAmoB,EACA,iBAAAnoB,IAAAmoB,EAAApzB,MACAuE,KAAAo+B,MAAAp+B,EAAAu+B,aAAAv+B,GAEA,IAAA,IAAAwQ,KAAA4tB,EACAA,EAAA5tB,GAAAgtB,IAAA92B,EAAAmoB,EAAApzB,MACA6iC,UAAA7iC,KAAA4iC,WAAA7tB,GAEA,OAAA/U,OAMA+iC,EAAA,MAKApB,EAAA,SAAAp9B,EAAAy+B,EAAA/3B,EAAAg4B,GACA,IAAAh4B,EAAA,OAAA,EAGA,GAAA,iBAAAA,EAAA,CAEA,IAAA,IAAAqzB,KAAArzB,EACA1G,EAAAy+B,GAAAr5B,MAAApF,GAAA+5B,EAAArzB,EAAAqzB,IAAA5xB,OAAAu2B,IAEA,OAAA,EAIA,GAAAF,EAAA5J,KAAAluB,GAAA,CAEA,IAAA,IADAm3B,EAAAn3B,EAAA0mB,MAAAoR,GACApiC,EAAA,EAAAG,EAAAshC,EAAAphC,OAAAL,EAAAG,EAAAH,IACA4D,EAAAy+B,GAAAr5B,MAAApF,GAAA69B,EAAAzhC,IAAA+L,OAAAu2B,IAEA,OAAA,EAGA,OAAA,GAMAR,EAAA,SAAAN,EAAAxO,GACA,IAAAuO,EAAAvhC,GAAA,EAAAG,EAAAqhC,EAAAnhC,OAAAkiC,EAAAvP,EAAA,GAAAwP,EAAAxP,EAAA,GAAAyP,EAAAzP,EAAA,GACA,OAAAA,EAAA3yB,QACA,KAAA,EAAA,OAAAL,EAAAG,IAAAohC,EAAAC,EAAAxhC,IAAAyyB,SAAAryB,KAAAmhC,EAAAL,KAAA,OACA,KAAA,EAAA,OAAAlhC,EAAAG,IAAAohC,EAAAC,EAAAxhC,IAAAyyB,SAAAryB,KAAAmhC,EAAAL,IAAAqB,GAAA,OACA,KAAA,EAAA,OAAAviC,EAAAG,IAAAohC,EAAAC,EAAAxhC,IAAAyyB,SAAAryB,KAAAmhC,EAAAL,IAAAqB,EAAAC,GAAA,OACA,KAAA,EAAA,OAAAxiC,EAAAG,IAAAohC,EAAAC,EAAAxhC,IAAAyyB,SAAAryB,KAAAmhC,EAAAL,IAAAqB,EAAAC,EAAAC,GAAA,OACA,QAAA,OAAAziC,EAAAG,IAAAohC,EAAAC,EAAAxhC,IAAAyyB,SAAAzpB,MAAAu4B,EAAAL,IAAAlO,KASA4N,EAAA8B,MALAC,SAAA,KAAAC,aAAA,QAKA,SAAAC,EAAAvV,GACAuT,EAAAvT,GAAA,SAAA1pB,EAAA0G,EAAAmoB,GAMA,OALApzB,KAAA4iC,aAAA5iC,KAAA4iC,gBACAr+B,EAAAu+B,cAAAv+B,EAAAu+B,YAAAvB,EAAAkC,SAAA,OACAl/B,EACA,iBAAA0G,IAAAmoB,EAAApzB,MACAuE,EAAAi/B,GAAAv4B,EAAAmoB,EAAApzB,MACAA,QAIAN,EAAAD,QAAA+hC;AP1KA,IAAAkC,EAAAhjC,EAAA,aACA2Q,EAAA3Q,EAAA,WACAijC,EAAAjjC,EAAA,iBACAkjC,EAAAljC,EAAA,YACAmjC,EAAAnjC,EAAA,aACAgZ,EAAAhZ,EAAA,aAEAhB,EAAAD,SACAikC,QAAAA,EACAE,OAAAA,EACAD,WAAAA,EACAtyB,IAAAA,EACAqI,QAAAA,EAEAoqB,YAAAD,sHQnBAnkC,EAAAD,QAAA,mDC4QA,SAAAskC,EAAAC,GACA,IAAAC,EAAAl+B,KAAAqL,MAAA4yB,EAAA,KACAE,EAAAD,EAAA,GACAE,EAAAp+B,KAAAqL,MAAA6yB,EAAA,IAMA,OAJAC,EAAA,KACAA,EAAA,IAAAA,GAGAC,EAAA,IAAAD,EArNA,IAAA3C,EAAA,oBAAA1hC,OAAAA,OAAA,OAAA,IAAAC,EAAAA,EAAA,EAAA,KACAskC,EAAA,oBAAAvkC,OAAAA,OAAA,YAAA,IAAAC,EAAAA,EAAA,OAAA,KAEA6jC,EAAA,SAAA5uB,EAAAsvB,GACArkC,KAAA+U,GAAAA,EACA/U,KAAAskC,QAAA,KACAtkC,KAAAukC,WAAA,KACAvkC,KAAAwkC,iBAAA,EAEAxkC,KAAAykC,IAAAL,EAAA,IAAArvB,GACA/U,KAAAqkC,OAAAA,EAEArkC,KAAAqkC,OAAA5C,GAAA,YAAAzhC,KAAA0kC,aAAA1kC,MACAA,KAAAqkC,OAAA5C,GAAA,eAAAzhC,KAAA2kC,eAAA3kC,MACAA,KAAAqkC,OAAA5C,GAAA,cAAAzhC,KAAA4kC,cAAA5kC,MACAA,KAAAqkC,OAAA5C,GAAA,eAAAzhC,KAAA6kC,eAAA7kC,MACAA,KAAAqkC,OAAA5C,GAAA,iBAAAzhC,KAAA8kC,iBAAA9kC,MACAA,KAAAqkC,OAAA5C,GAAA,aAAAzhC,KAAA+kC,aAAA/kC,MACAA,KAAAqkC,OAAA5C,GAAA,eAAAzhC,KAAAglC,eAAAhlC,MACAA,KAAAqkC,OAAA5C,GAAA,gBAAAzhC,KAAAilC,gBAAAjlC,MACAA,KAAAqkC,OAAA5C,GAAA,kBAAAzhC,KAAAklC,kBAAAllC,MACAA,KAAAqkC,OAAA5C,GAAA,cAAAzhC,KAAAmlC,cAAAnlC,MACAA,KAAAqkC,OAAA5C,GAAA,UAAAzhC,KAAAolC,WAAAplC,MAEAA,KAAAqlC,6BACArlC,KAAAslC,YAAAtlC,KAAAulC,oBAAAvlC,KAAAokC,EAAA,WAAArH,OACA/8B,KAAAwlC,eAEAxlC,KAAAykC,IAAAhD,GAAA,QAAA,UAAAF,EAAAkE,KAAAzlC,KAAA0lC,eAAA1lC,OACAA,KAAAykC,IAAAhD,GAAA,QAAA,8CAAAF,EAAAkE,KAAAzlC,KAAA2lC,mBAAA3lC,OACAA,KAAAykC,IAAAhD,GAAA,QAAA,gBAAAF,EAAAkE,KAAAzlC,KAAA4lC,oBAAA5lC,OACAA,KAAAykC,IAAAhD,GAAA,QAAA,eAAAF,EAAAkE,KAAAzlC,KAAA6lC,mBAAA7lC,OACAA,KAAAykC,IAAAhD,GAAA,QAAA,eAAAF,EAAAkE,KAAAzlC,KAAA8lC,mBAAA9lC,OACAA,KAAAykC,IAAAhD,GAAA,QAAA,kBAAAF,EAAAkE,KAAAzlC,KAAA+lC,sBAAA/lC,QAGA2jC,EAAAvgC,UAAAsiC,eAAA,WAGA,YAFA1lC,KAAAqkC,OAAA2B,kBAGAhmC,KAAA4lC,sBAGA5lC,KAAA2lC,sBAKAhC,EAAAvgC,UAAAuiC,mBAAA,WACA3lC,KAAAqkC,OAAApf,QAGA0e,EAAAvgC,UAAAwiC,oBAAA,WACA5lC,KAAAqkC,OAAA7d,SAGAmd,EAAAvgC,UAAAyiC,mBAAA,WACA7lC,KAAAqkC,OAAA4B,QAGAtC,EAAAvgC,UAAA0iC,mBAAA,SAAA5lC,GACAkkC,EAAAlkC,EAAAkN,QAAA84B,QAAA,gBAAAC,GAAA,UACAnmC,KAAAqkC,OAAA+B,SAGApmC,KAAAqkC,OAAAgC,QAKA1C,EAAAvgC,UAAA2iC,sBAAA,WACA/lC,KAAAqkC,OAAAiC,WAGA3C,EAAAvgC,UAAAghC,EAAA,SAAA/gC,GACA,OAAArD,KAAAykC,IAAA8B,KAAAljC,IAGAsgC,EAAAvgC,UAAAshC,aAAA,SAAA8B,GACAxmC,KAAAulC,sBACAvlC,KAAAulC,oBAAAvlC,KAAAymC,gBAAAD,GAEAxmC,KAAAwlC,aAAAxlC,KAAAulC,uBAIA5B,EAAAvgC,UAAAqjC,gBAAA,SAAAD,GACA,MAAA,oCAAAA,EAAAv7B,KAAA,SAGA04B,EAAAvgC,UAAAuhC,eAAA,SAAA1f,GACAjlB,KAAAwkC,iBAAA,EAEAxkC,KAAAwlC,aAAAxlC,KAAA0mC,WAAAzhB,IACAjlB,KAAAqlC,6BACArlC,KAAA2mC,eAAA1hB,EAAA2hB,OACA5mC,KAAA6mC,0BAGAlD,EAAAvgC,UAAAyjC,uBAAA,WACA,IAAAC,EAAA9mC,KAEAA,KAAAukC,aACAvkC,KAAAukC,WAAA1kC,OAAAg8B,YAAA,WACAiL,EAAAC,eAAAD,EAAAzC,OAAA2C,cAAAF,EAAAzC,OAAA4C,gBACA,OAIAtD,EAAAvgC,UAAAujC,eAAA,SAAAC,IACA,IAAAA,GAEA5mC,KAAAokC,EAAA,gBAAA8C,SAAA,SACAlnC,KAAAokC,EAAA,mBAAA+C,YAAA,cAEA,IAAAP,GAEA5mC,KAAAokC,EAAA,gBAAA+C,YAAA,SACAnnC,KAAAokC,EAAA,mBAAA8C,SAAA,cAIAlnC,KAAAokC,EAAA,gBAAA+C,YAAA,SACAnnC,KAAAokC,EAAA,mBAAA+C,YAAA,cAKAxD,EAAAvgC,UAAAgkC,wBAAA,WACApnC,KAAAukC,aACA1kC,OAAAi8B,cAAA97B,KAAAukC,YACAvkC,KAAAukC,WAAA,OAIAZ,EAAAvgC,UAAAyhC,eAAA,WACA7kC,KAAA6mC,yBAEA7mC,KAAAqlC,8BAGA1B,EAAAvgC,UAAAwhC,cAAA,WACA5kC,KAAAonC,0BAEApnC,KAAAqlC,8BAGA1B,EAAAvgC,UAAA0hC,iBAAA,WACA9kC,KAAA+mC,eAAA,EAAA,GACA/mC,KAAAqlC,8BAGA1B,EAAAvgC,UAAA8hC,kBAAA,WACAllC,KAAAwlC,aAAAxlC,KAAAulC,qBACAvlC,KAAAqnC,YAAA,mDAEArnC,KAAAqlC,8BAGA1B,EAAAvgC,UAAA2hC,aAAA,WACA/kC,KAAA2mC,gBAAA,IAGAhD,EAAAvgC,UAAA6hC,gBAAA,WACAjlC,KAAA2mC,gBAAA,IAGAhD,EAAAvgC,UAAA4hC,eAAA,WACAhlC,KAAA2mC,kBAGAhD,EAAAvgC,UAAA+hC,cAAA,WACAnlC,KAAAqnC,YAAA,+CAGA1D,EAAAvgC,UAAAsjC,WAAA,SAAAzhB,GACA,MAAA,uBAAAA,EAAAqiB,WAAAC,MAAApN,MACA,mCAAAlV,EAAAqiB,WAAAE,OAAAv8B,KACA,oCAAAga,EAAAqiB,WAAAG,QAAAtN,MAAA,WAGAwJ,EAAAvgC,UAAAoiC,aAAA,SAAAF,QACAxhC,IAAAwhC,IACAtlC,KAAAslC,YAAAA,GAGAtlC,KAAAskC,SACAtkC,KAAAokC,EAAA,WAAArH,KAAA/8B,KAAAslC,aAAA6B,YAAA,UAIAxD,EAAAvgC,UAAA2jC,eAAA,SAAAtvB,EAAAmB,GAIA,GAHA5Y,KAAAokC,EAAA,YAAArH,KAAAgH,EAAAtsB,IACAzX,KAAAokC,EAAA,aAAArH,KAAAgH,EAAAnrB,IAEA,IAAAA,EACA5Y,KAAAokC,EAAA,aAAAxJ,IAAA,QAAA,SACA,CACA,IAAA8M,EAAA3hC,KAAA4hC,OAAAlwB,EAAA,KAAAmB,EAAA,KACA8uB,EAAAA,EAAA,IAAA,IAAAA,EACA1nC,KAAAokC,EAAA,aAAAxJ,IAAA,QAAA8M,EAAA,OAgBA/D,EAAAvgC,UAAAikC,YAAA,SAAAO,GACA5nC,KAAAskC,SACAzkC,OAAAgoC,aAAA7nC,KAAAskC,SAGAtkC,KAAAokC,EAAA,WAAArH,KAAA6K,GAAAV,SAAA,SAEA,IAAAJ,EAAA9mC,KACAA,KAAAskC,QAAAzkC,OAAAqkB,WAAA,WACA4iB,EAAAxC,QAAA,KACAwC,EAAAtB,gBACA,MAGA7B,EAAAvgC,UAAAgiC,WAAA,WACAplC,KAAAqlC,8BAGA1B,EAAAvgC,UAAAiiC,2BAAA,WACA,IACAyC,EACAC,EAFAC,EAAAhoC,KAAAqkC,OAAA2B,kBAIA,OAAAgC,GACA,IAAA,UACAF,EAAA,+CACAC,EAAA,8CAEA/nC,KAAAqkC,OAAA4D,eACAH,GAAA,iBAEAC,GAAA,iBAEA,MAEA,IAAA,SACAD,EAAA,8DACAC,EAAA,+BAEA/nC,KAAAqkC,OAAA4D,eACAH,GAAA,iBAEAC,GAAA,iBAEA,MAEA,IAAA,YACAD,EAAA,GACAC,EAAA,0GAEA,MAIA,QACAD,EAAA,8BACAC,EAAA,6EAIA/nC,KAAAokC,EAAA2D,GACAZ,YAAA,kBACAD,SAAA,mBACAgB,KAAA,WAAA,QAEAJ,GACA9nC,KAAAokC,EAAA0D,GACAX,YAAA,mBACAD,SAAA,kBACAiB,WAAA,YAGAnoC,KAAAykC,IACA0C,YAAA,yDACAD,SAAA,SAAAc,IAIAtoC,EAAAD,QAAAkkC,0JCzRA,SAAAyE,IACA,IACA,MAAA,iBAAAvoC,QAAA,OAAAA,OAAA,eAAAA,OAAAwoC,aAAA,cAAA,GACA,MAAAnoC,GACA,OAAA,GAXA,IAAAqhC,EAAA,oBAAA1hC,OAAAA,OAAA,OAAA,IAAAC,EAAAA,EAAA,EAAA,KACAskC,EAAA,oBAAAvkC,OAAAA,OAAA,YAAA,IAAAC,EAAAA,EAAA,OAAA,KACAuR,EAAA3Q,EAAA,WACAmjC,EAAAnjC,EAAA,aACA8gC,EAAA9gC,EAAA,YACAgjC,EAAAhjC,EAAA,aAUAkjC,EAAA,SAAA0E,EAAAC,EAAA7kB,GACA1jB,KAAAgoC,OACA1b,QAAA,EACAkc,WAAA,GAIA9kB,EAAAA,MAEA1jB,KAAAyoC,gBAAA/kB,EAAA+kB,cAEAlH,EAAAmH,OAAA1oC,KAAAwhC,GAEA,IAAAmH,EAAA3oC,KAAA2oC,QAAA,IAAAjF,EAAA4E,EAAAC,EAAA7kB,GACA1jB,KAAA2oC,QAAAlH,GAAA,cAAAzhC,KAAA4oC,cAAA5oC,MACAA,KAAA2oC,QAAAlH,GAAA,eAAAzhC,KAAA2kC,eAAA3kC,MACAA,KAAA2oC,QAAAlH,GAAA,iBAAAzhC,KAAA8kC,iBAAA9kC,MACAA,KAAA2oC,QAAAlH,GAAA,kBAAAzhC,KAAAklC,kBAAAllC,MAEAA,KAAA2oC,QAAAlH,GAAA,MAAA,WAEAzhC,KAAAsiC,QAAA34B,MAAA3J,KAAA6C,MAAAO,UAAAiB,MAAAtD,KAAAiM,UAAA,KACAhN,MAIA,IAAA6oC,EAAA7oC,KAAA6oC,kBAAAzE,EAAA0E,WAEA9oC,KAAA+oC,QAAAlF,EAAAngB,EAAA,SAAAslB,GACA,GAAAtlB,EAAAiY,QAAA,CACA,IAAAsN,EAAAvlB,EAAAiY,QAAAhK,MAAA,KACAuX,EAAAF,EAAArX,MAAA,KACAwX,EAAA5H,EAAA6H,aAAAH,EAAAC,GACAG,EAAAF,EAAApnC,KAAA,KAEA,IAAAonC,EAAAnoC,SACAqoC,EAAAL,GAGAL,EAAAW,WAAAD,QAGAV,EAAAW,WAAAN,GAEAH,EAAAU,YAGAvpC,KAAAwpC,SAAAxpC,KAAAypC,YAGA7F,EAAAxgC,UAAAsmC,eAAA,SAAAC,GACA3pC,KAAA2oC,QAAAe,eAAAC,IAGA/F,EAAAxgC,UAAAwmC,aAAA,SAAAC,GACA7pC,KAAA2oC,QAAAiB,aAAAC,IAGAjG,EAAAxgC,UAAA0mC,WAAA,SAAAC,GACA/pC,KAAA2oC,QAAAmB,WAAAC,IAGAnG,EAAAxgC,UAAAwlC,cAAA,SAAA3jB,GAEA,IAAAvB,GACAuB,KAAAsc,EAAAkE,KAAAzlC,KAAAgqC,aAAAhqC,KAAAilB,EAAAlQ,IACAyR,MAAA+a,EAAAkE,KAAAzlC,KAAAiqC,cAAAjqC,KAAAilB,EAAAlQ,IACAm1B,OAAA3I,EAAAkE,KAAAzlC,KAAAmqC,eAAAnqC,KAAAilB,EAAAlQ,IACAq1B,OAAA7I,EAAAkE,KAAAzlC,KAAAqqC,eAAArqC,KAAAilB,EAAAlQ,IACAu1B,MAAArlB,EAAAqiB,WAAAiD,uBAAA,IAAAtlB,EAAAulB,QAAAC,UAAA,IAGAxlB,EAAAylB,gBACAhnB,EAAAgnB,cAAAzlB,EAAAylB,eAGA,IAAAC,EAAA3qC,KAAA+oC,QAAA6B,OAAA3lB,EAAAqiB,WAAAnyB,IAAAuO,GAYA,GAVA1jB,KAAAgoC,MAAA6C,YACA91B,GAAAkQ,EAAAlQ,GACA41B,MAAAA,EACAG,uBAAA,EACAC,gBAAA,EACAC,aAAA,EACAC,iBAAA,IAIAjrC,KAAAgoC,MAAA1b,OAAA,CACAtsB,KAAAgoC,MAAA6C,WAAAF,MAEA1lB,SAIA2e,EAAAxgC,UAAA4mC,aAAA,SAAAkB,GAEA,GAAAlrC,KAAAgoC,MAAA6C,YAAA7qC,KAAAgoC,MAAA6C,WAAA91B,KAAAm2B,EAAA,CASA,GAJAlrC,KAAAgoC,MAAA1b,QAAA,EACAtsB,KAAAgoC,MAAA6C,WAAAG,aAAA,GAGAhrC,KAAAgoC,MAAA6C,WAAAC,sBACA,OAAA9qC,KAAA2oC,QAAAwC,oBAIAnrC,KAAAsiC,QAAA,eAAAtiC,KAAA2oC,QAAAyC,sBAbA/5B,EAAA,sDAAArR,KAAAgoC,MAAA6C,WAAAK,IAgBAtH,EAAAxgC,UAAAgoC,cAAA,WACA,OAAAprC,KAAA2oC,QAAAyC,iBAGAxH,EAAAxgC,UAAAioC,qBAAA,WACA,OAAArrC,KAAA2oC,QAAA0C,wBAGAzH,EAAAxgC,UAAAkoC,mBAAA,WACA,OAAAtrC,KAAA2oC,QAAA2C,sBAGA1H,EAAAxgC,UAAA6mC,cAAA,SAAAiB,GAEAlrC,KAAAgoC,MAAA6C,YAAA7qC,KAAAgoC,MAAA6C,WAAA91B,KAAAm2B,GAKAlrC,KAAAgoC,MAAA1b,QAAA,EAEAtsB,KAAAsiC,QAAA,cAAAtiC,KAAA2oC,QAAAyC,kBANA/5B,EAAA,uDAAArR,KAAAgoC,MAAA6C,WAAAK,IASAtH,EAAAxgC,UAAA+mC,eAAA,SAAAe,EAAAK,GACAvrC,KAAAgoC,MAAA6C,YAAA7qC,KAAAgoC,MAAA6C,WAAA91B,KAAAm2B,GAKAlrC,KAAAgoC,MAAA6C,WAAAE,gBAAA,EACAQ,IACAvrC,KAAAgoC,MAAA6C,WAAAW,yBAAA,GAGAxrC,KAAAgoC,MAAA6C,WAAAG,YAQAhrC,KAAAgoC,MAAA6C,WAAAC,wBAOAS,GACAl6B,EAAA,kDACArR,KAAA2oC,QAAA8C,qBAGAzrC,KAAA2oC,QAAA+C,uBAjBA1rC,KAAA2oC,QAAA8C,qBAZAp6B,EAAA,wDAAArR,KAAAgoC,MAAA6C,WAAAK,IAiCAtH,EAAAxgC,UAAAinC,eAAA,SAAAa,GACA,GAAAlrC,KAAAgoC,MAAA6C,YAAA7qC,KAAAgoC,MAAA6C,WAAA91B,KAAAm2B,EAAA,CAKA,IACAzzB,EADAzX,KAAAgoC,MAAA6C,WAAAF,MACAlzB,WAEAk0B,EAAA5lC,KAAAqL,MAAApR,KAAAgoC,MAAA6C,WAAAI,iBADA,KAEAW,EAAA7lC,KAAAqL,MAAAqG,EAFA,KAIAzX,KAAAgoC,MAAA6C,WAAAI,iBAAAxzB,EAEAm0B,IAAAD,GACA3rC,KAAA2oC,QAAAkD,kBAAA9lC,KAAAqL,MAAAqG,EAAA,WAbApG,EAAA,wDAAArR,KAAAgoC,MAAA6C,WAAAK,IAiBAtH,EAAAxgC,UAAAuhC,eAAA,SAAA1f,GACA,IAAA0jB,EAAA3oC,KAAA2oC,QAEA3oC,KAAAgoC,MAAA6C,YAAA7qC,KAAAgoC,MAAA6C,WAAA91B,KAAAkQ,EAAAlQ,IAKA/U,KAAAgoC,MAAA6C,WAAAC,uBAAA,EAEA9qC,KAAAgoC,MAAA6C,WAAAE,iBAEA15B,EAAA,qDAAArR,KAAAgoC,MAAA6C,YAQA7qC,KAAAgoC,MAAA6C,WAAAW,wBACAjK,EAAAuK,MAAA,WACAnD,EAAA8C,sBAIAlK,EAAAuK,MAAA,WACAnD,EAAA+C,0BAvBAr6B,EAAA,2DAAA4T,EAAAjlB,KAAAgoC,MAAA6C,aA6BAjH,EAAAxgC,UAAA0hC,iBAAA,SAAA7f,GACAjlB,KAAAgoC,MAAA6C,YAAA7qC,KAAAgoC,MAAA6C,WAAA91B,KAAAkQ,EAAAlQ,IAKA/U,KAAAgoC,MAAA6C,WAAAF,MAAAoB,iBACA/rC,KAAAgoC,MAAA6C,WAIA7qC,KAAAgoC,MAAA1b,QAAA,GATAjb,EAAA,6DAAA4T,EAAAjlB,KAAAgoC,MAAA6C,aAYAjH,EAAAxgC,UAAA8hC,kBAAA,WACAllC,KAAAgoC,MAAA1b,QAAA,GAGAsX,EAAAxgC,UAAA4oC,SAAA,WACA,OAAAhsC,KAAA2oC,QAAAsD,WAAAjsC,KAAAgoC,MAAA1b,QAGAsX,EAAAxgC,UAAA8oC,sBAAA,SAAAC,GACA,OAAAnsC,KAAA2oC,QAAAuD,sBAAAC,IAGAvI,EAAAxgC,UAAAgpC,KAAA,WACA,IAAA/H,EAAArkC,KAEAA,KAAA6oC,kBAAAwD,KAAA,WACAhI,EAAAsE,QAAAsD,WACA5H,EAAAsE,QAAAyD,UAKAxI,EAAAxgC,UAAA6hB,KAAA,WACA,IAAAof,EAAArkC,KAEAA,KAAA6oC,kBAAAwD,KAAA,WAGA,GAFAhI,EAAA0E,QAAAuD,uBAEAjI,EAAAsE,QAAAsD,UAIA,OAFA5H,EAAA2D,MAAA1b,QAAA,EAEA+X,EAAAsE,QAAAyD,OAEA/H,EAAAsE,QAAAyC,iBAAA/G,EAAA2D,MAAA6C,YAAAxG,EAAA2D,MAAA1b,SAEA+X,EAAA2D,MAAA6C,WAAAG,YACA3G,EAAA2D,MAAA6C,WAAAF,MAAAjkB,SAGA2d,EAAA2D,MAAA6C,WAAAF,MAAA1lB,WAMA2e,EAAAxgC,UAAAojB,MAAA,WACAxmB,KAAA2oC,QAAA0C,wBACArrC,KAAAgoC,MAAA6C,aACA7qC,KAAAgoC,MAAA1b,QAKAtsB,KAAAgoC,MAAA6C,WAAAF,MAAAnkB,SAGAod,EAAAxgC,UAAAijC,KAAA,WACArmC,KAAA2oC,QAAA0C,yBAIArrC,KAAA2oC,QAAA4D,SAAAvsC,KAAAgoC,MAAA6C,WAAA91B,IAEA/U,KAAAsiC,QAAA,gBAGAsB,EAAAxgC,UAAAgjC,OAAA,WACApmC,KAAA2oC,QAAA0C,yBAIArrC,KAAA2oC,QAAA6D,WAAAxsC,KAAAgoC,MAAA6C,WAAA91B,IAEA/U,KAAAsiC,QAAA,kBAGAsB,EAAAxgC,UAAAkjC,QAAA,WACAtmC,KAAA2oC,QAAA0C,yBAIArrC,KAAA2oC,QAAA8D,YAAAzsC,KAAAgoC,MAAA6C,WAAA91B,IAEA/U,KAAAsiC,QAAA,iBAEAtiC,KAAAimC,SAGArC,EAAAxgC,UAAA6iC,KAAA,WACAjmC,KAAA2oC,QAAA0C,wBAKArrC,KAAA2oC,QAAA+D,eAGA9I,EAAAxgC,UAAA2oC,QAAA,WACA/rC,KAAA2oC,QAAA,KAEA3oC,KAAAgoC,MAAA6C,YAAA7qC,KAAAgoC,MAAA6C,WAAAF,OACA3qC,KAAAgoC,MAAA6C,WAAAF,MAAAoB,WAIAnI,EAAAxgC,UAAA4iC,gBAAA,WACA,OAAAhmC,KAAAgoC,MAAAQ,UACA,YAEAxoC,KAAA2oC,QAAA0C,uBAKArrC,KAAAgoC,MAAA1b,OACA,SAGA,UAPA,QAYAsX,EAAAxgC,UAAA4jC,YAAA,WACA,OAAAhnC,KAAAgoC,MAAA6C,YAAA7qC,KAAAgoC,MAAA6C,WAAAF,MACA3qC,KAAAgoC,MAAA6C,WAAAF,MAAAlzB,WAGA,GAIAmsB,EAAAxgC,UAAA6jC,YAAA,WACA,OAAAjnC,KAAAgoC,MAAA6C,YAAA7qC,KAAAgoC,MAAA6C,WAAAF,MACA3qC,KAAAgoC,MAAA6C,WAAAF,MAAA/xB,WAGA,GAIAgrB,EAAAxgC,UAAA6kC,aAAA,WACA,OAAAjoC,KAAA2oC,QAAAV,gBAIArE,EAAAxgC,UAAAqmC,QAAA,WACA,SAAArB,KAFA,UAGAC,eACA,SAAAA,aAAA,OAOAzE,EAAAxgC,UAAAomC,SAAA,SAAAC,GACAA,GACAzpC,KAAA+oC,QAAAhiB,UAAA,GAEAqhB,MACAC,aAAA,OAAA,GAGAroC,KAAAsiC,QAAA,WAGAtiC,KAAA+oC,QAAAhiB,UAAA,KAEAqhB,MACAC,aAAA,OAAA,GAGAroC,KAAAsiC,QAAA,aAIAsB,EAAAxgC,UAAA8xB,QAAA,WACA,IAAAP,EAAA30B,KAAAgoC,MAAA6C,YAAA7qC,KAAAgoC,MAAA6C,WAAAF,MACA3C,EAAAhoC,KAAA2oC,QAAAzT,QAAAP,EAAA30B,KAAAgoC,MAAA6C,WAAAF,MAAAlzB,WAAA,GAOA,OALAzX,KAAAwmB,QAEAxmB,KAAAgoC,MAAAQ,WAAA,EACAxoC,KAAAsiC,QAAA,WAEA0F,GAGApE,EAAAxgC,UAAAupC,UAAA,SAAA3E,EAAA4E,GACA5sC,KAAA2oC,QAAAgE,UAAA3E,GAEA4E,GACA5sC,KAAAilB,QAIAvlB,EAAAD,QAAAmkC,iNCsTA,SAAAiJ,EAAAC,EAAA9iC,EAAA+iC,IACAD,EAAAA,EAAA,EAAAA,EAAA,KAEA9iC,IACA8iC,EAAA9iC,GAGAka,WAAA,WACA6oB,EAAAD,IACAA,GAyHA,SAAA1E,IACA,IACA,MAAA,iBAAAvoC,QAAA,OAAAA,OAAA,eAAAA,OAAAwoC,aAAA,cAAA,GACA,MAAAnoC,GAEA,OADAmR,EAAA,8CAAAnR,EAAAotB,UACA,GA/1BA,IAAAiU,EAAA,oBAAA1hC,OAAAA,OAAA,OAAA,IAAAC,EAAAA,EAAA,EAAA,KACAskC,EAAA,oBAAAvkC,OAAAA,OAAA,YAAA,IAAAC,EAAAA,EAAA,OAAA,KACAuR,EAAA3Q,EAAA,WACA8gC,EAAA9gC,EAAA,YACAssC,EAAAtsC,EAAA,UACAgR,EAAAhR,EAAA,aAAAgR,OACAu7B,EAAAvsC,EAAA,eACAgZ,EAAAhZ,EAAA,aAEAgjC,EAAA,SAAA4E,EAAAC,EAAA7kB,GACAA,EAAAA,MAEA1jB,KAAAktC,QAQAnD,QAAAiD,EAAAG,YAAAzpB,EAAAqmB,SAAA,aAAA,GACApO,QAAA,UACAyR,WAAA,IACAC,WAAA,EAKAC,QAAA,KASAC,eAAA,KASAC,YAAA,MAIAjM,EAAAmH,OAAA1oC,KAAAwhC,GAEA8G,GAAAC,GACAvoC,KAAAytC,eAAAnF,EAAAC,IAIA7E,EAAAtgC,UAAA0mC,WAAA,SAAAC,GACA/pC,KAAAktC,OAAAnD,QAAAiD,EAAAG,YAAApD,IAGArG,EAAAtgC,UAAAqqC,eAAA,SAAAnF,EAAAC,GACAvoC,KAAAktC,OAAA5E,MAAAA,EACAtoC,KAAAktC,OAAA3E,OAAAA,GAGA7E,EAAAtgC,UAAAsmC,eAAA,SAAAC,GACA3pC,KAAAktC,OAAAvD,YAAAA,EACA3pC,KAAAsiC,QAAA,oBAAAqH,GAEA3pC,KAAA0tC,WAGAhK,EAAAtgC,UAAAwmC,aAAA,SAAAC,GACA7pC,KAAAktC,OAAArD,WAAAA,IACA7pC,KAAAktC,OAAArD,UAAAA,EACA7pC,KAAAsiC,QAAA,kBAAAuH,GAEA7pC,KAAA0tC,YAIAhK,EAAAtgC,UAAAkmC,WAAA,SAAA3N,GACA37B,KAAAktC,OAAAvR,QAAAA,EAEA37B,KAAA0tC,WAGAhK,EAAAtgC,UAAAuqC,cAAA,SAAAP,GACAptC,KAAAktC,OAAAE,WAAAA,GAIA1J,EAAAtgC,UAAAgpC,KAAA,WACA,IAAApsC,KAAAktC,OAAA5E,MACA,MAAA,IAAA1nC,MAAA,sCAGA,IAAAZ,KAAAktC,OAAA3E,OACA,MAAA,IAAA3nC,MAAA,uCAIAZ,KAAAktC,OAAAK,eAAA,KACAvtC,KAAAktC,OAAAM,YAAA,KAIAxtC,KAAA4tC,mBAAA,MAAA,GAIA5tC,KAAA6tC,mCAIAnK,EAAAtgC,UAAAyqC,gCAAA,SAAAf,GAGA,IAAA9sC,KAAAktC,OAAAvD,cAAA3pC,KAAAktC,OAAA1G,WAAAxmC,KAAAktC,OAAA1G,UAAAzxB,KAAA/U,KAAAktC,OAAAvD,YAAA,CAKA,IAAAmE,GACA34B,IARAnV,KAQAktC,OAAAnD,QAAA,oBACAjlC,KAAA,MACAE,MACA+oC,UAXA/tC,KAWAktC,OAAAc,UAEAC,SAAA,OACAC,QAAA,KAIA78B,EAAA,wDAlBArR,KAmBAmuC,YAAAL,GACAM,KAAA7M,EAAAkE,KApBAzlC,KAoBAquC,oCApBAruC,OAqBAsuC,KAAA/M,EAAAkE,KArBAzlC,KAqBAuuC,mCArBAvuC,KAqBA8sC,MAGApJ,EAAAtgC,UAAAirC,oCAAA,SAAAG,GACAA,GAAAA,EAAAxT,SAAAwT,EAAAhI,YACAxmC,KAAAktC,OAAA1G,UAAAgI,EAAAhI,UACAxmC,KAAAktC,OAAAuB,SAAAD,EAAAC,SAEAzuC,KAAAktC,OAAAvD,YAAA6E,EAAAhI,UAAAzxB,GACA/U,KAAAsiC,QAAA,oBAAAtiC,KAAAktC,OAAAvD,aAEA3pC,KAAAsiC,QAAA,YAAAkM,EAAAhI,aAEA,cAAAxmC,KAAAktC,SAAAsB,EAAAC,SAAAztC,OAAA,IACAhB,KAAAktC,OAAArD,UAAA2E,EAAAC,SAAA,GAAA15B,GACA/U,KAAAsiC,QAAA,kBAAAtiC,KAAAktC,OAAArD,YAGA7pC,KAAAsiC,QAAA,WAAAkM,EAAAC,UAGAzuC,KAAA0uC,qBAIAhL,EAAAtgC,UAAAmrC,mCAAA,SAAAzB,EAAA6B,GACA,GAAA,MAAAA,EAAA5T,OACA,IACA,IAAA6T,EAAAxK,EAAAyK,UAAAF,EAAAG,cACA,GAAAF,EAAAjjC,OAAA,IAAAijC,EAAAjjC,MAAA9K,KAEA,YADAb,KAAAsiC,QAAA,uBAGA,MAAApiC,IAMA4sC,EAAAA,EAAA,EAAAA,EAAA,IACAvL,EAAAuL,MAAAvL,EAAAkE,KAAAzlC,KAAA6tC,gCAAA7tC,KAAA8sC,GAAAA,IAGApJ,EAAAtgC,UAAAkoC,mBAAA,WACA,OAAAtrC,KAAAktC,OAAA1G,UACAxmC,KAAAktC,OAAA1G,UAEA,MAIA9C,EAAAtgC,UAAAgoC,cAAA,WACA,OAAAprC,KAAAktC,OAAAI,QACAttC,KAAAktC,OAAAI,QAAAroB,KAEA,MAIAye,EAAAtgC,UAAA6oC,QAAA,WACA,OAAAjsC,KAAAktC,OAAAI,SAAAttC,KAAAktC,OAAAK,gBAGA7J,EAAAtgC,UAAAioC,qBAAA,WACA,OAAArrC,KAAAktC,OAAAI,SAAAttC,KAAAktC,OAAAI,QAAAyB,SAIArL,EAAAtgC,UAAAsqC,QAAA,WAEA1tC,KAAAisC,WAIAjsC,KAAAosC,QAGA1I,EAAAtgC,UAAA+nC,kBAAA,WACA,IAAAnrC,KAAAktC,OAAAI,QACA,MAAA,IAAA1sC,MAAA,iEAGAZ,KAAAgvC,WAAAhvC,KAAAktC,OAAAI,QAAAroB,OAGAye,EAAAtgC,UAAAyoC,kBAAA,SAAAoD,GACA,IAAAjvC,KAAAktC,OAAAI,QACA,MAAA,IAAA1sC,MAAA,oEAGAZ,KAAAmuC,aACAh5B,IAAAnV,KAAAktC,OAAAnD,QAAA,gBAAA/pC,KAAAktC,OAAAI,QAAAroB,KAAAlQ,GAAA,UACAjQ,KAAA,OACAE,MACAiqC,QAAAA,MAKAvL,EAAAtgC,UAAAsoC,oBAAA,WAGA,IAAA1rC,KAAAktC,OAAAI,UAAAttC,KAAAktC,OAAAI,QAAA,QASA,MADAj8B,EAAA,wCACA,IAAAzQ,MAAA,6BARAZ,KAAAmuC,aACAh5B,IAAAnV,KAAAktC,OAAAnD,QAAA,gBAAA/pC,KAAAktC,OAAAI,QAAAroB,KAAAlQ,GAAA,YACAjQ,KAAA,SAEAoqC,OAAA3N,EAAAkE,KAPAzlC,KAOAmvC,sBAPAnvC,QAeA0jC,EAAAtgC,UAAA+rC,sBAAA,WACA,GAAAnvC,KAAAktC,OAAAK,eAUAl8B,EAAA,iEAIArR,KAAA4tC,mBAAA,MAAA,OAdA,CACAv8B,EAAA,qEAGA,IAAAm8B,EAAAxtC,KAAAktC,OAAAM,YACAxtC,KAAAktC,OAAAM,YAAA,KAEAxtC,KAAA4tC,mBAAAJ,KAWA9J,EAAAtgC,UAAAspC,YAAA,WACA,IAAA1sC,KAAAktC,OAAAI,QACA,MAAA,IAAA1sC,MAAA,wBAGA,IAAAZ,KAAAktC,OAAAI,QAAAyB,QACA,MAAA,IAAAnuC,MAAA,4BAGAZ,KAAAktC,OAAAI,QAAA8B,QAKApvC,KAAAmuC,aACAh5B,IAAAnV,KAAAktC,OAAAnD,QAAA,gBAAA/pC,KAAAktC,OAAAI,QAAAroB,KAAAlQ,GAAA,QACAjQ,KAAA,SAEAspC,KAAA7M,EAAAkE,KAAAzlC,KAAAqvC,aAAArvC,KAAAA,KAAAktC,OAAAI,QAAAroB,OACAqpB,KAAA/M,EAAAkE,KAAAzlC,KAAAsvC,UAAAtvC,KAAAA,KAAAktC,OAAAI,QAAAroB,OATAjlB,KAAAsiC,QAAA,gBAYAoB,EAAAtgC,UAAAqoC,kBAAA,WACA,IAAAzrC,KAAAktC,OAAAI,QACA,MAAA,IAAA1sC,MAAA,iCAGAZ,KAAAuvC,gBAAAvvC,KAAAktC,OAAAI,QAAAroB,OAGAye,EAAAtgC,UAAAmsC,gBAAA,SAAAtqB,EAAA6nB,GACA9sC,KAAAmuC,aACAh5B,IAAAnV,KAAAktC,OAAAnD,QAAA,gBAAA9kB,EAAAlQ,GAAA,cACAjQ,KAAA,SAEAspC,KAAA7M,EAAAkE,KAAAzlC,KAAAwvC,mBAAAxvC,KAAAilB,IACAqpB,KAAA/M,EAAAkE,KAAAzlC,KAAAyvC,gBAAAzvC,KAAA8sC,EAAA7nB,KAGAye,EAAAtgC,UAAAqsC,gBAAA,SAAA3C,EAAA7nB,EAAA0pB,GACA,IAAA5uC,EAAAC,MAEA8sC,EAAAA,EAAA,EAAAA,EAAA,KAEA,IACAvL,EAAAuL,MAAA,WACA/sC,EAAAwvC,gBAAAtqB,IACA6nB,GAGAz7B,EAAA,oCAAAs9B,IAKAjL,EAAAtgC,UAAAosC,mBAAA,SAAAvqB,EAAA0pB,GACA,GAAA3uC,KAAAktC,OAAAI,SAAAttC,KAAAktC,OAAAI,QAAAroB,OAAAA,EAKA,GAAA0pB,EAAA3T,QAKA,GAAAh7B,KAAAktC,OAAAM,YAAA,CACAn8B,EAAA,0CAEA,IAAAm8B,EAAAxtC,KAAAktC,OAAAM,YACAxtC,KAAAktC,OAAAM,YAAA,KACAxtC,KAAA4tC,mBAAAJ,QAGAn8B,EAAA,6BACArR,KAAA4tC,mBAAA,MAAA,GAEA5tC,KAAAktC,OAAAK,iBACAl8B,EAAA,wBACArR,KAAA0uC,yBAjBAr9B,EAAA,wDAuBAqyB,EAAAtgC,UAAAksC,UAAA,SAAArqB,GACAjlB,KAAAktC,OAAAI,SAAAttC,KAAAktC,OAAAI,QAAAroB,OAAAA,GAMAjlB,KAAAsiC,QAAA,gBAGAoB,EAAAtgC,UAAAisC,aAAA,SAAApqB,EAAA0pB,GACA,GAAA3uC,KAAAktC,OAAAI,SAAAttC,KAAAktC,OAAAI,QAAAroB,OAAAA,EAAA,CAKA,IAAA0pB,EAAA3T,QAGA,OAFA3pB,EAAA,qBACArR,KAAAsiC,QAAA,eAIA,GAAAtiC,KAAAktC,OAAAM,YAAA,CACAn8B,EAAA,sCAEA,IAAAm8B,EAAAxtC,KAAAktC,OAAAM,YACAxtC,KAAAktC,OAAAM,YAAA,KACAxtC,KAAA4tC,mBAAAJ,QAEAxtC,KAAAktC,OAAAK,gBACAl8B,EAAA,iCAEArR,KAAA4tC,mBAAA,MAAA,KAGAv8B,EAAA,iCAEArR,KAAA4tC,mBAAA,SAKAlK,EAAAtgC,UAAA4rC,WAAA,SAAA/pB,GACAjlB,KAAAktC,OAAAI,QAAAoC,WAAA,EAEA1vC,KAAA2vC,kBAAA1qB,GAAA+V,SAAA,EAAA4U,UAAA,KAGAv+B,EAAA,yCAAA4T,GAGAjlB,KAAAmuC,aACAh5B,IAAAnV,KAAAktC,OAAAnD,QAAA,gBAAA9kB,EAAAlQ,GAAA,SACAjQ,KAAA,OACAmpC,SAAA,OACAC,QAAA,MAEAE,KAAA7M,EAAAkE,KAAAzlC,KAAA2vC,kBAAA3vC,KAAAilB,IACAqpB,KAAA/M,EAAAkE,KAAAzlC,KAAA6vC,eAAA7vC,KAAAilB,MAIAye,EAAAtgC,UAAAusC,kBAAA,SAAA1qB,EAAA0pB,GACAA,EAAA3T,QAEAh7B,KAAAktC,OAAAI,SAAAttC,KAAAktC,OAAAI,QAAAroB,OAAAA,GACAjlB,KAAAktC,OAAAI,QAAA8B,QAAAT,EAAAiB,SACA5vC,KAAAktC,OAAAI,QAAAyB,SAAA,EAEA/uC,KAAAsiC,QAAA,eAAArd,GAIAjlB,KAAA0uC,oBAGAr9B,EAAA,iDAIAA,EAAA,kCAIAqyB,EAAAtgC,UAAAysC,eAAA,SAAA5qB,EAAA0pB,GAEA,GAAA3uC,KAAAktC,OAAAI,SAAAttC,KAAAktC,OAAAI,QAAAroB,OAAAA,EAAA,CAEA,GAAA,MAAA0pB,EAAA5T,OACA,IACA,IAAA6T,EAAAxK,EAAAyK,UAAAF,EAAAG,cAEA,GAAAF,EAAAjjC,OAAA,KAAAijC,EAAAjjC,MAAA9K,KAGA,OAAAb,KAAA2vC,kBAAA1qB,GAAA+V,SAAA,EAAA4U,UAAA,IAEA,MAAA1vC,GAEAmR,EAAA,sCAAAnR,EAAAotB,SAIAjc,EAAA,4CAAAs9B,EAAA5T,QAEA/6B,KAAAktC,OAAAI,QAAAoC,aAGAnO,EAAAuL,MAAAvL,EAAAkE,KAAAzlC,KAAAgvC,WAAAhvC,KAAAilB,GAAA,UAGA5T,EAAA,iDAKAqyB,EAAAtgC,UAAAwqC,mBAAA,SAAA3oB,EAAA6qB,GAEA9vC,KAAAktC,OAAAI,UACAttC,KAAAsiC,QAAA,iBAAAtiC,KAAAktC,OAAAI,QAAAroB,MACAjlB,KAAAktC,OAAAI,QAAA,MAEA,OAAAroB,EAGA6qB,EAEAz+B,EAAA,+BAIAA,EAAA,4CACArR,KAAAsiC,QAAA,qBAKAtiC,KAAAktC,OAAAI,SACAroB,KAAAA,EACAmqB,SAAA,EACAL,SAAA,EACAW,WAAA,GAKAr+B,EAAA,sBACArR,KAAAsiC,QAAA,cAAArd,KAKAye,EAAAtgC,UAAAsrC,iBAAA,SAAA5B,GACA,IAAA/sC,EAAAC,KAEAA,KAAA+vC,eAAA1D,KAAA,WACA,GAAAtsC,EAAAmtC,OAAAK,eACA,OAAAT,EAIAA,EAAA,KACAz7B,EAAA,qCAGAtR,EAAAmtC,OAAAK,eAAA,UAEA,MAAAxtC,EAAAmtC,OAAAI,SAGAvtC,EAAA6tC,mBAAA,SAKAv8B,EAAA,4BAGAtR,EAAAmtC,OAAAK,eAAAmC,kBAEA3vC,EAAAouC,YAAApuC,EAAAmtC,OAAAK,eAAAO,MACAM,KAAA7M,EAAAkE,KAAA1lC,EAAAiwC,iBAAAjwC,EAAAA,EAAAmtC,OAAAK,eAAAO,OACAQ,KAAA/M,EAAAkE,KAAA1lC,EAAAkwC,gBAAAlwC,EAAA+sC,EAAA/sC,EAAAmtC,OAAAK,eAAAO,aAxBAz8B,EAAA,2CA+BA,IAAAy8B,GACA34B,IAAApV,EAAAmtC,OAAAnD,QAAA,eACAjlC,KAAA,OACAmpC,SAAA,OACAC,QAAA,IACAlpC,MACA22B,QAAA57B,EAAAmtC,OAAAvR,QACAoS,UAAAhuC,EAAAmtC,OAAAc,SACAkC,YAAAnwC,EAAAmtC,OAAAE,WACA+C,QAAA,IAIApwC,EAAAmtC,OAAAvD,cACAmE,EAAA9oC,KAAAorC,aAAArwC,EAAAmtC,OAAAvD,aAGA5pC,EAAAmtC,OAAArD,YACAiE,EAAA9oC,KAAAqrC,WAAAtwC,EAAAmtC,OAAArD,WAGA9pC,EAAAmtC,OAAAK,gBACAO,KAAAA,EACA4B,WAAA,GAIAr+B,EAAA,kCAAAy8B,GACA/tC,EAAAouC,YAAAL,GACAM,KAAA7M,EAAAkE,KAAA1lC,EAAAiwC,iBAAAjwC,EAAA+tC,IACAQ,KAAA/M,EAAAkE,KAAA1lC,EAAAkwC,gBAAAlwC,EAAA+sC,EAAAgB,OAMApK,EAAAtgC,UAAA4sC,iBAAA,SAAAlC,EAAAa,GAEA3uC,KAAAktC,OAAAK,gBAAAvtC,KAAAktC,OAAAK,eAAAO,OAAAA,GAEA9tC,KAAAktC,OAAAK,eAAA,KAEAoB,EAAA3T,QACAh7B,KAAAktC,OAAAI,SACAj8B,EAAA,2DAAAs9B,EAAA1pB,MAGAjlB,KAAAktC,OAAAM,YAAAmB,EAAA1pB,OAGA5T,EAAA,oDAAAs9B,EAAA1pB,MAGAjlB,KAAA4tC,mBAAAe,EAAA1pB,OAIA0pB,EAAAhjC,OAAA,IAAAgjC,EAAAhjC,MAAA9K,KACAb,KAAAktC,OAAAI,SACAj8B,EAAA,uDAEArR,KAAAktC,OAAAM,YAAA,OAGAn8B,EAAA,6CAEArR,KAAAsiC,QAAA,oBAIAjxB,EAAA,wBAAAs9B,IAIAt9B,EAAA,0CAKAqyB,EAAAtgC,UAAA6sC,gBAAA,SAAAnD,EAAAgB,EAAAa,GAEA,GAAA3uC,KAAAktC,OAAAK,gBAAAvtC,KAAAktC,OAAAK,eAAAO,OAAAA,EAAA,CAEA,GAAA,MAAAa,EAAA5T,OACA,IACA,IAAA6T,EAAAxK,EAAAyK,UAAAF,EAAAG,cAEA,GAAAF,EAAAjjC,OAAA,KAAAijC,EAAAjjC,MAAA9K,KAGA,YADAb,KAAAsiC,QAAA,YAAAsM,EAAAjjC,MAAA2hB,SAGA,MAAAptB,GAEAmR,EAAA,+BAAAnR,EAAAotB,SAIAjc,EAAA,gCAAAs9B,EAAA5T,QAEA+R,EAAAA,EAAA,EAAAA,EAAA,IACAvL,EAAAuL,MAAAvL,EAAAkE,KAAAzlC,KAAA0uC,iBAAA1uC,KAAA8sC,GAAAA,QAGAz7B,EAAA,uCAIAqyB,EAAAtgC,UAAA2sC,aAAA,WACA,GAAA/vC,KAAAswC,cACA,OAAAtwC,KAAAswC,cAEA,IAAAC,EAAA,IAAAnM,EAAA0E,SACA9oC,KAAAswC,cAAAC,EAAAC,UAEA,IAAAzwC,EAAAC,KAWA,OATAA,KAAAywC,iBAAA,SAAAzC,GAEAjuC,EAAAmtC,OAAAc,SAAAA,EAEAjuC,EAAA2wC,cAAA3wC,EAAAmtC,OAAAc,UAEAuC,EAAAhH,QAAAyE,KAGAhuC,KAAAswC,eAIA5M,EAAAtgC,UAAAqtC,iBAAA,SAAAE,EAAA7D,GAEA,IAAAkB,EAAAhuC,KAAA4wC,gBAEA,GAAA5C,EACA,OAAA2C,EAAA3C,GAGA,IAAAjuC,EAAAC,KAEAA,KAAAmuC,aACAh5B,IAAApV,EAAAmtC,OAAAnD,QAAA,iBACAjlC,KAAA,SAEAspC,KAAA,SAAAO,GACAA,EAAA3T,QACA2V,EAAAhC,EAAAZ,WAGAlB,EAAAC,EAAA,IAAA,SAAA+D,GAEA9wC,EAAA0wC,iBAAAE,EAAAE,OAIAvC,KAAA,SAAAK,GACA,GAAA,MAAAA,EAAA5T,OACA,IACA,IAAA6T,EAAAxK,EAAAyK,UAAAF,EAAAG,cAEA,GAAAF,EAAAjjC,OAAA,KAAAijC,EAAAjjC,MAAA9K,KAGA,YADAd,EAAAuiC,QAAA,YAAAsM,EAAAjjC,MAAA2hB,SAGA,MAAAptB,GAEAmR,EAAA,yCAAAnR,EAAAotB,cAIAjc,EAAA,oCAAAs9B,EAAA5T,QAGA8R,EAAAC,EAAA,IAAA,SAAA+D,GAEA9wC,EAAA0wC,iBAAAE,EAAAE,QAmBAnN,EAAAtgC,UAAA6kC,aAAA,WACA,OAAAjoC,KAAAktC,OAAAI,SAAAttC,KAAAktC,OAAAI,QAAAyB,SAAA/uC,KAAAktC,OAAAI,QAAA8B,SAGA1L,EAAAtgC,UAAAmpC,SAAA,SAAArB,GACAlrC,KAAAmuC,aACAh5B,IAAAnV,KAAAktC,OAAAnD,QAAA,gBAAAmB,EAAA,QACApmC,KAAA,SAGA9E,KAAAktC,OAAAI,SAAAttC,KAAAktC,OAAAI,QAAAroB,KAAAlQ,KAAAm2B,IACAlrC,KAAAktC,OAAAI,QAAAroB,KAAA2hB,OAAA,IAIAlD,EAAAtgC,UAAAopC,WAAA,SAAAtB,GACAlrC,KAAAmuC,aACAh5B,IAAAnV,KAAAktC,OAAAnD,QAAA,gBAAAmB,EAAA,QACApmC,KAAA,WAGA9E,KAAAktC,OAAAI,SAAAttC,KAAAktC,OAAAI,QAAAroB,KAAAlQ,KAAAm2B,UACAlrC,KAAAktC,OAAAI,QAAAroB,KAAA,OAIAye,EAAAtgC,UAAAqpC,YAAA,SAAAvB,GACAlrC,KAAAmuC,aACAh5B,IAAAnV,KAAAktC,OAAAnD,QAAA,gBAAAmB,EAAA,WACApmC,KAAA,SAGA9E,KAAAktC,OAAAI,SAAAttC,KAAAktC,OAAAI,QAAAroB,KAAAlQ,KAAAm2B,IACAlrC,KAAAktC,OAAAI,QAAAroB,KAAA2hB,OAAA,IAYAlD,EAAAtgC,UAAA8xB,QAAA,SAAAwV,GACA,IAAAoG,KAqBA,OAnBA9wC,KAAAktC,OAAAvD,cACAmH,EAAAnH,YAAA3pC,KAAAktC,OAAAvD,aAGA3pC,KAAAktC,OAAArD,YACAiH,EAAAjH,UAAA7pC,KAAAktC,OAAArD,WAGA7pC,KAAAktC,OAAAI,SAAAttC,KAAAktC,OAAAI,QAAAyB,UAIA+B,EAAAtK,UAAAxmC,KAAAktC,OAAA1G,UACAsK,EAAArC,SAAAzuC,KAAAktC,OAAAuB,SACAqC,EAAA7rB,KAAAsc,EAAAwP,MAAA/wC,KAAAktC,OAAAI,QAAAroB,MACA6rB,EAAA7rB,KAAAylB,cAAAA,EACAoG,EAAA1B,QAAApvC,KAAAktC,OAAAI,QAAA8B,SAGA0B,GAWApN,EAAAtgC,UAAAupC,UAAA,SAAAmE,GACA,GAAA9wC,KAAAorC,gBACA,MAAA,IAAAxqC,MAAA,6CAaA,MAVA,gBAAAkwC,IACA9wC,KAAAktC,OAAAvD,YAAAmH,EAAAnH,YACA3pC,KAAAsiC,QAAA,oBAAAtiC,KAAAktC,OAAAvD,cAGA,cAAAmH,IACA9wC,KAAAktC,OAAArD,UAAAiH,EAAAjH,UACA7pC,KAAAsiC,QAAA,kBAAAtiC,KAAAktC,OAAArD,YAGA,SAAAiH,GACA9wC,KAAAktC,OAAA1G,UAAAsK,EAAAtK,UACAxmC,KAAAktC,OAAAuB,SAAAqC,EAAArC,SAEAzuC,KAAAsiC,QAAA,YAAAtiC,KAAAktC,OAAA1G,WACAxmC,KAAAsiC,QAAA,WAAAtiC,KAAAktC,OAAAuB,UAGAzuC,KAAA4tC,mBAAAkD,EAAA7rB,MAKAjlB,KAAA2vC,kBAAAmB,EAAA7rB,MAAA+V,SAAA,EAAA4U,SAAAkB,EAAA1B,UAEA0B,EAAA7rB,OAGAjlB,KAAAosC,OAEA,OAcA1I,EAAAtgC,UAAAwtC,cAAA,WACA,OAAAxI,IACAC,aAAA,IAEA4E,EAAA1O,IALA,QASAmF,EAAAtgC,UAAAstC,cAAA,SAAAjtC,GACA2kC,IACAC,aAAA,IAAA5kC,EAEAwpC,EAAA18B,IAbA,MAaA9M,GAAAi8B,QAAA,KAAAsR,KAAA,OAIAtN,EAAAtgC,UAAA6tC,iBAAA,WACA7I,IACAC,aAAA6I,WAnBA,OAqBA9M,EAAArE,aArBA,OAqBAiR,KAAA,OAIAtN,EAAAtgC,UAAA+tC,MAAA,SAAAC,GACA,IAAAC,EAWA,OARAA,EAAA,SAAA3/B,EAAAgB,OAAA1S,KAAAktC,OAAA5E,MAAA,IAAAtoC,KAAAktC,OAAA3E,QAEA6I,EAAAE,SACAC,cAAAF,GAGAD,EAAAE,QAAA,cAAA53B,EAEA03B,GAGA1N,EAAAtgC,UAAA+qC,YAAA,SAAAiD,GAGA,OAFApxC,KAEAwxC,MAFAxxC,KAEAmxC,MAAAC,KAGA1N,EAAAtgC,UAAAouC,MAAA,SAAAJ,GACA,OAAAhN,EAAA0J,KAAAsD,IAGA1xC,EAAAD,QAAAikC,4OC96BA,IAAAnC,EAAA,oBAAA1hC,OAAAA,OAAA,OAAA,IAAAC,EAAAA,EAAA,EAAA,KACAskC,EAAA,oBAAAvkC,OAAAA,OAAA,YAAA,IAAAC,EAAAA,EAAA,OAAA,KACAuR,EAAA3Q,EAAA,WACA8gC,EAAA9gC,EAAA,YACAssC,EAAAtsC,EAAA,UACAsT,EAAAtT,EAAA,iBAUA+wC,EAAA,SAAA/tB,GACA,IAAAnf,EAAAg9B,EAAAmH,OAAA1oC,KAAAwhC,GAoBA,OAlBA9d,GACA,kBAAAA,IACA1jB,KAAA0qC,cAAAhnB,EAAAgnB,eAGAnJ,EAAA8B,MAAA,OAAA,QAAA,SAAA,UAAA,SAAAnB,GACAA,KAAAxe,GACAnf,EAAAk9B,GAAAS,EAAAxe,EAAAwe,MAIAliC,KAAAsqC,KAAA5mB,EAAA4mB,MAAA,GAGAtqC,KAAAsqC,KAAA,EAIA/lC,GAGAktC,EAAAruC,WACA6hB,KAAA,WACA,IAAA0lB,EAAA3qC,KAEA,GAAAA,KAAA0xC,SACA,IAAA1xC,KAAA0xC,SAAAC,MAAA3xC,KAAA0qC,cAAA,CACA,IAAAA,EAAA1qC,KAAA0qC,cAEA1qC,KAAA0xC,SAAA1sB,MACAjO,aAAA,WACA,IAAA/W,KAAAorB,WAAAprB,KAAA4Y,SAAA8xB,IAEA1qC,KAAAomB,YAAAskB,GACA1qC,KAAAilB,gBAIAjlB,KAAA0xC,SAAAzmB,QACAjrB,KAAA0xC,SAAAzsB,OAGAf,WAAA,WACAymB,EAAA+G,SAAAzsB,QACA,IAMAuB,MAAA,WACAxmB,KAAA0xC,UACA1xC,KAAA0xC,SAAAlrB,SAKAE,OAAA,WACA1mB,KAAA0xC,UACA1xC,KAAA0xC,SAAAhrB,UAKAjP,SAAA,WACA,OAAAzX,KAAA0xC,SACA1xC,KAAA0xC,SAAAj6B,SAEA,GAMAmB,SAAA,WACA,GAAA5Y,KAAA0xC,SAAA,CACA,IAAA3gC,EAAA/Q,KAAA0xC,SAAA94B,SACA,OAAA7H,GAAA,EAEA,OAAA,GAKAg7B,QAAA,WACA16B,EAAA,wBAAArR,KAAA+U,IAEA/U,KAAA0xC,kBACA3I,EAAA6I,iBAAA5xC,KAAA+U,IACA/U,KAAA0xC,SAAAhsB,WACA1lB,KAAA0xC,SAAA,MAGA1xC,KAAA+hC,OAGA8P,kBAAA,SAAA9yB,GACA/e,KAAA8xC,cAAA/yB,IACA/e,KAAA8xC,YAAA/yB,EACA/e,KAAAsiC,QAAA34B,MAAA3J,KAAA6C,MAAAO,UAAAiB,MAAAtD,KAAAiM,UAAA,MAIA+kC,mBAAA,SAAAh6B,GACA,IAAA/X,KAAAsqC,KAEA,OADAj5B,EAAA,wBACA0G,EAGA,IAAAi6B,EAAAjsC,KAAAiE,IAAAjE,KAAAC,IAAA+R,EAAA,KAAA,GAAAhS,KAAAwI,IAAA,GAAAvO,KAAAsqC,KAAA,KAAA,KAAA,GAIA,OAFAj5B,EAAA,sBAAArR,KAAAsqC,KAAA,kCAAA0H,GAEAA,IAKA,IAAAC,EAAA,SAAAvuB,GACA,IAAAqlB,EAAA/oC,KAEA0jB,EAAA6d,EAAAmH,QAAAwJ,QAAA,wBAAAxuB,GAEA1jB,KAAAmyC,eAAA/N,EAAA0E,WAEA,IAAAoE,GACAn3B,MAAA,cACAJ,oBAAA,EACAC,qBAAA,IACAC,qBAAA,IACAR,UAAAqO,EAAA0uB,QAAA,EACA78B,aAAAmO,EAAA0uB,MACA98B,WAAAoO,EAAA0uB,QAAA,EACA99B,YAAAoP,EAAApP,cAAA,EACAa,IAAA63B,EAAAG,YAAAzpB,EAAAwuB,SAAA,GACA9pB,QAAA,WACA,IAAAiqB,EAIAA,EAFAxyC,OAAAo+B,aAAArW,YAAA,aAEA,UAGA,MAGAmhB,EAAAoJ,eAAA5I,QAAA8I,KAYAxyC,OAAAo+B,eACAp+B,OAAAo+B,aAAA,IAAAjqB,GAGAnU,OAAAo+B,aAAAxa,MAAAypB,GAEA,IAAA5sC,EAAAojB,EAAA4uB,QACAhyC,IAEA,OADAA,EAAAojB,EAAAwuB,SACA5xC,EAAAU,OAAA,KACAV,GAAA,KAEAA,GAAA,gBAGAN,KAAAsyC,QAAAtF,EAAAG,YAAA7sC,EAAAojB,EAAAysB,SAGA8B,EAAA7uC,WACAmvC,IAAA,IACAX,oBACAY,mBAAA,EACAL,eAAA,KAEA7F,oBAAA,WACA,IAAAtsC,KAAAwyC,kBAAA,CAGA,IAAA7H,EAAA3qC,KAAAyyC,iBACA19B,GAAA,UACAI,IAAAnV,KAAAsyC,QACAv6B,OAAA,EACArB,UAAA,EACA5R,KAAA,cAGA9E,KAAAwyC,mBAAA7H,EAAAgH,OAKA/G,OAAA,SAAAz1B,EAAAu9B,GACA,IAAA/H,EAAA,IAAA8G,EAAAiB,GAQA,OAPA/H,EAAA51B,GAAAwsB,EAAAkC,SAAA,QACAkH,EAAAx1B,IAAAA,EAEAnV,KAAA4xC,iBAAAjH,EAAA51B,IAAA41B,EAEA3qC,KAAA2yC,yBAAAhI,GAEAA,GAGA8H,gBAAA,SAAA/uB,GACA,OAAA7jB,OAAAo+B,aAAA3Z,YAAAZ,IAGAivB,yBAAA,SAAAhI,GACA,IAAA5B,EAAA/oC,KA8DA,OA5DA2qC,EAAA+G,SAAA1xC,KAAAyyC,iBACA19B,GAAA41B,EAAA51B,GACAI,IAAAw1B,EAAAx1B,IACA4C,OAAA4yB,EAAAoH,mBAAAhJ,EAAAwJ,KACA77B,UAAA,EACA5R,KAAA,YACAwS,SAAA,WACAjG,EAAAs5B,EAAA51B,GAAA,cACA/U,KAAA0lB,kBACAqjB,EAAA6I,iBAAAjH,EAAA51B,IACA41B,EAAAkH,kBAAA,WAEAj7B,MAAA,WACAvF,EAAAs5B,EAAA51B,GAAA,YAEAsC,OAAA,WACAhG,EAAAs5B,EAAA51B,GAAA,aAEAwb,UAAA,WACAlf,EAAAs5B,EAAA51B,GAAA,cAEAmC,SAAA,WACA7F,EAAAs5B,EAAA51B,GAAA,cACA41B,EAAAkH,kBAAA,SAEA76B,OAAA,WACA3F,EAAAs5B,EAAA51B,GAAA,YACA41B,EAAAkH,kBAAA,SAEA56B,QAAA,WACA5F,EAAAs5B,EAAA51B,GAAA,WACA41B,EAAAkH,kBAAA,UAEA/6B,OAAA,SAAAkkB,GACA3pB,EAAAs5B,EAAA51B,GAAA,WAAAimB,GACAA,IACA3pB,EAAAs5B,EAAA51B,GAAA,aACA41B,EAAAkH,kBAAA,UAAA,GAEAxgC,EAAA,mCACAs5B,EAAAoB,YAGAxzB,YAAA,WACAlH,EAAAs5B,EAAA51B,GAAA,iBACA41B,EAAAkH,kBAAA,UAAA,GACAxgC,EAAA,8BACAs5B,EAAAoB,WAEApzB,UAAA,WACAtH,EAAAs5B,EAAA51B,GAAA,gBAEAuD,eAAA,WACAjH,EAAAs5B,EAAA51B,GAAA,qBAEAoC,aAAA,WACAwzB,EAAArI,QAAA,aAIAqI,GAIA5jB,UAAA,SAAAtjB,GAWA,YAVA,IAAAA,IACAzD,KAAAuyC,IAAA9uC,EAEA89B,EAAA8B,KAAArjC,KAAA4xC,iBAAA,SAAAgB,GACAA,EAAAlB,SAAA3qB,UAAA6rB,EAAAb,mBAAAtuC,MAGAzD,KAAAsiC,QAAA,SAAA7+B,IAGAzD,KAAAuyC,MAMAhR,EAAAmH,OAAAuJ,EAAA7uC,UAAAo+B,GAEA,IAAAuH,EAAA,KAGArpC,EAAAD,QAAA,SAAAikB,EAAAmvB,GAWA,OAVA,OAAA9J,IACAA,EAAA,IAAAkJ,EAAAvuB,IAGAmvB,GACA9J,EAAAoJ,eAAA9F,KAAA,SAAA1Q,GACAkX,EAAAlX,KAIAoN,mMC5ZA,IAAAiE,KAEAA,EAAAG,YAAA,SAAAh4B,EAAAg7B,GAiBA,MAfA,OAAAh7B,EAAA9Q,MAAA,EAAA,KAEA8Q,GADA,IAAAg7B,EACA,SAAAh7B,GAEA,IAAAg7B,EACA,QAAAh7B,EAEA,SAAAtV,OAAAkgB,SAAAuC,SAAAna,OAAA,EAAA,GACAtI,OAAAkgB,SAAAuC,SAAAnN,EAGA,QAIAA,GAGAzV,EAAAD,QAAAutC,2BCxBAttC,EAAAD,QAAA,qBfAA","file":"feed.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction placeHoldersCount (b64) {\n  var len = b64.length\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // the number of equal signs (place holders)\n  // if there are two placeholders, than the two characters before it\n  // represent one byte\n  // if there is only one, then the three characters before it represent 2 bytes\n  // this is just a cheap hack to not do indexOf twice\n  return b64[len - 2] === '=' ? 2 : b64[len - 1] === '=' ? 1 : 0\n}\n\nfunction byteLength (b64) {\n  // base64 is 4/3 + up to two characters of the original data\n  return (b64.length * 3 / 4) - placeHoldersCount(b64)\n}\n\nfunction toByteArray (b64) {\n  var i, l, tmp, placeHolders, arr\n  var len = b64.length\n  placeHolders = placeHoldersCount(b64)\n\n  arr = new Arr((len * 3 / 4) - placeHolders)\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  l = placeHolders > 0 ? len - 4 : len\n\n  var L = 0\n\n  for (i = 0; i < l; i += 4) {\n    tmp = (revLookup[b64.charCodeAt(i)] << 18) | (revLookup[b64.charCodeAt(i + 1)] << 12) | (revLookup[b64.charCodeAt(i + 2)] << 6) | revLookup[b64.charCodeAt(i + 3)]\n    arr[L++] = (tmp >> 16) & 0xFF\n    arr[L++] = (tmp >> 8) & 0xFF\n    arr[L++] = tmp & 0xFF\n  }\n\n  if (placeHolders === 2) {\n    tmp = (revLookup[b64.charCodeAt(i)] << 2) | (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[L++] = tmp & 0xFF\n  } else if (placeHolders === 1) {\n    tmp = (revLookup[b64.charCodeAt(i)] << 10) | (revLookup[b64.charCodeAt(i + 1)] << 4) | (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[L++] = (tmp >> 8) & 0xFF\n    arr[L++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] + lookup[num >> 12 & 0x3F] + lookup[num >> 6 & 0x3F] + lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp = (uint8[i] << 16) + (uint8[i + 1] << 8) + (uint8[i + 2])\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var output = ''\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    output += lookup[tmp >> 2]\n    output += lookup[(tmp << 4) & 0x3F]\n    output += '=='\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + (uint8[len - 1])\n    output += lookup[tmp >> 10]\n    output += lookup[(tmp >> 4) & 0x3F]\n    output += lookup[(tmp << 2) & 0x3F]\n    output += '='\n  }\n\n  parts.push(output)\n\n  return parts.join('')\n}\n","/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <https://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nvar base64 = require('base64-js')\nvar ieee754 = require('ieee754')\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\nvar K_MAX_LENGTH = 0x7fffffff\nexports.kMaxLength = K_MAX_LENGTH\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Print warning and recommend using `buffer` v4.x which has an Object\n *               implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * We report that the browser does not support typed arrays if the are not subclassable\n * using __proto__. Firefox 4-29 lacks support for adding new properties to `Uint8Array`\n * (See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438). IE 10 lacks support\n * for __proto__ and has a buggy typed array implementation.\n */\nBuffer.TYPED_ARRAY_SUPPORT = typedArraySupport()\n\nif (!Buffer.TYPED_ARRAY_SUPPORT && typeof console !== 'undefined' &&\n    typeof console.error === 'function') {\n  console.error(\n    'This browser lacks typed array (Uint8Array) support which is required by ' +\n    '`buffer` v5.x. Use `buffer` v4.x if you require old browser support.'\n  )\n}\n\nfunction typedArraySupport () {\n  // Can typed array instances can be augmented?\n  try {\n    var arr = new Uint8Array(1)\n    arr.__proto__ = {__proto__: Uint8Array.prototype, foo: function () { return 42 }}\n    return arr.foo() === 42\n  } catch (e) {\n    return false\n  }\n}\n\nfunction createBuffer (length) {\n  if (length > K_MAX_LENGTH) {\n    throw new RangeError('Invalid typed array length')\n  }\n  // Return an augmented `Uint8Array` instance\n  var buf = new Uint8Array(length)\n  buf.__proto__ = Buffer.prototype\n  return buf\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new Error(\n        'If encoding is specified then the first argument must be a string'\n      )\n    }\n    return allocUnsafe(arg)\n  }\n  return from(arg, encodingOrOffset, length)\n}\n\n// Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97\nif (typeof Symbol !== 'undefined' && Symbol.species &&\n    Buffer[Symbol.species] === Buffer) {\n  Object.defineProperty(Buffer, Symbol.species, {\n    value: null,\n    configurable: true,\n    enumerable: false,\n    writable: false\n  })\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\nfunction from (value, encodingOrOffset, length) {\n  if (typeof value === 'number') {\n    throw new TypeError('\"value\" argument must not be a number')\n  }\n\n  if (isArrayBuffer(value)) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'string') {\n    return fromString(value, encodingOrOffset)\n  }\n\n  return fromObject(value)\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(value, encodingOrOffset, length)\n}\n\n// Note: Change prototype *after* Buffer.from is defined to workaround Chrome bug:\n// https://github.com/feross/buffer/pull/148\nBuffer.prototype.__proto__ = Uint8Array.prototype\nBuffer.__proto__ = Uint8Array\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be a number')\n  } else if (size < 0) {\n    throw new RangeError('\"size\" argument must not be negative')\n  }\n}\n\nfunction alloc (size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpretted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(size).fill(fill, encoding)\n      : createBuffer(size).fill(fill)\n  }\n  return createBuffer(size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(size, fill, encoding)\n}\n\nfunction allocUnsafe (size) {\n  assertSize(size)\n  return createBuffer(size < 0 ? 0 : checked(size) | 0)\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(size)\n}\n\nfunction fromString (string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('\"encoding\" must be a valid string encoding')\n  }\n\n  var length = byteLength(string, encoding) | 0\n  var buf = createBuffer(length)\n\n  var actual = buf.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    buf = buf.slice(0, actual)\n  }\n\n  return buf\n}\n\nfunction fromArrayLike (array) {\n  var length = array.length < 0 ? 0 : checked(array.length) | 0\n  var buf = createBuffer(length)\n  for (var i = 0; i < length; i += 1) {\n    buf[i] = array[i] & 255\n  }\n  return buf\n}\n\nfunction fromArrayBuffer (array, byteOffset, length) {\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\\'offset\\' is out of bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\\'length\\' is out of bounds')\n  }\n\n  var buf\n  if (byteOffset === undefined && length === undefined) {\n    buf = new Uint8Array(array)\n  } else if (length === undefined) {\n    buf = new Uint8Array(array, byteOffset)\n  } else {\n    buf = new Uint8Array(array, byteOffset, length)\n  }\n\n  // Return an augmented `Uint8Array` instance\n  buf.__proto__ = Buffer.prototype\n  return buf\n}\n\nfunction fromObject (obj) {\n  if (Buffer.isBuffer(obj)) {\n    var len = checked(obj.length) | 0\n    var buf = createBuffer(len)\n\n    if (buf.length === 0) {\n      return buf\n    }\n\n    obj.copy(buf, 0, 0, len)\n    return buf\n  }\n\n  if (obj) {\n    if (isArrayBufferView(obj) || 'length' in obj) {\n      if (typeof obj.length !== 'number' || numberIsNaN(obj.length)) {\n        return createBuffer(0)\n      }\n      return fromArrayLike(obj)\n    }\n\n    if (obj.type === 'Buffer' && Array.isArray(obj.data)) {\n      return fromArrayLike(obj.data)\n    }\n  }\n\n  throw new TypeError('First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.')\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < K_MAX_LENGTH` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= K_MAX_LENGTH) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + K_MAX_LENGTH.toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return b != null && b._isBuffer === true\n}\n\nBuffer.compare = function compare (a, b) {\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError('Arguments must be Buffers')\n  }\n\n  if (a === b) return 0\n\n  var x = a.length\n  var y = b.length\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!Array.isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  var i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  var buffer = Buffer.allocUnsafe(length)\n  var pos = 0\n  for (i = 0; i < list.length; ++i) {\n    var buf = list[i]\n    if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    }\n    buf.copy(buffer, pos)\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (isArrayBufferView(string) || isArrayBuffer(string)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    string = '' + string\n  }\n\n  var len = string.length\n  if (len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n      case undefined:\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) return utf8ToBytes(string).length // assume utf8\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  var loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// This property is used by `Buffer.isBuffer` (and the `is-buffer` npm package)\n// to detect a Buffer instance. It's not possible to use `instanceof Buffer`\n// reliably in a browserify context because there could be multiple different\n// copies of the 'buffer' package in use. This method works even for Buffer\n// instances that were created from another copy of the `buffer` package.\n// See: https://github.com/feross/buffer/issues/154\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  var i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  var len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (var i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  var len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (var i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  var len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (var i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  var length = this.length\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  var str = ''\n  var max = exports.INSPECT_MAX_BYTES\n  if (this.length > 0) {\n    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ')\n    if (this.length > max) str += ' ... '\n  }\n  return '<Buffer ' + str + '>'\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError('Argument must be a Buffer')\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  var x = thisEnd - thisStart\n  var y = end - start\n  var len = Math.min(x, y)\n\n  var thisCopy = this.slice(thisStart, thisEnd)\n  var targetCopy = target.slice(start, end)\n\n  for (var i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset  // Coerce to Number.\n  if (numberIsNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [ val ], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  var indexSize = 1\n  var arrLength = arr.length\n  var valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  var i\n  if (dir) {\n    var foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      var found = true\n      for (var j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  var remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  // must be an even number of digits\n  var strLen = string.length\n  if (strLen % 2 !== 0) throw new TypeError('Invalid hex string')\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  for (var i = 0; i < length; ++i) {\n    var parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (numberIsNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction latin1Write (buf, string, offset, length) {\n  return asciiWrite(buf, string, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset >>> 0\n    if (isFinite(length)) {\n      length = length >>> 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  var remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n        return asciiWrite(this, string, offset, length)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Write(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  var res = []\n\n  var i = start\n  while (i < end) {\n    var firstByte = buf[i]\n    var codePoint = null\n    var bytesPerSequence = (firstByte > 0xEF) ? 4\n      : (firstByte > 0xDF) ? 3\n      : (firstByte > 0xBF) ? 2\n      : 1\n\n    if (i + bytesPerSequence <= end) {\n      var secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nvar MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  var len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  var res = ''\n  var i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  var len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  var out = ''\n  for (var i = start; i < end; ++i) {\n    out += toHex(buf[i])\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  var bytes = buf.slice(start, end)\n  var res = ''\n  for (var i = 0; i < bytes.length; i += 2) {\n    res += String.fromCharCode(bytes[i] + (bytes[i + 1] * 256))\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  var len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  var newBuf = this.subarray(start, end)\n  // Return an augmented `Uint8Array` instance\n  newBuf.__proto__ = Buffer.prototype\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  var val = this[offset + --byteLength]\n  var mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var i = byteLength\n  var mul = 1\n  var val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var mul = 1\n  var i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset + 3] = (value >>> 24)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 1] = (value >>> 8)\n  this[offset] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    var limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = 0\n  var mul = 1\n  var sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    var limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  var sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 3] = (value >>> 24)\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  var len = end - start\n  var i\n\n  if (this === target && start < targetStart && targetStart < end) {\n    // descending copy from end\n    for (i = len - 1; i >= 0; --i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else if (len < 1000) {\n    // ascending copy from start\n    for (i = 0; i < len; ++i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, start + len),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (val.length === 1) {\n      var code = val.charCodeAt(0)\n      if (code < 256) {\n        val = code\n      }\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  var i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    var bytes = Buffer.isBuffer(val)\n      ? val\n      : new Buffer(val, encoding)\n    var len = bytes.length\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// HELPER FUNCTIONS\n// ================\n\nvar INVALID_BASE64_RE = /[^+/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = str.trim().replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction toHex (n) {\n  if (n < 16) return '0' + n.toString(16)\n  return n.toString(16)\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  var codePoint\n  var length = string.length\n  var leadSurrogate = null\n  var bytes = []\n\n  for (var i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  var c, hi, lo\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  for (var i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\n// ArrayBuffers from another context (i.e. an iframe) do not pass the `instanceof` check\n// but they should be treated as valid. See: https://github.com/feross/buffer/issues/166\nfunction isArrayBuffer (obj) {\n  return obj instanceof ArrayBuffer ||\n    (obj != null && obj.constructor != null && obj.constructor.name === 'ArrayBuffer' &&\n      typeof obj.byteLength === 'number')\n}\n\n// Node 0.10 supports `ArrayBuffer` but lacks `ArrayBuffer.isView`\nfunction isArrayBufferView (obj) {\n  return (typeof ArrayBuffer.isView === 'function') && ArrayBuffer.isView(obj)\n}\n\nfunction numberIsNaN (obj) {\n  return obj !== obj // eslint-disable-line no-self-compare\n}\n","exports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = nBytes * 8 - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = e * 256 + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = m * 256 + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = nBytes * 8 - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = (value * c - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n","/*\n * $Id: base64.js,v 2.15 2014/04/05 12:58:57 dankogai Exp dankogai $\n *\n *  Licensed under the BSD 3-Clause License.\n *    http://opensource.org/licenses/BSD-3-Clause\n *\n *  References:\n *    http://en.wikipedia.org/wiki/Base64\n */\n;(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory(global) :\n    typeof define === 'function' && define.amd ? define(factory) :\n    global.moment = factory(global)\n}((   typeof self   !== 'undefined' ? self\n: typeof window !== 'undefined' ? window\n: typeof global !== 'undefined' ? global\n: this\n), function(global) {\n    'use strict';\n    // existing version for noConflict()\n    var _Base64 = global.Base64;\n    var version = \"2.4.0\";\n    // if node.js, we use Buffer\n    var buffer;\n    if (typeof module !== 'undefined' && module.exports) {\n        try {\n            buffer = require('buffer').Buffer;\n        } catch (err) {}\n    }\n    // constants\n    var b64chars\n        = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n    var b64tab = function(bin) {\n        var t = {};\n        for (var i = 0, l = bin.length; i < l; i++) t[bin.charAt(i)] = i;\n        return t;\n    }(b64chars);\n    var fromCharCode = String.fromCharCode;\n    // encoder stuff\n    var cb_utob = function(c) {\n        if (c.length < 2) {\n            var cc = c.charCodeAt(0);\n            return cc < 0x80 ? c\n                : cc < 0x800 ? (fromCharCode(0xc0 | (cc >>> 6))\n                                + fromCharCode(0x80 | (cc & 0x3f)))\n                : (fromCharCode(0xe0 | ((cc >>> 12) & 0x0f))\n                   + fromCharCode(0x80 | ((cc >>>  6) & 0x3f))\n                   + fromCharCode(0x80 | ( cc         & 0x3f)));\n        } else {\n            var cc = 0x10000\n                + (c.charCodeAt(0) - 0xD800) * 0x400\n                + (c.charCodeAt(1) - 0xDC00);\n            return (fromCharCode(0xf0 | ((cc >>> 18) & 0x07))\n                    + fromCharCode(0x80 | ((cc >>> 12) & 0x3f))\n                    + fromCharCode(0x80 | ((cc >>>  6) & 0x3f))\n                    + fromCharCode(0x80 | ( cc         & 0x3f)));\n        }\n    };\n    var re_utob = /[\\uD800-\\uDBFF][\\uDC00-\\uDFFFF]|[^\\x00-\\x7F]/g;\n    var utob = function(u) {\n        return u.replace(re_utob, cb_utob);\n    };\n    var cb_encode = function(ccc) {\n        var padlen = [0, 2, 1][ccc.length % 3],\n        ord = ccc.charCodeAt(0) << 16\n            | ((ccc.length > 1 ? ccc.charCodeAt(1) : 0) << 8)\n            | ((ccc.length > 2 ? ccc.charCodeAt(2) : 0)),\n        chars = [\n            b64chars.charAt( ord >>> 18),\n            b64chars.charAt((ord >>> 12) & 63),\n            padlen >= 2 ? '=' : b64chars.charAt((ord >>> 6) & 63),\n            padlen >= 1 ? '=' : b64chars.charAt(ord & 63)\n        ];\n        return chars.join('');\n    };\n    var btoa = global.btoa ? function(b) {\n        return global.btoa(b);\n    } : function(b) {\n        return b.replace(/[\\s\\S]{1,3}/g, cb_encode);\n    };\n    var _encode = buffer ?\n        buffer.from && buffer.from !== Uint8Array.from ? function (u) {\n            return (u.constructor === buffer.constructor ? u : buffer.from(u))\n                .toString('base64')\n        }\n        :  function (u) {\n            return (u.constructor === buffer.constructor ? u : new  buffer(u))\n                .toString('base64')\n        }\n        : function (u) { return btoa(utob(u)) }\n    ;\n    var encode = function(u, urisafe) {\n        return !urisafe\n            ? _encode(String(u))\n            : _encode(String(u)).replace(/[+\\/]/g, function(m0) {\n                return m0 == '+' ? '-' : '_';\n            }).replace(/=/g, '');\n    };\n    var encodeURI = function(u) { return encode(u, true) };\n    // decoder stuff\n    var re_btou = new RegExp([\n        '[\\xC0-\\xDF][\\x80-\\xBF]',\n        '[\\xE0-\\xEF][\\x80-\\xBF]{2}',\n        '[\\xF0-\\xF7][\\x80-\\xBF]{3}'\n    ].join('|'), 'g');\n    var cb_btou = function(cccc) {\n        switch(cccc.length) {\n        case 4:\n            var cp = ((0x07 & cccc.charCodeAt(0)) << 18)\n                |    ((0x3f & cccc.charCodeAt(1)) << 12)\n                |    ((0x3f & cccc.charCodeAt(2)) <<  6)\n                |     (0x3f & cccc.charCodeAt(3)),\n            offset = cp - 0x10000;\n            return (fromCharCode((offset  >>> 10) + 0xD800)\n                    + fromCharCode((offset & 0x3FF) + 0xDC00));\n        case 3:\n            return fromCharCode(\n                ((0x0f & cccc.charCodeAt(0)) << 12)\n                    | ((0x3f & cccc.charCodeAt(1)) << 6)\n                    |  (0x3f & cccc.charCodeAt(2))\n            );\n        default:\n            return  fromCharCode(\n                ((0x1f & cccc.charCodeAt(0)) << 6)\n                    |  (0x3f & cccc.charCodeAt(1))\n            );\n        }\n    };\n    var btou = function(b) {\n        return b.replace(re_btou, cb_btou);\n    };\n    var cb_decode = function(cccc) {\n        var len = cccc.length,\n        padlen = len % 4,\n        n = (len > 0 ? b64tab[cccc.charAt(0)] << 18 : 0)\n            | (len > 1 ? b64tab[cccc.charAt(1)] << 12 : 0)\n            | (len > 2 ? b64tab[cccc.charAt(2)] <<  6 : 0)\n            | (len > 3 ? b64tab[cccc.charAt(3)]       : 0),\n        chars = [\n            fromCharCode( n >>> 16),\n            fromCharCode((n >>>  8) & 0xff),\n            fromCharCode( n         & 0xff)\n        ];\n        chars.length -= [0, 0, 2, 1][padlen];\n        return chars.join('');\n    };\n    var atob = global.atob ? function(a) {\n        return global.atob(a);\n    } : function(a){\n        return a.replace(/[\\s\\S]{1,4}/g, cb_decode);\n    };\n    var _decode = buffer ?\n        buffer.from && buffer.from !== Uint8Array.from ? function(a) {\n            return (a.constructor === buffer.constructor\n                    ? a : buffer.from(a, 'base64')).toString();\n        }\n        : function(a) {\n            return (a.constructor === buffer.constructor\n                    ? a : new buffer(a, 'base64')).toString();\n        }\n        : function(a) { return btou(atob(a)) };\n    var decode = function(a){\n        return _decode(\n            String(a).replace(/[-_]/g, function(m0) { return m0 == '-' ? '+' : '/' })\n                .replace(/[^A-Za-z0-9\\+\\/]/g, '')\n        );\n    };\n    var noConflict = function() {\n        var Base64 = global.Base64;\n        global.Base64 = _Base64;\n        return Base64;\n    };\n    // export Base64\n    global.Base64 = {\n        VERSION: version,\n        atob: atob,\n        btoa: btoa,\n        fromBase64: decode,\n        toBase64: encode,\n        utob: utob,\n        encode: encode,\n        encodeURI: encodeURI,\n        btou: btou,\n        decode: decode,\n        noConflict: noConflict\n    };\n    // if ES5 is available, make Base64.extendString() available\n    if (typeof Object.defineProperty === 'function') {\n        var noEnum = function(v){\n            return {value:v,enumerable:false,writable:true,configurable:true};\n        };\n        global.Base64.extendString = function () {\n            Object.defineProperty(\n                String.prototype, 'fromBase64', noEnum(function () {\n                    return decode(this)\n                }));\n            Object.defineProperty(\n                String.prototype, 'toBase64', noEnum(function (urisafe) {\n                    return encode(this, urisafe)\n                }));\n            Object.defineProperty(\n                String.prototype, 'toBase64URI', noEnum(function () {\n                    return encode(this, true)\n                }));\n        };\n    }\n    //\n    // export Base64 to the namespace\n    //\n    if (global['Meteor']) { // Meteor.js\n        Base64 = global.Base64;\n    }\n    // module.exports and AMD are mutually exclusive.\n    // module.exports has precedence.\n    if (typeof module !== 'undefined' && module.exports) {\n        module.exports.Base64 = global.Base64;\n    }\n    else if (typeof define === 'function' && define.amd) {\n        // AMD. Register as an anonymous module.\n        define([], function(){ return global.Base64 });\n    }\n    // that's it!\n    return {Base64: global.Base64}\n}));\n","/** @license\r\n *\r\n * SoundManager 2: JavaScript Sound for the Web\r\n * ----------------------------------------------\r\n * http://schillmania.com/projects/soundmanager2/\r\n *\r\n * Copyright (c) 2007, Scott Schiller. All rights reserved.\r\n * Code provided under the BSD License:\r\n * http://schillmania.com/projects/soundmanager2/license.txt\r\n *\r\n * V2.97a.20170601\r\n */\r\n\r\n/**\r\n * About this file\r\n * -------------------------------------------------------------------------------------\r\n * This is the fully-commented source version of the SoundManager 2 API,\r\n * recommended for use during development and testing.\r\n *\r\n * See soundmanager2-nodebug-jsmin.js for an optimized build (~11KB with gzip.)\r\n * http://schillmania.com/projects/soundmanager2/doc/getstarted/#basic-inclusion\r\n * Alternately, serve this file with gzip for 75% compression savings (~30KB over HTTP.)\r\n *\r\n * You may notice <d> and </d> comments in this source; these are delimiters for\r\n * debug blocks which are removed in the -nodebug builds, further optimizing code size.\r\n *\r\n * Also, as you may note: Whoa, reliable cross-platform/device audio support is hard! ;)\r\n */\r\n\r\n(function SM2(window, _undefined) {\r\n\r\n/* global Audio, document, window, navigator, define, module, SM2_DEFER, opera, setTimeout, setInterval, clearTimeout, sm2Debugger */\r\n\r\n'use strict';\r\n\r\nif (!window || !window.document) {\r\n\r\n  // Don't cross the [environment] streams. SM2 expects to be running in a browser, not under node.js etc.\r\n  // Additionally, if a browser somehow manages to fail this test, as Egon said: \"It would be bad.\"\r\n\r\n  throw new Error('SoundManager requires a browser with window and document objects.');\r\n\r\n}\r\n\r\nvar soundManager = null;\r\n\r\n/**\r\n * The SoundManager constructor.\r\n *\r\n * @constructor\r\n * @param {string} smURL Optional: Path to SWF files\r\n * @param {string} smID Optional: The ID to use for the SWF container element\r\n * @this {SoundManager}\r\n * @return {SoundManager} The new SoundManager instance\r\n */\r\n\r\nfunction SoundManager(smURL, smID) {\r\n\r\n  /**\r\n   * soundManager configuration options list\r\n   * defines top-level configuration properties to be applied to the soundManager instance (eg. soundManager.flashVersion)\r\n   * to set these properties, use the setup() method - eg., soundManager.setup({url: '/swf/', flashVersion: 9})\r\n   */\r\n\r\n  this.setupOptions = {\r\n\r\n    url: (smURL || null),             // path (directory) where SoundManager 2 SWFs exist, eg., /path/to/swfs/\r\n    flashVersion: 8,                  // flash build to use (8 or 9.) Some API features require 9.\r\n    debugMode: true,                  // enable debugging output (console.log() with HTML fallback)\r\n    debugFlash: false,                // enable debugging output inside SWF, troubleshoot Flash/browser issues\r\n    useConsole: true,                 // use console.log() if available (otherwise, writes to #soundmanager-debug element)\r\n    consoleOnly: true,                // if console is being used, do not create/write to #soundmanager-debug\r\n    waitForWindowLoad: false,         // force SM2 to wait for window.onload() before trying to call soundManager.onload()\r\n    bgColor: '#ffffff',               // SWF background color. N/A when wmode = 'transparent'\r\n    useHighPerformance: false,        // position:fixed flash movie can help increase js/flash speed, minimize lag\r\n    flashPollingInterval: null,       // msec affecting whileplaying/loading callback frequency. If null, default of 50 msec is used.\r\n    html5PollingInterval: null,       // msec affecting whileplaying() for HTML5 audio, excluding mobile devices. If null, native HTML5 update events are used.\r\n    flashLoadTimeout: 1000,           // msec to wait for flash movie to load before failing (0 = infinity)\r\n    wmode: null,                      // flash rendering mode - null, 'transparent', or 'opaque' (last two allow z-index to work)\r\n    allowScriptAccess: 'always',      // for scripting the SWF (object/embed property), 'always' or 'sameDomain'\r\n    useFlashBlock: false,             // *requires flashblock.css, see demos* - allow recovery from flash blockers. Wait indefinitely and apply timeout CSS to SWF, if applicable.\r\n    useHTML5Audio: true,              // use HTML5 Audio() where API is supported (most Safari, Chrome versions), Firefox (MP3/MP4 support varies.) Ideally, transparent vs. Flash API where possible.\r\n    forceUseGlobalHTML5Audio: false,  // if true, a single Audio() object is used for all sounds - and only one can play at a time.\r\n    ignoreMobileRestrictions: false,  // if true, SM2 will not apply global HTML5 audio rules to mobile UAs. iOS > 7 and WebViews may allow multiple Audio() instances.\r\n    html5Test: /^(probably|maybe)$/i, // HTML5 Audio() format support test. Use /^probably$/i; if you want to be more conservative.\r\n    preferFlash: false,               // overrides useHTML5audio, will use Flash for MP3/MP4/AAC if present. Potential option if HTML5 playback with these formats is quirky.\r\n    noSWFCache: false,                // if true, appends ?ts={date} to break aggressive SWF caching.\r\n    idPrefix: 'sound'                 // if an id is not provided to createSound(), this prefix is used for generated IDs - 'sound0', 'sound1' etc.\r\n\r\n  };\r\n\r\n  this.defaultOptions = {\r\n\r\n    /**\r\n     * the default configuration for sound objects made with createSound() and related methods\r\n     * eg., volume, auto-load behaviour and so forth\r\n     */\r\n\r\n    autoLoad: false,        // enable automatic loading (otherwise .load() will be called on demand with .play(), the latter being nicer on bandwidth - if you want to .load yourself, you also can)\r\n    autoPlay: false,        // enable playing of file as soon as possible (much faster if \"stream\" is true)\r\n    from: null,             // position to start playback within a sound (msec), default = beginning\r\n    loops: 1,               // how many times to repeat the sound (position will wrap around to 0, setPosition() will break out of loop when >0)\r\n    onid3: null,            // callback function for \"ID3 data is added/available\"\r\n    onerror: null,          // callback function for \"load failed\" (or, playback/network/decode error under HTML5.)\r\n    onload: null,           // callback function for \"load finished\"\r\n    whileloading: null,     // callback function for \"download progress update\" (X of Y bytes received)\r\n    onplay: null,           // callback for \"play\" start\r\n    onpause: null,          // callback for \"pause\"\r\n    onresume: null,         // callback for \"resume\" (pause toggle)\r\n    whileplaying: null,     // callback during play (position update)\r\n    onposition: null,       // object containing times and function callbacks for positions of interest\r\n    onstop: null,           // callback for \"user stop\"\r\n    onfinish: null,         // callback function for \"sound finished playing\"\r\n    multiShot: true,        // let sounds \"restart\" or layer on top of each other when played multiple times, rather than one-shot/one at a time\r\n    multiShotEvents: false, // fire multiple sound events (currently onfinish() only) when multiShot is enabled\r\n    position: null,         // offset (milliseconds) to seek to within loaded sound data.\r\n    pan: 0,                 // \"pan\" settings, left-to-right, -100 to 100\r\n    playbackRate: 1,        // rate at which to play the sound (HTML5-only)\r\n    stream: true,           // allows playing before entire file has loaded (recommended)\r\n    to: null,               // position to end playback within a sound (msec), default = end\r\n    type: null,             // MIME-like hint for file pattern / canPlay() tests, eg. audio/mp3\r\n    usePolicyFile: false,   // enable crossdomain.xml request for audio on remote domains (for ID3/waveform access)\r\n    volume: 100             // self-explanatory. 0-100, the latter being the max.\r\n\r\n  };\r\n\r\n  this.flash9Options = {\r\n\r\n    /**\r\n     * flash 9-only options,\r\n     * merged into defaultOptions if flash 9 is being used\r\n     */\r\n\r\n    onfailure: null,        // callback function for when playing fails (Flash 9, MovieStar + RTMP-only)\r\n    isMovieStar: null,      // \"MovieStar\" MPEG4 audio mode. Null (default) = auto detect MP4, AAC etc. based on URL. true = force on, ignore URL\r\n    usePeakData: false,     // enable left/right channel peak (level) data\r\n    useWaveformData: false, // enable sound spectrum (raw waveform data) - NOTE: May increase CPU load.\r\n    useEQData: false,       // enable sound EQ (frequency spectrum data) - NOTE: May increase CPU load.\r\n    onbufferchange: null,   // callback for \"isBuffering\" property change\r\n    ondataerror: null       // callback for waveform/eq data access error (flash playing audio in other tabs/domains)\r\n\r\n  };\r\n\r\n  this.movieStarOptions = {\r\n\r\n    /**\r\n     * flash 9.0r115+ MPEG4 audio options,\r\n     * merged into defaultOptions if flash 9+movieStar mode is enabled\r\n     */\r\n\r\n    bufferTime: 3,          // seconds of data to buffer before playback begins (null = flash default of 0.1 seconds - if AAC playback is gappy, try increasing.)\r\n    serverURL: null,        // rtmp: FMS or FMIS server to connect to, required when requesting media via RTMP or one of its variants\r\n    onconnect: null,        // rtmp: callback for connection to flash media server\r\n    duration: null          // rtmp: song duration (msec)\r\n\r\n  };\r\n\r\n  this.audioFormats = {\r\n\r\n    /**\r\n     * determines HTML5 support + flash requirements.\r\n     * if no support (via flash and/or HTML5) for a \"required\" format, SM2 will fail to start.\r\n     * flash fallback is used for MP3 or MP4 if HTML5 can't play it (or if preferFlash = true)\r\n     */\r\n\r\n    mp3: {\r\n      type: ['audio/mpeg; codecs=\"mp3\"', 'audio/mpeg', 'audio/mp3', 'audio/MPA', 'audio/mpa-robust'],\r\n      required: true\r\n    },\r\n\r\n    mp4: {\r\n      related: ['aac', 'm4a', 'm4b'], // additional formats under the MP4 container\r\n      type: ['audio/mp4; codecs=\"mp4a.40.2\"', 'audio/aac', 'audio/x-m4a', 'audio/MP4A-LATM', 'audio/mpeg4-generic'],\r\n      required: false\r\n    },\r\n\r\n    ogg: {\r\n      type: ['audio/ogg; codecs=vorbis'],\r\n      required: false\r\n    },\r\n\r\n    opus: {\r\n      type: ['audio/ogg; codecs=opus', 'audio/opus'],\r\n      required: false\r\n    },\r\n\r\n    wav: {\r\n      type: ['audio/wav; codecs=\"1\"', 'audio/wav', 'audio/wave', 'audio/x-wav'],\r\n      required: false\r\n    },\r\n\r\n    flac: {\r\n      type: ['audio/flac'],\r\n      required: false\r\n    }\r\n\r\n  };\r\n\r\n  // HTML attributes (id + class names) for the SWF container\r\n\r\n  this.movieID = 'sm2-container';\r\n  this.id = (smID || 'sm2movie');\r\n\r\n  this.debugID = 'soundmanager-debug';\r\n  this.debugURLParam = /([#?&])debug=1/i;\r\n\r\n  // dynamic attributes\r\n\r\n  this.versionNumber = 'V2.97a.20170601';\r\n  this.version = null;\r\n  this.movieURL = null;\r\n  this.altURL = null;\r\n  this.swfLoaded = false;\r\n  this.enabled = false;\r\n  this.oMC = null;\r\n  this.sounds = {};\r\n  this.soundIDs = [];\r\n  this.muted = false;\r\n  this.didFlashBlock = false;\r\n  this.filePattern = null;\r\n\r\n  this.filePatterns = {\r\n    flash8: /\\.mp3(\\?.*)?$/i,\r\n    flash9: /\\.mp3(\\?.*)?$/i\r\n  };\r\n\r\n  // support indicators, set at init\r\n\r\n  this.features = {\r\n    buffering: false,\r\n    peakData: false,\r\n    waveformData: false,\r\n    eqData: false,\r\n    movieStar: false\r\n  };\r\n\r\n  // flash sandbox info, used primarily in troubleshooting\r\n\r\n  this.sandbox = {\r\n    // <d>\r\n    type: null,\r\n    types: {\r\n      remote: 'remote (domain-based) rules',\r\n      localWithFile: 'local with file access (no internet access)',\r\n      localWithNetwork: 'local with network (internet access only, no local access)',\r\n      localTrusted: 'local, trusted (local+internet access)'\r\n    },\r\n    description: null,\r\n    noRemote: null,\r\n    noLocal: null\r\n    // </d>\r\n  };\r\n\r\n  /**\r\n   * format support (html5/flash)\r\n   * stores canPlayType() results based on audioFormats.\r\n   * eg. { mp3: boolean, mp4: boolean }\r\n   * treat as read-only.\r\n   */\r\n\r\n  this.html5 = {\r\n    usingFlash: null // set if/when flash fallback is needed\r\n  };\r\n\r\n  // file type support hash\r\n  this.flash = {};\r\n\r\n  // determined at init time\r\n  this.html5Only = false;\r\n\r\n  // used for special cases (eg. iPad/iPhone/palm OS?)\r\n  this.ignoreFlash = false;\r\n\r\n  /**\r\n   * a few private internals (OK, a lot. :D)\r\n   */\r\n\r\n  var SMSound,\r\n  sm2 = this, globalHTML5Audio = null, flash = null, sm = 'soundManager', smc = sm + ': ', h5 = 'HTML5::', id, ua = navigator.userAgent, wl = window.location.href.toString(), doc = document, doNothing, setProperties, init, fV, on_queue = [], debugOpen = true, debugTS, didAppend = false, appendSuccess = false, didInit = false, disabled = false, windowLoaded = false, _wDS, wdCount = 0, initComplete, mixin, assign, extraOptions, addOnEvent, processOnEvents, initUserOnload, delayWaitForEI, waitForEI, rebootIntoHTML5, setVersionInfo, handleFocus, strings, initMovie, domContentLoaded, winOnLoad, didDCLoaded, getDocument, createMovie, catchError, setPolling, initDebug, debugLevels = ['log', 'info', 'warn', 'error'], defaultFlashVersion = 8, disableObject, failSafely, normalizeMovieURL, oRemoved = null, oRemovedHTML = null, str, flashBlockHandler, getSWFCSS, swfCSS, toggleDebug, loopFix, policyFix, complain, idCheck, waitingForEI = false, initPending = false, startTimer, stopTimer, timerExecute, h5TimerCount = 0, h5IntervalTimer = null, parseURL, messages = [],\r\n  canIgnoreFlash, needsFlash = null, featureCheck, html5OK, html5CanPlay, html5ErrorCodes, html5Ext, html5Unload, domContentLoadedIE, testHTML5, event, slice = Array.prototype.slice, useGlobalHTML5Audio = false, lastGlobalHTML5URL, hasFlash, detectFlash, badSafariFix, html5_events, showSupport, flushMessages, wrapCallback, idCounter = 0, didSetup, msecScale = 1000,\r\n  is_iDevice = ua.match(/(ipad|iphone|ipod)/i), isAndroid = ua.match(/android/i), isIE = ua.match(/msie|trident/i),\r\n  isWebkit = ua.match(/webkit/i),\r\n  isSafari = (ua.match(/safari/i) && !ua.match(/chrome/i)),\r\n  isOpera = (ua.match(/opera/i)),\r\n  mobileHTML5 = (ua.match(/(mobile|pre\\/|xoom)/i) || is_iDevice || isAndroid),\r\n  isBadSafari = (!wl.match(/usehtml5audio/i) && !wl.match(/sm2-ignorebadua/i) && isSafari && !ua.match(/silk/i) && ua.match(/OS\\sX\\s10_6_([3-7])/i)), // Safari 4 and 5 (excluding Kindle Fire, \"Silk\") occasionally fail to load/play HTML5 audio on Snow Leopard 10.6.3 through 10.6.7 due to bug(s) in QuickTime X and/or other underlying frameworks. :/ Confirmed bug. https://bugs.webkit.org/show_bug.cgi?id=32159\r\n  hasConsole = (window.console !== _undefined && console.log !== _undefined),\r\n  isFocused = (doc.hasFocus !== _undefined ? doc.hasFocus() : null),\r\n  tryInitOnFocus = (isSafari && (doc.hasFocus === _undefined || !doc.hasFocus())),\r\n  okToDisable = !tryInitOnFocus,\r\n  flashMIME = /(mp3|mp4|mpa|m4a|m4b)/i,\r\n  emptyURL = 'about:blank', // safe URL to unload, or load nothing from (flash 8 + most HTML5 UAs)\r\n  emptyWAV = 'data:audio/wave;base64,/UklGRiYAAABXQVZFZm10IBAAAAABAAEARKwAAIhYAQACABAAZGF0YQIAAAD//w==', // tiny WAV for HTML5 unloading\r\n  overHTTP = (doc.location ? doc.location.protocol.match(/http/i) : null),\r\n  http = (!overHTTP ? '//' : ''),\r\n  // mp3, mp4, aac etc.\r\n  netStreamMimeTypes = /^\\s*audio\\/(?:x-)?(?:mpeg4|aac|flv|mov|mp4|m4v|m4a|m4b|mp4v|3gp|3g2)\\s*(?:$|;)/i,\r\n  // Flash v9.0r115+ \"moviestar\" formats\r\n  netStreamTypes = ['mpeg4', 'aac', 'flv', 'mov', 'mp4', 'm4v', 'f4v', 'm4a', 'm4b', 'mp4v', '3gp', '3g2'],\r\n  netStreamPattern = new RegExp('\\\\.(' + netStreamTypes.join('|') + ')(\\\\?.*)?$', 'i');\r\n\r\n  this.mimePattern = /^\\s*audio\\/(?:x-)?(?:mp(?:eg|3))\\s*(?:$|;)/i; // default mp3 set\r\n\r\n  // use altURL if not \"online\"\r\n  this.useAltURL = !overHTTP;\r\n\r\n  swfCSS = {\r\n    swfBox: 'sm2-object-box',\r\n    swfDefault: 'movieContainer',\r\n    swfError: 'swf_error', // SWF loaded, but SM2 couldn't start (other error)\r\n    swfTimedout: 'swf_timedout',\r\n    swfLoaded: 'swf_loaded',\r\n    swfUnblocked: 'swf_unblocked', // or loaded OK\r\n    sm2Debug: 'sm2_debug',\r\n    highPerf: 'high_performance',\r\n    flashDebug: 'flash_debug'\r\n  };\r\n\r\n  /**\r\n   * HTML5 error codes, per W3C\r\n   * Error code 1, MEDIA_ERR_ABORTED: Client aborted download at user's request.\r\n   * Error code 2, MEDIA_ERR_NETWORK: A network error of some description caused the user agent to stop fetching the media resource, after the resource was established to be usable.\r\n   * Error code 3, MEDIA_ERR_DECODE: An error of some description occurred while decoding the media resource, after the resource was established to be usable.\r\n   * Error code 4, MEDIA_ERR_SRC_NOT_SUPPORTED: Media (audio file) not supported (\"not usable.\")\r\n   * Reference: https://html.spec.whatwg.org/multipage/embedded-content.html#error-codes\r\n   */\r\n  html5ErrorCodes = [\r\n    null,\r\n    'MEDIA_ERR_ABORTED',\r\n    'MEDIA_ERR_NETWORK',\r\n    'MEDIA_ERR_DECODE',\r\n    'MEDIA_ERR_SRC_NOT_SUPPORTED'\r\n  ];\r\n\r\n  /**\r\n   * basic HTML5 Audio() support test\r\n   * try...catch because of IE 9 \"not implemented\" nonsense\r\n   * https://github.com/Modernizr/Modernizr/issues/224\r\n   */\r\n\r\n  this.hasHTML5 = (function() {\r\n    try {\r\n      // new Audio(null) for stupid Opera 9.64 case, which throws not_enough_arguments exception otherwise.\r\n      return (Audio !== _undefined && (isOpera && opera !== _undefined && opera.version() < 10 ? new Audio(null) : new Audio()).canPlayType !== _undefined);\r\n    } catch(e) {\r\n      return false;\r\n    }\r\n  }());\r\n\r\n  /**\r\n   * Public SoundManager API\r\n   * -----------------------\r\n   */\r\n\r\n  /**\r\n   * Configures top-level soundManager properties.\r\n   *\r\n   * @param {object} options Option parameters, eg. { flashVersion: 9, url: '/path/to/swfs/' }\r\n   * onready and ontimeout are also accepted parameters. call soundManager.setup() to see the full list.\r\n   */\r\n\r\n  this.setup = function(options) {\r\n\r\n    var noURL = (!sm2.url);\r\n\r\n    // warn if flash options have already been applied\r\n\r\n    if (options !== _undefined && didInit && needsFlash && sm2.ok() && (options.flashVersion !== _undefined || options.url !== _undefined || options.html5Test !== _undefined)) {\r\n      complain(str('setupLate'));\r\n    }\r\n\r\n    // TODO: defer: true?\r\n\r\n    assign(options);\r\n\r\n    if (!useGlobalHTML5Audio) {\r\n\r\n      if (mobileHTML5) {\r\n\r\n        // force the singleton HTML5 pattern on mobile, by default.\r\n        if (!sm2.setupOptions.ignoreMobileRestrictions || sm2.setupOptions.forceUseGlobalHTML5Audio) {\r\n          messages.push(strings.globalHTML5);\r\n          useGlobalHTML5Audio = true;\r\n        }\r\n\r\n      } else if (sm2.setupOptions.forceUseGlobalHTML5Audio) {\r\n\r\n        // only apply singleton HTML5 on desktop if forced.\r\n        messages.push(strings.globalHTML5);\r\n        useGlobalHTML5Audio = true;\r\n\r\n      }\r\n\r\n    }\r\n\r\n    if (!didSetup && mobileHTML5) {\r\n\r\n      if (sm2.setupOptions.ignoreMobileRestrictions) {\r\n\r\n        messages.push(strings.ignoreMobile);\r\n\r\n      } else {\r\n\r\n        // prefer HTML5 for mobile + tablet-like devices, probably more reliable vs. flash at this point.\r\n\r\n        // <d>\r\n        if (!sm2.setupOptions.useHTML5Audio || sm2.setupOptions.preferFlash) {\r\n          // notify that defaults are being changed.\r\n          sm2._wD(strings.mobileUA);\r\n        }\r\n        // </d>\r\n\r\n        sm2.setupOptions.useHTML5Audio = true;\r\n        sm2.setupOptions.preferFlash = false;\r\n\r\n        if (is_iDevice) {\r\n\r\n          // no flash here.\r\n          sm2.ignoreFlash = true;\r\n\r\n        } else if ((isAndroid && !ua.match(/android\\s2\\.3/i)) || !isAndroid) {\r\n\r\n          /**\r\n           * Android devices tend to work better with a single audio instance, specifically for chained playback of sounds in sequence.\r\n           * Common use case: exiting sound onfinish() -> createSound() -> play()\r\n           * Presuming similar restrictions for other mobile, non-Android, non-iOS devices.\r\n           */\r\n\r\n          // <d>\r\n          sm2._wD(strings.globalHTML5);\r\n          // </d>\r\n\r\n          useGlobalHTML5Audio = true;\r\n\r\n        }\r\n\r\n      }\r\n\r\n    }\r\n\r\n    // special case 1: \"Late setup\". SM2 loaded normally, but user didn't assign flash URL eg., setup({url:...}) before SM2 init. Treat as delayed init.\r\n\r\n    if (options) {\r\n\r\n      if (noURL && didDCLoaded && options.url !== _undefined) {\r\n        sm2.beginDelayedInit();\r\n      }\r\n\r\n      // special case 2: If lazy-loading SM2 (DOMContentLoaded has already happened) and user calls setup() with url: parameter, try to init ASAP.\r\n\r\n      if (!didDCLoaded && options.url !== _undefined && doc.readyState === 'complete') {\r\n        setTimeout(domContentLoaded, 1);\r\n      }\r\n\r\n    }\r\n\r\n    didSetup = true;\r\n\r\n    return sm2;\r\n\r\n  };\r\n\r\n  this.ok = function() {\r\n\r\n    return (needsFlash ? (didInit && !disabled) : (sm2.useHTML5Audio && sm2.hasHTML5));\r\n\r\n  };\r\n\r\n  this.supported = this.ok; // legacy\r\n\r\n  this.getMovie = function(movie_id) {\r\n\r\n    // safety net: some old browsers differ on SWF references, possibly related to ExternalInterface / flash version\r\n    return id(movie_id) || doc[movie_id] || window[movie_id];\r\n\r\n  };\r\n\r\n  /**\r\n   * Creates a SMSound sound object instance. Can also be overloaded, e.g., createSound('mySound', '/some.mp3');\r\n   *\r\n   * @param {object} oOptions Sound options (at minimum, url parameter is required.)\r\n   * @return {object} SMSound The new SMSound object.\r\n   */\r\n\r\n  this.createSound = function(oOptions, _url) {\r\n\r\n    var cs, cs_string, options, oSound = null;\r\n\r\n    // <d>\r\n    cs = sm + '.createSound(): ';\r\n    cs_string = cs + str(!didInit ? 'notReady' : 'notOK');\r\n    // </d>\r\n\r\n    if (!didInit || !sm2.ok()) {\r\n      complain(cs_string);\r\n      return false;\r\n    }\r\n\r\n    if (_url !== _undefined) {\r\n      // function overloading in JS! :) ... assume simple createSound(id, url) use case.\r\n      oOptions = {\r\n        id: oOptions,\r\n        url: _url\r\n      };\r\n    }\r\n\r\n    // inherit from defaultOptions\r\n    options = mixin(oOptions);\r\n\r\n    options.url = parseURL(options.url);\r\n\r\n    // generate an id, if needed.\r\n    if (options.id === _undefined) {\r\n      options.id = sm2.setupOptions.idPrefix + (idCounter++);\r\n    }\r\n\r\n    // <d>\r\n    if (options.id.toString().charAt(0).match(/^[0-9]$/)) {\r\n      sm2._wD(cs + str('badID', options.id), 2);\r\n    }\r\n\r\n    sm2._wD(cs + options.id + (options.url ? ' (' + options.url + ')' : ''), 1);\r\n    // </d>\r\n\r\n    if (idCheck(options.id, true)) {\r\n      sm2._wD(cs + options.id + ' exists', 1);\r\n      return sm2.sounds[options.id];\r\n    }\r\n\r\n    function make() {\r\n\r\n      options = loopFix(options);\r\n      sm2.sounds[options.id] = new SMSound(options);\r\n      sm2.soundIDs.push(options.id);\r\n      return sm2.sounds[options.id];\r\n\r\n    }\r\n\r\n    if (html5OK(options)) {\r\n\r\n      oSound = make();\r\n      // <d>\r\n      if (!sm2.html5Only) {\r\n        sm2._wD(options.id + ': Using HTML5');\r\n      }\r\n      // </d>\r\n      oSound._setup_html5(options);\r\n\r\n    } else {\r\n\r\n      if (sm2.html5Only) {\r\n        sm2._wD(options.id + ': No HTML5 support for this sound, and no Flash. Exiting.');\r\n        return make();\r\n      }\r\n\r\n      // TODO: Move HTML5/flash checks into generic URL parsing/handling function.\r\n\r\n      if (sm2.html5.usingFlash && options.url && options.url.match(/data:/i)) {\r\n        // data: URIs not supported by Flash, either.\r\n        sm2._wD(options.id + ': data: URIs not supported via Flash. Exiting.');\r\n        return make();\r\n      }\r\n\r\n      if (fV > 8) {\r\n        if (options.isMovieStar === null) {\r\n          // attempt to detect MPEG-4 formats\r\n          options.isMovieStar = !!(options.serverURL || (options.type ? options.type.match(netStreamMimeTypes) : false) || (options.url && options.url.match(netStreamPattern)));\r\n        }\r\n        // <d>\r\n        if (options.isMovieStar) {\r\n          sm2._wD(cs + 'using MovieStar handling');\r\n          if (options.loops > 1) {\r\n            _wDS('noNSLoop');\r\n          }\r\n        }\r\n        // </d>\r\n      }\r\n\r\n      options = policyFix(options, cs);\r\n      oSound = make();\r\n\r\n      if (fV === 8) {\r\n        flash._createSound(options.id, options.loops || 1, options.usePolicyFile);\r\n      } else {\r\n        flash._createSound(options.id, options.url, options.usePeakData, options.useWaveformData, options.useEQData, options.isMovieStar, (options.isMovieStar ? options.bufferTime : false), options.loops || 1, options.serverURL, options.duration || null, options.autoPlay, true, options.autoLoad, options.usePolicyFile);\r\n        if (!options.serverURL) {\r\n          // We are connected immediately\r\n          oSound.connected = true;\r\n          if (options.onconnect) {\r\n            options.onconnect.apply(oSound);\r\n          }\r\n        }\r\n      }\r\n\r\n      if (!options.serverURL && (options.autoLoad || options.autoPlay)) {\r\n        // call load for non-rtmp streams\r\n        oSound.load(options);\r\n      }\r\n\r\n    }\r\n\r\n    // rtmp will play in onconnect\r\n    if (!options.serverURL && options.autoPlay) {\r\n      oSound.play();\r\n    }\r\n\r\n    return oSound;\r\n\r\n  };\r\n\r\n  /**\r\n   * Destroys a SMSound sound object instance.\r\n   *\r\n   * @param {string} sID The ID of the sound to destroy\r\n   */\r\n\r\n  this.destroySound = function(sID, _bFromSound) {\r\n\r\n    // explicitly destroy a sound before normal page unload, etc.\r\n\r\n    if (!idCheck(sID)) return false;\r\n\r\n    var oS = sm2.sounds[sID], i;\r\n\r\n    oS.stop();\r\n\r\n    // Disable all callbacks after stop(), when the sound is being destroyed\r\n    oS._iO = {};\r\n\r\n    oS.unload();\r\n\r\n    for (i = 0; i < sm2.soundIDs.length; i++) {\r\n      if (sm2.soundIDs[i] === sID) {\r\n        sm2.soundIDs.splice(i, 1);\r\n        break;\r\n      }\r\n    }\r\n\r\n    if (!_bFromSound) {\r\n      // ignore if being called from SMSound instance\r\n      oS.destruct(true);\r\n    }\r\n\r\n    oS = null;\r\n    delete sm2.sounds[sID];\r\n\r\n    return true;\r\n\r\n  };\r\n\r\n  /**\r\n   * Calls the load() method of a SMSound object by ID.\r\n   *\r\n   * @param {string} sID The ID of the sound\r\n   * @param {object} oOptions Optional: Sound options\r\n   */\r\n\r\n  this.load = function(sID, oOptions) {\r\n\r\n    if (!idCheck(sID)) return false;\r\n\r\n    return sm2.sounds[sID].load(oOptions);\r\n\r\n  };\r\n\r\n  /**\r\n   * Calls the unload() method of a SMSound object by ID.\r\n   *\r\n   * @param {string} sID The ID of the sound\r\n   */\r\n\r\n  this.unload = function(sID) {\r\n\r\n    if (!idCheck(sID)) return false;\r\n\r\n    return sm2.sounds[sID].unload();\r\n\r\n  };\r\n\r\n  /**\r\n   * Calls the onPosition() method of a SMSound object by ID.\r\n   *\r\n   * @param {string} sID The ID of the sound\r\n   * @param {number} nPosition The position to watch for\r\n   * @param {function} oMethod The relevant callback to fire\r\n   * @param {object} oScope Optional: The scope to apply the callback to\r\n   * @return {SMSound} The SMSound object\r\n   */\r\n\r\n  this.onPosition = function(sID, nPosition, oMethod, oScope) {\r\n\r\n    if (!idCheck(sID)) return false;\r\n\r\n    return sm2.sounds[sID].onposition(nPosition, oMethod, oScope);\r\n\r\n  };\r\n\r\n  // legacy/backwards-compability: lower-case method name\r\n  this.onposition = this.onPosition;\r\n\r\n  /**\r\n   * Calls the clearOnPosition() method of a SMSound object by ID.\r\n   *\r\n   * @param {string} sID The ID of the sound\r\n   * @param {number} nPosition The position to watch for\r\n   * @param {function} oMethod Optional: The relevant callback to fire\r\n   * @return {SMSound} The SMSound object\r\n   */\r\n\r\n  this.clearOnPosition = function(sID, nPosition, oMethod) {\r\n\r\n    if (!idCheck(sID)) return false;\r\n\r\n    return sm2.sounds[sID].clearOnPosition(nPosition, oMethod);\r\n\r\n  };\r\n\r\n  /**\r\n   * Calls the play() method of a SMSound object by ID.\r\n   *\r\n   * @param {string} sID The ID of the sound\r\n   * @param {object} oOptions Optional: Sound options\r\n   * @return {SMSound} The SMSound object\r\n   */\r\n\r\n  this.play = function(sID, oOptions) {\r\n\r\n    var result = null,\r\n        // legacy function-overloading use case: play('mySound', '/path/to/some.mp3');\r\n        overloaded = (oOptions && !(oOptions instanceof Object));\r\n\r\n    if (!didInit || !sm2.ok()) {\r\n      complain(sm + '.play(): ' + str(!didInit ? 'notReady' : 'notOK'));\r\n      return false;\r\n    }\r\n\r\n    if (!idCheck(sID, overloaded)) {\r\n\r\n      // no sound found for the given ID. Bail.\r\n      if (!overloaded) return false;\r\n\r\n      if (overloaded) {\r\n        oOptions = {\r\n          url: oOptions\r\n        };\r\n      }\r\n\r\n      if (oOptions && oOptions.url) {\r\n        // overloading use case, create+play: .play('someID', {url:'/path/to.mp3'});\r\n        sm2._wD(sm + '.play(): Attempting to create \"' + sID + '\"', 1);\r\n        oOptions.id = sID;\r\n        result = sm2.createSound(oOptions).play();\r\n      }\r\n\r\n    } else if (overloaded) {\r\n\r\n      // existing sound object case\r\n      oOptions = {\r\n        url: oOptions\r\n      };\r\n\r\n    }\r\n\r\n    if (result === null) {\r\n      // default case\r\n      result = sm2.sounds[sID].play(oOptions);\r\n    }\r\n\r\n    return result;\r\n\r\n  };\r\n\r\n  // just for convenience\r\n  this.start = this.play;\r\n\r\n  /**\r\n   * Calls the setPlaybackRate() method of a SMSound object by ID.\r\n   *\r\n   * @param {string} sID The ID of the sound\r\n   * @return {SMSound} The SMSound object\r\n   */\r\n\r\n  this.setPlaybackRate = function(sID, rate, allowOverride) {\r\n\r\n    if (!idCheck(sID)) return false;\r\n\r\n    return sm2.sounds[sID].setPlaybackRate(rate, allowOverride);\r\n\r\n  };\r\n\r\n  /**\r\n   * Calls the setPosition() method of a SMSound object by ID.\r\n   *\r\n   * @param {string} sID The ID of the sound\r\n   * @param {number} nMsecOffset Position (milliseconds)\r\n   * @return {SMSound} The SMSound object\r\n   */\r\n\r\n  this.setPosition = function(sID, nMsecOffset) {\r\n\r\n    if (!idCheck(sID)) return false;\r\n\r\n    return sm2.sounds[sID].setPosition(nMsecOffset);\r\n\r\n  };\r\n\r\n  /**\r\n   * Calls the stop() method of a SMSound object by ID.\r\n   *\r\n   * @param {string} sID The ID of the sound\r\n   * @return {SMSound} The SMSound object\r\n   */\r\n\r\n  this.stop = function(sID) {\r\n\r\n    if (!idCheck(sID)) return false;\r\n\r\n    sm2._wD(sm + '.stop(' + sID + ')', 1);\r\n\r\n    return sm2.sounds[sID].stop();\r\n\r\n  };\r\n\r\n  /**\r\n   * Stops all currently-playing sounds.\r\n   */\r\n\r\n  this.stopAll = function() {\r\n\r\n    var oSound;\r\n    sm2._wD(sm + '.stopAll()', 1);\r\n\r\n    for (oSound in sm2.sounds) {\r\n      if (sm2.sounds.hasOwnProperty(oSound)) {\r\n        // apply only to sound objects\r\n        sm2.sounds[oSound].stop();\r\n      }\r\n    }\r\n\r\n  };\r\n\r\n  /**\r\n   * Calls the pause() method of a SMSound object by ID.\r\n   *\r\n   * @param {string} sID The ID of the sound\r\n   * @return {SMSound} The SMSound object\r\n   */\r\n\r\n  this.pause = function(sID) {\r\n\r\n    if (!idCheck(sID)) return false;\r\n\r\n    return sm2.sounds[sID].pause();\r\n\r\n  };\r\n\r\n  /**\r\n   * Pauses all currently-playing sounds.\r\n   */\r\n\r\n  this.pauseAll = function() {\r\n\r\n    var i;\r\n    for (i = sm2.soundIDs.length - 1; i >= 0; i--) {\r\n      sm2.sounds[sm2.soundIDs[i]].pause();\r\n    }\r\n\r\n  };\r\n\r\n  /**\r\n   * Calls the resume() method of a SMSound object by ID.\r\n   *\r\n   * @param {string} sID The ID of the sound\r\n   * @return {SMSound} The SMSound object\r\n   */\r\n\r\n  this.resume = function(sID) {\r\n\r\n    if (!idCheck(sID)) return false;\r\n\r\n    return sm2.sounds[sID].resume();\r\n\r\n  };\r\n\r\n  /**\r\n   * Resumes all currently-paused sounds.\r\n   */\r\n\r\n  this.resumeAll = function() {\r\n\r\n    var i;\r\n    for (i = sm2.soundIDs.length - 1; i >= 0; i--) {\r\n      sm2.sounds[sm2.soundIDs[i]].resume();\r\n    }\r\n\r\n  };\r\n\r\n  /**\r\n   * Calls the togglePause() method of a SMSound object by ID.\r\n   *\r\n   * @param {string} sID The ID of the sound\r\n   * @return {SMSound} The SMSound object\r\n   */\r\n\r\n  this.togglePause = function(sID) {\r\n\r\n    if (!idCheck(sID)) return false;\r\n\r\n    return sm2.sounds[sID].togglePause();\r\n\r\n  };\r\n\r\n  /**\r\n   * Calls the setPan() method of a SMSound object by ID.\r\n   *\r\n   * @param {string} sID The ID of the sound\r\n   * @param {number} nPan The pan value (-100 to 100)\r\n   * @return {SMSound} The SMSound object\r\n   */\r\n\r\n  this.setPan = function(sID, nPan) {\r\n\r\n    if (!idCheck(sID)) return false;\r\n\r\n    return sm2.sounds[sID].setPan(nPan);\r\n\r\n  };\r\n\r\n  /**\r\n   * Calls the setVolume() method of a SMSound object by ID\r\n   * Overloaded case: pass only volume argument eg., setVolume(50) to apply to all sounds.\r\n   *\r\n   * @param {string} sID The ID of the sound\r\n   * @param {number} nVol The volume value (0 to 100)\r\n   * @return {SMSound} The SMSound object\r\n   */\r\n\r\n  this.setVolume = function(sID, nVol) {\r\n\r\n    // setVolume(50) function overloading case - apply to all sounds\r\n\r\n    var i, j;\r\n\r\n    if (sID !== _undefined && !isNaN(sID) && nVol === _undefined) {\r\n      for (i = 0, j = sm2.soundIDs.length; i < j; i++) {\r\n        sm2.sounds[sm2.soundIDs[i]].setVolume(sID);\r\n      }\r\n      return false;\r\n    }\r\n\r\n    // setVolume('mySound', 50) case\r\n\r\n    if (!idCheck(sID)) return false;\r\n\r\n    return sm2.sounds[sID].setVolume(nVol);\r\n\r\n  };\r\n\r\n  /**\r\n   * Calls the mute() method of either a single SMSound object by ID, or all sound objects.\r\n   *\r\n   * @param {string} sID Optional: The ID of the sound (if omitted, all sounds will be used.)\r\n   */\r\n\r\n  this.mute = function(sID) {\r\n\r\n    var i = 0;\r\n\r\n    if (sID instanceof String) {\r\n      sID = null;\r\n    }\r\n\r\n    if (!sID) {\r\n\r\n      sm2._wD(sm + '.mute(): Muting all sounds');\r\n      for (i = sm2.soundIDs.length - 1; i >= 0; i--) {\r\n        sm2.sounds[sm2.soundIDs[i]].mute();\r\n      }\r\n      sm2.muted = true;\r\n\r\n    } else {\r\n\r\n      if (!idCheck(sID)) return false;\r\n\r\n      sm2._wD(sm + '.mute(): Muting \"' + sID + '\"');\r\n      return sm2.sounds[sID].mute();\r\n\r\n    }\r\n\r\n    return true;\r\n\r\n  };\r\n\r\n  /**\r\n   * Mutes all sounds.\r\n   */\r\n\r\n  this.muteAll = function() {\r\n\r\n    sm2.mute();\r\n\r\n  };\r\n\r\n  /**\r\n   * Calls the unmute() method of either a single SMSound object by ID, or all sound objects.\r\n   *\r\n   * @param {string} sID Optional: The ID of the sound (if omitted, all sounds will be used.)\r\n   */\r\n\r\n  this.unmute = function(sID) {\r\n\r\n    var i;\r\n\r\n    if (sID instanceof String) {\r\n      sID = null;\r\n    }\r\n\r\n    if (!sID) {\r\n\r\n      sm2._wD(sm + '.unmute(): Unmuting all sounds');\r\n      for (i = sm2.soundIDs.length - 1; i >= 0; i--) {\r\n        sm2.sounds[sm2.soundIDs[i]].unmute();\r\n      }\r\n      sm2.muted = false;\r\n\r\n    } else {\r\n\r\n      if (!idCheck(sID)) return false;\r\n\r\n      sm2._wD(sm + '.unmute(): Unmuting \"' + sID + '\"');\r\n\r\n      return sm2.sounds[sID].unmute();\r\n\r\n    }\r\n\r\n    return true;\r\n\r\n  };\r\n\r\n  /**\r\n   * Unmutes all sounds.\r\n   */\r\n\r\n  this.unmuteAll = function() {\r\n\r\n    sm2.unmute();\r\n\r\n  };\r\n\r\n  /**\r\n   * Calls the toggleMute() method of a SMSound object by ID.\r\n   *\r\n   * @param {string} sID The ID of the sound\r\n   * @return {SMSound} The SMSound object\r\n   */\r\n\r\n  this.toggleMute = function(sID) {\r\n\r\n    if (!idCheck(sID)) return false;\r\n\r\n    return sm2.sounds[sID].toggleMute();\r\n\r\n  };\r\n\r\n  /**\r\n   * Retrieves the memory used by the flash plugin.\r\n   *\r\n   * @return {number} The amount of memory in use\r\n   */\r\n\r\n  this.getMemoryUse = function() {\r\n\r\n    // flash-only\r\n    var ram = 0;\r\n\r\n    if (flash && fV !== 8) {\r\n      ram = parseInt(flash._getMemoryUse(), 10);\r\n    }\r\n\r\n    return ram;\r\n\r\n  };\r\n\r\n  /**\r\n   * Undocumented: NOPs soundManager and all SMSound objects.\r\n   */\r\n\r\n  this.disable = function(bNoDisable) {\r\n\r\n    // destroy all functions\r\n    var i;\r\n\r\n    if (bNoDisable === _undefined) {\r\n      bNoDisable = false;\r\n    }\r\n\r\n    // already disabled?\r\n    if (disabled) return false;\r\n\r\n    disabled = true;\r\n\r\n    _wDS('shutdown', 1);\r\n\r\n    for (i = sm2.soundIDs.length - 1; i >= 0; i--) {\r\n      disableObject(sm2.sounds[sm2.soundIDs[i]]);\r\n    }\r\n\r\n    disableObject(sm2);\r\n\r\n    // fire \"complete\", despite fail\r\n    initComplete(bNoDisable);\r\n\r\n    event.remove(window, 'load', initUserOnload);\r\n\r\n    return true;\r\n\r\n  };\r\n\r\n  /**\r\n   * Determines playability of a MIME type, eg. 'audio/mp3'.\r\n   */\r\n\r\n  this.canPlayMIME = function(sMIME) {\r\n\r\n    var result;\r\n\r\n    if (sm2.hasHTML5) {\r\n      result = html5CanPlay({\r\n        type: sMIME\r\n      });\r\n    }\r\n\r\n    if (!result && needsFlash) {\r\n      // if flash 9, test netStream (movieStar) types as well.\r\n      result = (sMIME && sm2.ok() ? !!((fV > 8 ? sMIME.match(netStreamMimeTypes) : null) || sMIME.match(sm2.mimePattern)) : null); // TODO: make less \"weird\" (per JSLint)\r\n    }\r\n\r\n    return result;\r\n\r\n  };\r\n\r\n  /**\r\n   * Determines playability of a URL based on audio support.\r\n   *\r\n   * @param {string} sURL The URL to test\r\n   * @return {boolean} URL playability\r\n   */\r\n\r\n  this.canPlayURL = function(sURL) {\r\n\r\n    var result;\r\n\r\n    if (sm2.hasHTML5) {\r\n      result = html5CanPlay({\r\n        url: sURL\r\n      });\r\n    }\r\n\r\n    if (!result && needsFlash) {\r\n      result = (sURL && sm2.ok() ? !!(sURL.match(sm2.filePattern)) : null);\r\n    }\r\n\r\n    return result;\r\n\r\n  };\r\n\r\n  /**\r\n   * Determines playability of an HTML DOM &lt;a&gt; object (or similar object literal) based on audio support.\r\n   *\r\n   * @param {object} oLink an HTML DOM &lt;a&gt; object or object literal including href and/or type attributes\r\n   * @return {boolean} URL playability\r\n   */\r\n\r\n  this.canPlayLink = function(oLink) {\r\n\r\n    if (oLink.type !== _undefined && oLink.type && sm2.canPlayMIME(oLink.type)) return true;\r\n\r\n    return sm2.canPlayURL(oLink.href);\r\n\r\n  };\r\n\r\n  /**\r\n   * Retrieves a SMSound object by ID.\r\n   *\r\n   * @param {string} sID The ID of the sound\r\n   * @return {SMSound} The SMSound object\r\n   */\r\n\r\n  this.getSoundById = function(sID, _suppressDebug) {\r\n\r\n    if (!sID) return null;\r\n\r\n    var result = sm2.sounds[sID];\r\n\r\n    // <d>\r\n    if (!result && !_suppressDebug) {\r\n      sm2._wD(sm + '.getSoundById(): Sound \"' + sID + '\" not found.', 2);\r\n    }\r\n    // </d>\r\n\r\n    return result;\r\n\r\n  };\r\n\r\n  /**\r\n   * Queues a callback for execution when SoundManager has successfully initialized.\r\n   *\r\n   * @param {function} oMethod The callback method to fire\r\n   * @param {object} oScope Optional: The scope to apply to the callback\r\n   */\r\n\r\n  this.onready = function(oMethod, oScope) {\r\n\r\n    var sType = 'onready',\r\n        result = false;\r\n\r\n    if (typeof oMethod === 'function') {\r\n\r\n      // <d>\r\n      if (didInit) {\r\n        sm2._wD(str('queue', sType));\r\n      }\r\n      // </d>\r\n\r\n      if (!oScope) {\r\n        oScope = window;\r\n      }\r\n\r\n      addOnEvent(sType, oMethod, oScope);\r\n      processOnEvents();\r\n\r\n      result = true;\r\n\r\n    } else {\r\n\r\n      throw str('needFunction', sType);\r\n\r\n    }\r\n\r\n    return result;\r\n\r\n  };\r\n\r\n  /**\r\n   * Queues a callback for execution when SoundManager has failed to initialize.\r\n   *\r\n   * @param {function} oMethod The callback method to fire\r\n   * @param {object} oScope Optional: The scope to apply to the callback\r\n   */\r\n\r\n  this.ontimeout = function(oMethod, oScope) {\r\n\r\n    var sType = 'ontimeout',\r\n        result = false;\r\n\r\n    if (typeof oMethod === 'function') {\r\n\r\n      // <d>\r\n      if (didInit) {\r\n        sm2._wD(str('queue', sType));\r\n      }\r\n      // </d>\r\n\r\n      if (!oScope) {\r\n        oScope = window;\r\n      }\r\n\r\n      addOnEvent(sType, oMethod, oScope);\r\n      processOnEvents({ type: sType });\r\n\r\n      result = true;\r\n\r\n    } else {\r\n\r\n      throw str('needFunction', sType);\r\n\r\n    }\r\n\r\n    return result;\r\n\r\n  };\r\n\r\n  /**\r\n   * Writes console.log()-style debug output to a console or in-browser element.\r\n   * Applies when debugMode = true\r\n   *\r\n   * @param {string} sText The console message\r\n   * @param {object} nType Optional log level (number), or object. Number case: Log type/style where 0 = 'info', 1 = 'warn', 2 = 'error'. Object case: Object to be dumped.\r\n   */\r\n\r\n  this._writeDebug = function(sText, sTypeOrObject) {\r\n\r\n    // pseudo-private console.log()-style output\r\n    // <d>\r\n\r\n    var sDID = 'soundmanager-debug', o, oItem;\r\n\r\n    if (!sm2.setupOptions.debugMode) return false;\r\n\r\n    if (hasConsole && sm2.useConsole) {\r\n      if (sTypeOrObject && typeof sTypeOrObject === 'object') {\r\n        // object passed; dump to console.\r\n        console.log(sText, sTypeOrObject);\r\n      } else if (debugLevels[sTypeOrObject] !== _undefined) {\r\n        console[debugLevels[sTypeOrObject]](sText);\r\n      } else {\r\n        console.log(sText);\r\n      }\r\n      if (sm2.consoleOnly) return true;\r\n    }\r\n\r\n    o = id(sDID);\r\n\r\n    if (!o) return false;\r\n\r\n    oItem = doc.createElement('div');\r\n\r\n    if (++wdCount % 2 === 0) {\r\n      oItem.className = 'sm2-alt';\r\n    }\r\n\r\n    if (sTypeOrObject === _undefined) {\r\n      sTypeOrObject = 0;\r\n    } else {\r\n      sTypeOrObject = parseInt(sTypeOrObject, 10);\r\n    }\r\n\r\n    oItem.appendChild(doc.createTextNode(sText));\r\n\r\n    if (sTypeOrObject) {\r\n      if (sTypeOrObject >= 2) {\r\n        oItem.style.fontWeight = 'bold';\r\n      }\r\n      if (sTypeOrObject === 3) {\r\n        oItem.style.color = '#ff3333';\r\n      }\r\n    }\r\n\r\n    // top-to-bottom\r\n    // o.appendChild(oItem);\r\n\r\n    // bottom-to-top\r\n    o.insertBefore(oItem, o.firstChild);\r\n\r\n    o = null;\r\n    // </d>\r\n\r\n    return true;\r\n\r\n  };\r\n\r\n  // <d>\r\n  // last-resort debugging option\r\n  if (wl.indexOf('sm2-debug=alert') !== -1) {\r\n    this._writeDebug = function(sText) {\r\n      window.alert(sText);\r\n    };\r\n  }\r\n  // </d>\r\n\r\n  // alias\r\n  this._wD = this._writeDebug;\r\n\r\n  /**\r\n   * Provides debug / state information on all SMSound objects.\r\n   */\r\n\r\n  this._debug = function() {\r\n\r\n    // <d>\r\n    var i, j;\r\n    _wDS('currentObj', 1);\r\n\r\n    for (i = 0, j = sm2.soundIDs.length; i < j; i++) {\r\n      sm2.sounds[sm2.soundIDs[i]]._debug();\r\n    }\r\n    // </d>\r\n\r\n  };\r\n\r\n  /**\r\n   * Restarts and re-initializes the SoundManager instance.\r\n   *\r\n   * @param {boolean} resetEvents Optional: When true, removes all registered onready and ontimeout event callbacks.\r\n   * @param {boolean} excludeInit Options: When true, does not call beginDelayedInit() (which would restart SM2).\r\n   * @return {object} soundManager The soundManager instance.\r\n   */\r\n\r\n  this.reboot = function(resetEvents, excludeInit) {\r\n\r\n    // reset some (or all) state, and re-init unless otherwise specified.\r\n\r\n    // <d>\r\n    if (sm2.soundIDs.length) {\r\n      sm2._wD('Destroying ' + sm2.soundIDs.length + ' SMSound object' + (sm2.soundIDs.length !== 1 ? 's' : '') + '...');\r\n    }\r\n    // </d>\r\n\r\n    var i, j, k;\r\n\r\n    for (i = sm2.soundIDs.length - 1; i >= 0; i--) {\r\n      sm2.sounds[sm2.soundIDs[i]].destruct();\r\n    }\r\n\r\n    // trash ze flash (remove from the DOM)\r\n\r\n    if (flash) {\r\n\r\n      try {\r\n\r\n        if (isIE) {\r\n          oRemovedHTML = flash.innerHTML;\r\n        }\r\n\r\n        oRemoved = flash.parentNode.removeChild(flash);\r\n\r\n      } catch(e) {\r\n\r\n        // Remove failed? May be due to flash blockers silently removing the SWF object/embed node from the DOM. Warn and continue.\r\n\r\n        _wDS('badRemove', 2);\r\n\r\n      }\r\n\r\n    }\r\n\r\n    // actually, force recreate of movie.\r\n\r\n    oRemovedHTML = oRemoved = needsFlash = flash = null;\r\n\r\n    sm2.enabled = didDCLoaded = didInit = waitingForEI = initPending = didAppend = appendSuccess = disabled = useGlobalHTML5Audio = sm2.swfLoaded = false;\r\n\r\n    sm2.soundIDs = [];\r\n    sm2.sounds = {};\r\n\r\n    idCounter = 0;\r\n    didSetup = false;\r\n\r\n    if (!resetEvents) {\r\n      // reset callbacks for onready, ontimeout etc. so that they will fire again on re-init\r\n      for (i in on_queue) {\r\n        if (on_queue.hasOwnProperty(i)) {\r\n          for (j = 0, k = on_queue[i].length; j < k; j++) {\r\n            on_queue[i][j].fired = false;\r\n          }\r\n        }\r\n      }\r\n    } else {\r\n      // remove all callbacks entirely\r\n      on_queue = [];\r\n    }\r\n\r\n    // <d>\r\n    if (!excludeInit) {\r\n      sm2._wD(sm + ': Rebooting...');\r\n    }\r\n    // </d>\r\n\r\n    // reset HTML5 and flash canPlay test results\r\n\r\n    sm2.html5 = {\r\n      usingFlash: null\r\n    };\r\n\r\n    sm2.flash = {};\r\n\r\n    // reset device-specific HTML/flash mode switches\r\n\r\n    sm2.html5Only = false;\r\n    sm2.ignoreFlash = false;\r\n\r\n    window.setTimeout(function() {\r\n\r\n      // by default, re-init\r\n\r\n      if (!excludeInit) {\r\n        sm2.beginDelayedInit();\r\n      }\r\n\r\n    }, 20);\r\n\r\n    return sm2;\r\n\r\n  };\r\n\r\n  this.reset = function() {\r\n\r\n    /**\r\n     * Shuts down and restores the SoundManager instance to its original loaded state, without an explicit reboot. All onready/ontimeout handlers are removed.\r\n     * After this call, SM2 may be re-initialized via soundManager.beginDelayedInit().\r\n     * @return {object} soundManager The soundManager instance.\r\n     */\r\n\r\n    _wDS('reset');\r\n\r\n    return sm2.reboot(true, true);\r\n\r\n  };\r\n\r\n  /**\r\n   * Undocumented: Determines the SM2 flash movie's load progress.\r\n   *\r\n   * @return {number or null} Percent loaded, or if invalid/unsupported, null.\r\n   */\r\n\r\n  this.getMoviePercent = function() {\r\n\r\n    /**\r\n     * Interesting syntax notes...\r\n     * Flash/ExternalInterface (ActiveX/NPAPI) bridge methods are not typeof \"function\" nor instanceof Function, but are still valid.\r\n     * Furthermore, using (flash && flash.PercentLoaded) causes IE to throw \"object doesn't support this property or method\".\r\n     * Thus, 'in' syntax must be used.\r\n     */\r\n\r\n    return (flash && 'PercentLoaded' in flash ? flash.PercentLoaded() : null);\r\n\r\n  };\r\n\r\n  /**\r\n   * Additional helper for manually invoking SM2's init process after DOM Ready / window.onload().\r\n   */\r\n\r\n  this.beginDelayedInit = function() {\r\n\r\n    windowLoaded = true;\r\n    domContentLoaded();\r\n\r\n    setTimeout(function() {\r\n\r\n      if (initPending) return false;\r\n\r\n      createMovie();\r\n      initMovie();\r\n      initPending = true;\r\n\r\n      return true;\r\n\r\n    }, 20);\r\n\r\n    delayWaitForEI();\r\n\r\n  };\r\n\r\n  /**\r\n   * Destroys the SoundManager instance and all SMSound instances.\r\n   */\r\n\r\n  this.destruct = function() {\r\n\r\n    sm2._wD(sm + '.destruct()');\r\n    sm2.disable(true);\r\n\r\n  };\r\n\r\n  /**\r\n   * SMSound() (sound object) constructor\r\n   * ------------------------------------\r\n   *\r\n   * @param {object} oOptions Sound options (id and url are required attributes)\r\n   * @return {SMSound} The new SMSound object\r\n   */\r\n\r\n  SMSound = function(oOptions) {\r\n\r\n    var s = this, resetProperties, add_html5_events, remove_html5_events, stop_html5_timer, start_html5_timer, attachOnPosition, onplay_called = false, onPositionItems = [], onPositionFired = 0, detachOnPosition, applyFromTo, lastURL = null, lastHTML5State, urlOmitted;\r\n\r\n    lastHTML5State = {\r\n      // tracks duration + position (time)\r\n      duration: null,\r\n      time: null\r\n    };\r\n\r\n    this.id = oOptions.id;\r\n\r\n    // legacy\r\n    this.sID = this.id;\r\n\r\n    this.url = oOptions.url;\r\n    this.options = mixin(oOptions);\r\n\r\n    // per-play-instance-specific options\r\n    this.instanceOptions = this.options;\r\n\r\n    // short alias\r\n    this._iO = this.instanceOptions;\r\n\r\n    // assign property defaults\r\n    this.pan = this.options.pan;\r\n    this.volume = this.options.volume;\r\n\r\n    // whether or not this object is using HTML5\r\n    this.isHTML5 = false;\r\n\r\n    // internal HTML5 Audio() object reference\r\n    this._a = null;\r\n\r\n    // for flash 8 special-case createSound() without url, followed by load/play with url case\r\n    urlOmitted = (!this.url);\r\n\r\n    /**\r\n     * SMSound() public methods\r\n     * ------------------------\r\n     */\r\n\r\n    this.id3 = {};\r\n\r\n    /**\r\n     * Writes SMSound object parameters to debug console\r\n     */\r\n\r\n    this._debug = function() {\r\n\r\n      // <d>\r\n      sm2._wD(s.id + ': Merged options:', s.options);\r\n      // </d>\r\n\r\n    };\r\n\r\n    /**\r\n     * Begins loading a sound per its *url*.\r\n     *\r\n     * @param {object} options Optional: Sound options\r\n     * @return {SMSound} The SMSound object\r\n     */\r\n\r\n    this.load = function(options) {\r\n\r\n      var oSound = null, instanceOptions;\r\n\r\n      if (options !== _undefined) {\r\n        s._iO = mixin(options, s.options);\r\n      } else {\r\n        options = s.options;\r\n        s._iO = options;\r\n        if (lastURL && lastURL !== s.url) {\r\n          _wDS('manURL');\r\n          s._iO.url = s.url;\r\n          s.url = null;\r\n        }\r\n      }\r\n\r\n      if (!s._iO.url) {\r\n        s._iO.url = s.url;\r\n      }\r\n\r\n      s._iO.url = parseURL(s._iO.url);\r\n\r\n      // ensure we're in sync\r\n      s.instanceOptions = s._iO;\r\n\r\n      // local shortcut\r\n      instanceOptions = s._iO;\r\n\r\n      sm2._wD(s.id + ': load (' + instanceOptions.url + ')');\r\n\r\n      if (!instanceOptions.url && !s.url) {\r\n        sm2._wD(s.id + ': load(): url is unassigned. Exiting.', 2);\r\n        return s;\r\n      }\r\n\r\n      // <d>\r\n      if (!s.isHTML5 && fV === 8 && !s.url && !instanceOptions.autoPlay) {\r\n        // flash 8 load() -> play() won't work before onload has fired.\r\n        sm2._wD(s.id + ': Flash 8 load() limitation: Wait for onload() before calling play().', 1);\r\n      }\r\n      // </d>\r\n\r\n      if (instanceOptions.url === s.url && s.readyState !== 0 && s.readyState !== 2) {\r\n        _wDS('onURL', 1);\r\n        // if loaded and an onload() exists, fire immediately.\r\n        if (s.readyState === 3 && instanceOptions.onload) {\r\n          // assume success based on truthy duration.\r\n          wrapCallback(s, function() {\r\n            instanceOptions.onload.apply(s, [(!!s.duration)]);\r\n          });\r\n        }\r\n        return s;\r\n      }\r\n\r\n      // reset a few state properties\r\n\r\n      s.loaded = false;\r\n      s.readyState = 1;\r\n      s.playState = 0;\r\n      s.id3 = {};\r\n\r\n      // TODO: If switching from HTML5 -> flash (or vice versa), stop currently-playing audio.\r\n\r\n      if (html5OK(instanceOptions)) {\r\n\r\n        oSound = s._setup_html5(instanceOptions);\r\n\r\n        if (!oSound._called_load) {\r\n\r\n          s._html5_canplay = false;\r\n\r\n          // TODO: review called_load / html5_canplay logic\r\n\r\n          // if url provided directly to load(), assign it here.\r\n\r\n          if (s.url !== instanceOptions.url) {\r\n\r\n            sm2._wD(_wDS('manURL') + ': ' + instanceOptions.url);\r\n\r\n            s._a.src = instanceOptions.url;\r\n\r\n            // TODO: review / re-apply all relevant options (volume, loop, onposition etc.)\r\n\r\n            // reset position for new URL\r\n            s.setPosition(0);\r\n\r\n          }\r\n\r\n          // given explicit load call, try to preload.\r\n\r\n          // early HTML5 implementation (non-standard)\r\n          s._a.autobuffer = 'auto';\r\n\r\n          // standard property, values: none / metadata / auto\r\n          // reference: http://msdn.microsoft.com/en-us/library/ie/ff974759%28v=vs.85%29.aspx\r\n          s._a.preload = 'auto';\r\n\r\n          s._a._called_load = true;\r\n\r\n        } else {\r\n\r\n          sm2._wD(s.id + ': Ignoring request to load again');\r\n\r\n        }\r\n\r\n      } else {\r\n\r\n        if (sm2.html5Only) {\r\n          sm2._wD(s.id + ': No flash support. Exiting.');\r\n          return s;\r\n        }\r\n\r\n        if (s._iO.url && s._iO.url.match(/data:/i)) {\r\n          // data: URIs not supported by Flash, either.\r\n          sm2._wD(s.id + ': data: URIs not supported via Flash. Exiting.');\r\n          return s;\r\n        }\r\n\r\n        try {\r\n          s.isHTML5 = false;\r\n          s._iO = policyFix(loopFix(instanceOptions));\r\n          // if we have \"position\", disable auto-play as we'll be seeking to that position at onload().\r\n          if (s._iO.autoPlay && (s._iO.position || s._iO.from)) {\r\n            sm2._wD(s.id + ': Disabling autoPlay because of non-zero offset case');\r\n            s._iO.autoPlay = false;\r\n          }\r\n          // re-assign local shortcut\r\n          instanceOptions = s._iO;\r\n          if (fV === 8) {\r\n            flash._load(s.id, instanceOptions.url, instanceOptions.stream, instanceOptions.autoPlay, instanceOptions.usePolicyFile);\r\n          } else {\r\n            flash._load(s.id, instanceOptions.url, !!(instanceOptions.stream), !!(instanceOptions.autoPlay), instanceOptions.loops || 1, !!(instanceOptions.autoLoad), instanceOptions.usePolicyFile);\r\n          }\r\n        } catch(e) {\r\n          _wDS('smError', 2);\r\n          debugTS('onload', false);\r\n          catchError({\r\n            type: 'SMSOUND_LOAD_JS_EXCEPTION',\r\n            fatal: true\r\n          });\r\n        }\r\n\r\n      }\r\n\r\n      // after all of this, ensure sound url is up to date.\r\n      s.url = instanceOptions.url;\r\n\r\n      return s;\r\n\r\n    };\r\n\r\n    /**\r\n     * Unloads a sound, canceling any open HTTP requests.\r\n     *\r\n     * @return {SMSound} The SMSound object\r\n     */\r\n\r\n    this.unload = function() {\r\n\r\n      // Flash 8/AS2 can't \"close\" a stream - fake it by loading an empty URL\r\n      // Flash 9/AS3: Close stream, preventing further load\r\n      // HTML5: Most UAs will use empty URL\r\n\r\n      if (s.readyState !== 0) {\r\n\r\n        sm2._wD(s.id + ': unload()');\r\n\r\n        if (!s.isHTML5) {\r\n\r\n          if (fV === 8) {\r\n            flash._unload(s.id, emptyURL);\r\n          } else {\r\n            flash._unload(s.id);\r\n          }\r\n\r\n        } else {\r\n\r\n          stop_html5_timer();\r\n\r\n          if (s._a) {\r\n\r\n            s._a.pause();\r\n\r\n            // update empty URL, too\r\n            lastURL = html5Unload(s._a);\r\n\r\n          }\r\n\r\n        }\r\n\r\n        // reset load/status flags\r\n        resetProperties();\r\n\r\n      }\r\n\r\n      return s;\r\n\r\n    };\r\n\r\n    /**\r\n     * Unloads and destroys a sound.\r\n     */\r\n\r\n    this.destruct = function(_bFromSM) {\r\n\r\n      sm2._wD(s.id + ': Destruct');\r\n\r\n      if (!s.isHTML5) {\r\n\r\n        // kill sound within Flash\r\n        // Disable the onfailure handler\r\n        s._iO.onfailure = null;\r\n        flash._destroySound(s.id);\r\n\r\n      } else {\r\n\r\n        stop_html5_timer();\r\n\r\n        if (s._a) {\r\n          s._a.pause();\r\n          html5Unload(s._a);\r\n          if (!useGlobalHTML5Audio) {\r\n            remove_html5_events();\r\n          }\r\n          // break obvious circular reference\r\n          s._a._s = null;\r\n          s._a = null;\r\n        }\r\n\r\n      }\r\n\r\n      if (!_bFromSM) {\r\n        // ensure deletion from controller\r\n        sm2.destroySound(s.id, true);\r\n      }\r\n\r\n    };\r\n\r\n    /**\r\n     * Begins playing a sound.\r\n     *\r\n     * @param {object} options Optional: Sound options\r\n     * @return {SMSound} The SMSound object\r\n     */\r\n\r\n    this.play = function(options, _updatePlayState) {\r\n\r\n      var fN, allowMulti, a, onready,\r\n          audioClone, onended, oncanplay,\r\n          startOK = true;\r\n\r\n      // <d>\r\n      fN = s.id + ': play(): ';\r\n      // </d>\r\n\r\n      // default to true\r\n      _updatePlayState = (_updatePlayState === _undefined ? true : _updatePlayState);\r\n\r\n      if (!options) {\r\n        options = {};\r\n      }\r\n\r\n      // first, use local URL (if specified)\r\n      if (s.url) {\r\n        s._iO.url = s.url;\r\n      }\r\n\r\n      // mix in any options defined at createSound()\r\n      s._iO = mixin(s._iO, s.options);\r\n\r\n      // mix in any options specific to this method\r\n      s._iO = mixin(options, s._iO);\r\n\r\n      s._iO.url = parseURL(s._iO.url);\r\n\r\n      s.instanceOptions = s._iO;\r\n\r\n      // RTMP-only\r\n      if (!s.isHTML5 && s._iO.serverURL && !s.connected) {\r\n        if (!s.getAutoPlay()) {\r\n          sm2._wD(fN + ' Netstream not connected yet - setting autoPlay');\r\n          s.setAutoPlay(true);\r\n        }\r\n        // play will be called in onconnect()\r\n        return s;\r\n      }\r\n\r\n      if (html5OK(s._iO)) {\r\n        s._setup_html5(s._iO);\r\n        start_html5_timer();\r\n      }\r\n\r\n      if (s.playState === 1 && !s.paused) {\r\n\r\n        allowMulti = s._iO.multiShot;\r\n\r\n        if (!allowMulti) {\r\n\r\n          sm2._wD(fN + 'Already playing (one-shot)', 1);\r\n\r\n          if (s.isHTML5) {\r\n            // go back to original position.\r\n            s.setPosition(s._iO.position);\r\n          }\r\n\r\n          return s;\r\n\r\n        }\r\n\r\n        sm2._wD(fN + 'Already playing (multi-shot)', 1);\r\n\r\n      }\r\n\r\n      // edge case: play() with explicit URL parameter\r\n      if (options.url && options.url !== s.url) {\r\n\r\n        // special case for createSound() followed by load() / play() with url; avoid double-load case.\r\n        if (!s.readyState && !s.isHTML5 && fV === 8 && urlOmitted) {\r\n\r\n          urlOmitted = false;\r\n\r\n        } else {\r\n\r\n          // load using merged options\r\n          s.load(s._iO);\r\n\r\n        }\r\n\r\n      }\r\n\r\n      if (!s.loaded) {\r\n\r\n        if (s.readyState === 0) {\r\n\r\n          sm2._wD(fN + 'Attempting to load');\r\n\r\n          // try to get this sound playing ASAP\r\n          if (!s.isHTML5 && !sm2.html5Only) {\r\n\r\n            // flash: assign directly because setAutoPlay() increments the instanceCount\r\n            s._iO.autoPlay = true;\r\n            s.load(s._iO);\r\n\r\n          } else if (s.isHTML5) {\r\n\r\n            // iOS needs this when recycling sounds, loading a new URL on an existing object.\r\n            s.load(s._iO);\r\n\r\n          } else {\r\n\r\n            sm2._wD(fN + 'Unsupported type. Exiting.');\r\n\r\n            return s;\r\n\r\n          }\r\n\r\n          // HTML5 hack - re-set instanceOptions?\r\n          s.instanceOptions = s._iO;\r\n\r\n        } else if (s.readyState === 2) {\r\n\r\n          sm2._wD(fN + 'Could not load - exiting', 2);\r\n\r\n          return s;\r\n\r\n        } else {\r\n\r\n          sm2._wD(fN + 'Loading - attempting to play...');\r\n\r\n        }\r\n\r\n      } else {\r\n\r\n        // \"play()\"\r\n        sm2._wD(fN.substr(0, fN.lastIndexOf(':')));\r\n\r\n      }\r\n\r\n      if (!s.isHTML5 && fV === 9 && s.position > 0 && s.position === s.duration) {\r\n        // flash 9 needs a position reset if play() is called while at the end of a sound.\r\n        sm2._wD(fN + 'Sound at end, resetting to position: 0');\r\n        options.position = 0;\r\n      }\r\n\r\n      /**\r\n       * Streams will pause when their buffer is full if they are being loaded.\r\n       * In this case paused is true, but the song hasn't started playing yet.\r\n       * If we just call resume() the onplay() callback will never be called.\r\n       * So only call resume() if the position is > 0.\r\n       * Another reason is because options like volume won't have been applied yet.\r\n       * For normal sounds, just resume.\r\n       */\r\n\r\n      if (s.paused && s.position >= 0 && (!s._iO.serverURL || s.position > 0)) {\r\n\r\n        // https://gist.github.com/37b17df75cc4d7a90bf6\r\n        sm2._wD(fN + 'Resuming from paused state', 1);\r\n        s.resume();\r\n\r\n      } else {\r\n\r\n        s._iO = mixin(options, s._iO);\r\n\r\n        /**\r\n         * Preload in the event of play() with position under Flash,\r\n         * or from/to parameters and non-RTMP case\r\n         */\r\n        if (((!s.isHTML5 && s._iO.position !== null && s._iO.position > 0) || (s._iO.from !== null && s._iO.from > 0) || s._iO.to !== null) && s.instanceCount === 0 && s.playState === 0 && !s._iO.serverURL) {\r\n\r\n          onready = function() {\r\n            // sound \"canplay\" or onload()\r\n            // re-apply position/from/to to instance options, and start playback\r\n            s._iO = mixin(options, s._iO);\r\n            s.play(s._iO);\r\n          };\r\n\r\n          // HTML5 needs to at least have \"canplay\" fired before seeking.\r\n          if (s.isHTML5 && !s._html5_canplay) {\r\n\r\n            // this hasn't been loaded yet. load it first, and then do this again.\r\n            sm2._wD(fN + 'Beginning load for non-zero offset case');\r\n\r\n            s.load({\r\n              // note: custom HTML5-only event added for from/to implementation.\r\n              _oncanplay: onready\r\n            });\r\n\r\n          } else if (!s.isHTML5 && !s.loaded && (!s.readyState || s.readyState !== 2)) {\r\n\r\n            // to be safe, preload the whole thing in Flash.\r\n\r\n            sm2._wD(fN + 'Preloading for non-zero offset case');\r\n\r\n            s.load({\r\n              onload: onready\r\n            });\r\n\r\n          }\r\n\r\n          // otherwise, we're ready to go. re-apply local options, and continue\r\n\r\n          s._iO = applyFromTo();\r\n\r\n        }\r\n\r\n        // sm2._wD(fN + 'Starting to play');\r\n\r\n        // increment instance counter, where enabled + supported\r\n        if (!s.instanceCount || s._iO.multiShotEvents || (s.isHTML5 && s._iO.multiShot && !useGlobalHTML5Audio) || (!s.isHTML5 && fV > 8 && !s.getAutoPlay())) {\r\n          s.instanceCount++;\r\n        }\r\n\r\n        // if first play and onposition parameters exist, apply them now\r\n        if (s._iO.onposition && s.playState === 0) {\r\n          attachOnPosition(s);\r\n        }\r\n\r\n        s.playState = 1;\r\n        s.paused = false;\r\n\r\n        s.position = (s._iO.position !== _undefined && !isNaN(s._iO.position) ? s._iO.position : 0);\r\n\r\n        if (!s.isHTML5) {\r\n          s._iO = policyFix(loopFix(s._iO));\r\n        }\r\n\r\n        if (s._iO.onplay && _updatePlayState) {\r\n          s._iO.onplay.apply(s);\r\n          onplay_called = true;\r\n        }\r\n\r\n        s.setVolume(s._iO.volume, true);\r\n        s.setPan(s._iO.pan, true);\r\n\r\n        if (s._iO.playbackRate !== 1) {\r\n          s.setPlaybackRate(s._iO.playbackRate);\r\n        }\r\n\r\n        if (!s.isHTML5) {\r\n\r\n          startOK = flash._start(s.id, s._iO.loops || 1, (fV === 9 ? s.position : s.position / msecScale), s._iO.multiShot || false);\r\n\r\n          if (fV === 9 && !startOK) {\r\n            // edge case: no sound hardware, or 32-channel flash ceiling hit.\r\n            // applies only to Flash 9, non-NetStream/MovieStar sounds.\r\n            // http://help.adobe.com/en_US/FlashPlatform/reference/actionscript/3/flash/media/Sound.html#play%28%29\r\n            sm2._wD(fN + 'No sound hardware, or 32-sound ceiling hit', 2);\r\n            if (s._iO.onplayerror) {\r\n              s._iO.onplayerror.apply(s);\r\n            }\r\n\r\n          }\r\n\r\n        } else if (s.instanceCount < 2) {\r\n\r\n            // HTML5 single-instance case\r\n\r\n            start_html5_timer();\r\n\r\n            a = s._setup_html5();\r\n\r\n            s.setPosition(s._iO.position);\r\n\r\n            a.play();\r\n\r\n          } else {\r\n\r\n            // HTML5 multi-shot case\r\n\r\n            sm2._wD(s.id + ': Cloning Audio() for instance #' + s.instanceCount + '...');\r\n\r\n            audioClone = new Audio(s._iO.url);\r\n\r\n            onended = function() {\r\n              event.remove(audioClone, 'ended', onended);\r\n              s._onfinish(s);\r\n              // cleanup\r\n              html5Unload(audioClone);\r\n              audioClone = null;\r\n            };\r\n\r\n            oncanplay = function() {\r\n              event.remove(audioClone, 'canplay', oncanplay);\r\n              try {\r\n                audioClone.currentTime = s._iO.position / msecScale;\r\n              } catch(err) {\r\n                complain(s.id + ': multiShot play() failed to apply position of ' + (s._iO.position / msecScale));\r\n              }\r\n              audioClone.play();\r\n            };\r\n\r\n            event.add(audioClone, 'ended', onended);\r\n\r\n            // apply volume to clones, too\r\n            if (s._iO.volume !== _undefined) {\r\n              audioClone.volume = Math.max(0, Math.min(1, s._iO.volume / 100));\r\n            }\r\n\r\n            // playing multiple muted sounds? if you do this, you're weird ;) - but let's cover it.\r\n            if (s.muted) {\r\n              audioClone.muted = true;\r\n            }\r\n\r\n            if (s._iO.position) {\r\n              // HTML5 audio can't seek before onplay() event has fired.\r\n              // wait for canplay, then seek to position and start playback.\r\n              event.add(audioClone, 'canplay', oncanplay);\r\n            } else {\r\n              // begin playback at currentTime: 0\r\n              audioClone.play();\r\n            }\r\n\r\n          }\r\n\r\n      }\r\n\r\n      return s;\r\n\r\n    };\r\n\r\n    // just for convenience\r\n    this.start = this.play;\r\n\r\n    /**\r\n     * Stops playing a sound (and optionally, all sounds)\r\n     *\r\n     * @param {boolean} bAll Optional: Whether to stop all sounds\r\n     * @return {SMSound} The SMSound object\r\n     */\r\n\r\n    this.stop = function(bAll) {\r\n\r\n      var instanceOptions = s._iO,\r\n          originalPosition;\r\n\r\n      if (s.playState === 1) {\r\n\r\n        sm2._wD(s.id + ': stop()');\r\n\r\n        s._onbufferchange(0);\r\n        s._resetOnPosition(0);\r\n        s.paused = false;\r\n\r\n        if (!s.isHTML5) {\r\n          s.playState = 0;\r\n        }\r\n\r\n        // remove onPosition listeners, if any\r\n        detachOnPosition();\r\n\r\n        // and \"to\" position, if set\r\n        if (instanceOptions.to) {\r\n          s.clearOnPosition(instanceOptions.to);\r\n        }\r\n\r\n        if (!s.isHTML5) {\r\n\r\n          flash._stop(s.id, bAll);\r\n\r\n          // hack for netStream: just unload\r\n          if (instanceOptions.serverURL) {\r\n            s.unload();\r\n          }\r\n\r\n        } else if (s._a) {\r\n\r\n            originalPosition = s.position;\r\n\r\n            // act like Flash, though\r\n            s.setPosition(0);\r\n\r\n            // hack: reflect old position for onstop() (also like Flash)\r\n            s.position = originalPosition;\r\n\r\n            // html5 has no stop()\r\n            // NOTE: pausing means iOS requires interaction to resume.\r\n            s._a.pause();\r\n\r\n            s.playState = 0;\r\n\r\n            // and update UI\r\n            s._onTimer();\r\n\r\n            stop_html5_timer();\r\n\r\n          }\r\n\r\n        s.instanceCount = 0;\r\n        s._iO = {};\r\n\r\n        if (instanceOptions.onstop) {\r\n          instanceOptions.onstop.apply(s);\r\n        }\r\n\r\n      }\r\n\r\n      return s;\r\n\r\n    };\r\n\r\n    /**\r\n     * Undocumented/internal: Sets autoPlay for RTMP.\r\n     *\r\n     * @param {boolean} autoPlay state\r\n     */\r\n\r\n    this.setAutoPlay = function(autoPlay) {\r\n\r\n      sm2._wD(s.id + ': Autoplay turned ' + (autoPlay ? 'on' : 'off'));\r\n      s._iO.autoPlay = autoPlay;\r\n\r\n      if (!s.isHTML5) {\r\n        flash._setAutoPlay(s.id, autoPlay);\r\n        if (autoPlay) {\r\n          // only increment the instanceCount if the sound isn't loaded (TODO: verify RTMP)\r\n          if (!s.instanceCount && s.readyState === 1) {\r\n            s.instanceCount++;\r\n            sm2._wD(s.id + ': Incremented instance count to ' + s.instanceCount);\r\n          }\r\n        }\r\n      }\r\n\r\n    };\r\n\r\n    /**\r\n     * Undocumented/internal: Returns the autoPlay boolean.\r\n     *\r\n     * @return {boolean} The current autoPlay value\r\n     */\r\n\r\n    this.getAutoPlay = function() {\r\n\r\n      return s._iO.autoPlay;\r\n\r\n    };\r\n\r\n    /**\r\n     * Sets the playback rate of a sound (HTML5-only.)\r\n     *\r\n     * @param {number} playbackRate (+/-)\r\n     * @return {SMSound} The SMSound object\r\n     */\r\n\r\n    this.setPlaybackRate = function(playbackRate) {\r\n\r\n      // Per Mozilla, limit acceptable values to prevent playback from stopping (unless allowOverride is truthy.)\r\n      // https://developer.mozilla.org/en-US/Apps/Build/Audio_and_video_delivery/WebAudio_playbackRate_explained\r\n      var normalizedRate = Math.max(0.5, Math.min(4, playbackRate));\r\n\r\n      // <d>\r\n      if (normalizedRate !== playbackRate) {\r\n        sm2._wD(s.id + ': setPlaybackRate(' + playbackRate + '): limiting rate to ' + normalizedRate, 2);\r\n      }\r\n      // </d>\r\n\r\n      if (s.isHTML5) {\r\n        try {\r\n          s._iO.playbackRate = normalizedRate;\r\n          s._a.playbackRate = normalizedRate;\r\n        } catch(e) {\r\n          sm2._wD(s.id + ': setPlaybackRate(' + normalizedRate + ') failed: ' + e.message, 2);\r\n        }\r\n      }\r\n\r\n      return s;\r\n\r\n    };\r\n\r\n    /**\r\n     * Sets the position of a sound.\r\n     *\r\n     * @param {number} nMsecOffset Position (milliseconds)\r\n     * @return {SMSound} The SMSound object\r\n     */\r\n\r\n    this.setPosition = function(nMsecOffset) {\r\n\r\n      if (nMsecOffset === _undefined) {\r\n        nMsecOffset = 0;\r\n      }\r\n\r\n      var position, position1K,\r\n          // Use the duration from the instance options, if we don't have a track duration yet.\r\n          // position >= 0 and <= current available (loaded) duration\r\n          offset = (s.isHTML5 ? Math.max(nMsecOffset, 0) : Math.min(s.duration || s._iO.duration, Math.max(nMsecOffset, 0)));\r\n\r\n      s.position = offset;\r\n      position1K = s.position / msecScale;\r\n      s._resetOnPosition(s.position);\r\n      s._iO.position = offset;\r\n\r\n      if (!s.isHTML5) {\r\n\r\n        position = (fV === 9 ? s.position : position1K);\r\n\r\n        if (s.readyState && s.readyState !== 2) {\r\n          // if paused or not playing, will not resume (by playing)\r\n          flash._setPosition(s.id, position, (s.paused || !s.playState), s._iO.multiShot);\r\n        }\r\n\r\n      } else if (s._a) {\r\n\r\n        // Set the position in the canplay handler if the sound is not ready yet\r\n        if (s._html5_canplay) {\r\n\r\n          if (s._a.currentTime.toFixed(3) !== position1K.toFixed(3)) {\r\n\r\n            /**\r\n             * DOM/JS errors/exceptions to watch out for:\r\n             * if seek is beyond (loaded?) position, \"DOM exception 11\"\r\n             * \"INDEX_SIZE_ERR\": DOM exception 1\r\n             */\r\n            sm2._wD(s.id + ': setPosition(' + position1K + ')');\r\n\r\n            try {\r\n              s._a.currentTime = position1K;\r\n              if (s.playState === 0 || s.paused) {\r\n                // allow seek without auto-play/resume\r\n                s._a.pause();\r\n              }\r\n            } catch(e) {\r\n              sm2._wD(s.id + ': setPosition(' + position1K + ') failed: ' + e.message, 2);\r\n            }\r\n\r\n          }\r\n\r\n        } else if (position1K) {\r\n\r\n          // warn on non-zero seek attempts\r\n          sm2._wD(s.id + ': setPosition(' + position1K + '): Cannot seek yet, sound not ready', 2);\r\n          return s;\r\n\r\n        }\r\n\r\n        if (s.paused) {\r\n\r\n          // if paused, refresh UI right away by forcing update\r\n          s._onTimer(true);\r\n\r\n        }\r\n\r\n      }\r\n\r\n      return s;\r\n\r\n    };\r\n\r\n    /**\r\n     * Pauses sound playback.\r\n     *\r\n     * @return {SMSound} The SMSound object\r\n     */\r\n\r\n    this.pause = function(_bCallFlash) {\r\n\r\n      if (s.paused || (s.playState === 0 && s.readyState !== 1)) return s;\r\n\r\n      sm2._wD(s.id + ': pause()');\r\n      s.paused = true;\r\n\r\n      if (!s.isHTML5) {\r\n        if (_bCallFlash || _bCallFlash === _undefined) {\r\n          flash._pause(s.id, s._iO.multiShot);\r\n        }\r\n      } else {\r\n        s._setup_html5().pause();\r\n        stop_html5_timer();\r\n      }\r\n\r\n      if (s._iO.onpause) {\r\n        s._iO.onpause.apply(s);\r\n      }\r\n\r\n      return s;\r\n\r\n    };\r\n\r\n    /**\r\n     * Resumes sound playback.\r\n     *\r\n     * @return {SMSound} The SMSound object\r\n     */\r\n\r\n    /**\r\n     * When auto-loaded streams pause on buffer full they have a playState of 0.\r\n     * We need to make sure that the playState is set to 1 when these streams \"resume\".\r\n     * When a paused stream is resumed, we need to trigger the onplay() callback if it\r\n     * hasn't been called already. In this case since the sound is being played for the\r\n     * first time, I think it's more appropriate to call onplay() rather than onresume().\r\n     */\r\n\r\n    this.resume = function() {\r\n\r\n      var instanceOptions = s._iO;\r\n\r\n      if (!s.paused) return s;\r\n\r\n      sm2._wD(s.id + ': resume()');\r\n      s.paused = false;\r\n      s.playState = 1;\r\n\r\n      if (!s.isHTML5) {\r\n\r\n        if (instanceOptions.isMovieStar && !instanceOptions.serverURL) {\r\n          // Bizarre Webkit bug (Chrome reported via 8tracks.com dudes): AAC content paused for 30+ seconds(?) will not resume without a reposition.\r\n          s.setPosition(s.position);\r\n        }\r\n\r\n        // flash method is toggle-based (pause/resume)\r\n        flash._pause(s.id, instanceOptions.multiShot);\r\n\r\n      } else {\r\n\r\n        s._setup_html5().play();\r\n        start_html5_timer();\r\n\r\n      }\r\n\r\n      if (!onplay_called && instanceOptions.onplay) {\r\n\r\n        instanceOptions.onplay.apply(s);\r\n        onplay_called = true;\r\n\r\n      } else if (instanceOptions.onresume) {\r\n\r\n        instanceOptions.onresume.apply(s);\r\n\r\n      }\r\n\r\n      return s;\r\n\r\n    };\r\n\r\n    /**\r\n     * Toggles sound playback.\r\n     *\r\n     * @return {SMSound} The SMSound object\r\n     */\r\n\r\n    this.togglePause = function() {\r\n\r\n      sm2._wD(s.id + ': togglePause()');\r\n\r\n      if (s.playState === 0) {\r\n        s.play({\r\n          position: (fV === 9 && !s.isHTML5 ? s.position : s.position / msecScale)\r\n        });\r\n        return s;\r\n      }\r\n\r\n      if (s.paused) {\r\n        s.resume();\r\n      } else {\r\n        s.pause();\r\n      }\r\n\r\n      return s;\r\n\r\n    };\r\n\r\n    /**\r\n     * Sets the panning (L-R) effect.\r\n     *\r\n     * @param {number} nPan The pan value (-100 to 100)\r\n     * @return {SMSound} The SMSound object\r\n     */\r\n\r\n    this.setPan = function(nPan, bInstanceOnly) {\r\n\r\n      if (nPan === _undefined) {\r\n        nPan = 0;\r\n      }\r\n\r\n      if (bInstanceOnly === _undefined) {\r\n        bInstanceOnly = false;\r\n      }\r\n\r\n      if (!s.isHTML5) {\r\n        flash._setPan(s.id, nPan);\r\n      } // else { no HTML5 pan? }\r\n\r\n      s._iO.pan = nPan;\r\n\r\n      if (!bInstanceOnly) {\r\n        s.pan = nPan;\r\n        s.options.pan = nPan;\r\n      }\r\n\r\n      return s;\r\n\r\n    };\r\n\r\n    /**\r\n     * Sets the volume.\r\n     *\r\n     * @param {number} nVol The volume value (0 to 100)\r\n     * @return {SMSound} The SMSound object\r\n     */\r\n\r\n    this.setVolume = function(nVol, _bInstanceOnly) {\r\n\r\n      /**\r\n       * Note: Setting volume has no effect on iOS \"special snowflake\" devices.\r\n       * Hardware volume control overrides software, and volume\r\n       * will always return 1 per Apple docs. (iOS 4 + 5.)\r\n       * http://developer.apple.com/library/safari/documentation/AudioVideo/Conceptual/HTML-canvas-guide/AddingSoundtoCanvasAnimations/AddingSoundtoCanvasAnimations.html\r\n       */\r\n\r\n      if (nVol === _undefined) {\r\n        nVol = 100;\r\n      }\r\n\r\n      if (_bInstanceOnly === _undefined) {\r\n        _bInstanceOnly = false;\r\n      }\r\n\r\n      if (!s.isHTML5) {\r\n\r\n        flash._setVolume(s.id, (sm2.muted && !s.muted) || s.muted ? 0 : nVol);\r\n\r\n      } else if (s._a) {\r\n\r\n        if (sm2.muted && !s.muted) {\r\n          s.muted = true;\r\n          s._a.muted = true;\r\n        }\r\n\r\n        // valid range for native HTML5 Audio(): 0-1\r\n        s._a.volume = Math.max(0, Math.min(1, nVol / 100));\r\n\r\n      }\r\n\r\n      s._iO.volume = nVol;\r\n\r\n      if (!_bInstanceOnly) {\r\n        s.volume = nVol;\r\n        s.options.volume = nVol;\r\n      }\r\n\r\n      return s;\r\n\r\n    };\r\n\r\n    /**\r\n     * Mutes the sound.\r\n     *\r\n     * @return {SMSound} The SMSound object\r\n     */\r\n\r\n    this.mute = function() {\r\n\r\n      s.muted = true;\r\n\r\n      if (!s.isHTML5) {\r\n        flash._setVolume(s.id, 0);\r\n      } else if (s._a) {\r\n        s._a.muted = true;\r\n      }\r\n\r\n      return s;\r\n\r\n    };\r\n\r\n    /**\r\n     * Unmutes the sound.\r\n     *\r\n     * @return {SMSound} The SMSound object\r\n     */\r\n\r\n    this.unmute = function() {\r\n\r\n      s.muted = false;\r\n      var hasIO = (s._iO.volume !== _undefined);\r\n\r\n      if (!s.isHTML5) {\r\n        flash._setVolume(s.id, hasIO ? s._iO.volume : s.options.volume);\r\n      } else if (s._a) {\r\n        s._a.muted = false;\r\n      }\r\n\r\n      return s;\r\n\r\n    };\r\n\r\n    /**\r\n     * Toggles the muted state of a sound.\r\n     *\r\n     * @return {SMSound} The SMSound object\r\n     */\r\n\r\n    this.toggleMute = function() {\r\n\r\n      return (s.muted ? s.unmute() : s.mute());\r\n\r\n    };\r\n\r\n    /**\r\n     * Registers a callback to be fired when a sound reaches a given position during playback.\r\n     *\r\n     * @param {number} nPosition The position to watch for\r\n     * @param {function} oMethod The relevant callback to fire\r\n     * @param {object} oScope Optional: The scope to apply the callback to\r\n     * @return {SMSound} The SMSound object\r\n     */\r\n\r\n    this.onPosition = function(nPosition, oMethod, oScope) {\r\n\r\n      // TODO: basic dupe checking?\r\n\r\n      onPositionItems.push({\r\n        position: parseInt(nPosition, 10),\r\n        method: oMethod,\r\n        scope: (oScope !== _undefined ? oScope : s),\r\n        fired: false\r\n      });\r\n\r\n      return s;\r\n\r\n    };\r\n\r\n    // legacy/backwards-compability: lower-case method name\r\n    this.onposition = this.onPosition;\r\n\r\n    /**\r\n     * Removes registered callback(s) from a sound, by position and/or callback.\r\n     *\r\n     * @param {number} nPosition The position to clear callback(s) for\r\n     * @param {function} oMethod Optional: Identify one callback to be removed when multiple listeners exist for one position\r\n     * @return {SMSound} The SMSound object\r\n     */\r\n\r\n    this.clearOnPosition = function(nPosition, oMethod) {\r\n\r\n      var i;\r\n\r\n      nPosition = parseInt(nPosition, 10);\r\n\r\n      if (isNaN(nPosition)) {\r\n        // safety check\r\n        return;\r\n      }\r\n\r\n      for (i = 0; i < onPositionItems.length; i++) {\r\n\r\n        if (nPosition === onPositionItems[i].position) {\r\n          // remove this item if no method was specified, or, if the method matches\r\n\r\n          if (!oMethod || (oMethod === onPositionItems[i].method)) {\r\n\r\n            if (onPositionItems[i].fired) {\r\n              // decrement \"fired\" counter, too\r\n              onPositionFired--;\r\n            }\r\n\r\n            onPositionItems.splice(i, 1);\r\n\r\n          }\r\n\r\n        }\r\n\r\n      }\r\n\r\n    };\r\n\r\n    this._processOnPosition = function() {\r\n\r\n      var i, item, j = onPositionItems.length;\r\n\r\n      if (!j || !s.playState || onPositionFired >= j) return false;\r\n\r\n      for (i = j - 1; i >= 0; i--) {\r\n\r\n        item = onPositionItems[i];\r\n\r\n        if (!item.fired && s.position >= item.position) {\r\n\r\n          item.fired = true;\r\n          onPositionFired++;\r\n          item.method.apply(item.scope, [item.position]);\r\n\r\n          //  reset j -- onPositionItems.length can be changed in the item callback above... occasionally breaking the loop.\r\n          j = onPositionItems.length;\r\n\r\n        }\r\n\r\n      }\r\n\r\n      return true;\r\n\r\n    };\r\n\r\n    this._resetOnPosition = function(nPosition) {\r\n\r\n      // reset \"fired\" for items interested in this position\r\n      var i, item, j = onPositionItems.length;\r\n\r\n      if (!j) return false;\r\n\r\n      for (i = j - 1; i >= 0; i--) {\r\n\r\n        item = onPositionItems[i];\r\n\r\n        if (item.fired && nPosition <= item.position) {\r\n          item.fired = false;\r\n          onPositionFired--;\r\n        }\r\n\r\n      }\r\n\r\n      return true;\r\n\r\n    };\r\n\r\n    /**\r\n     * SMSound() private internals\r\n     * --------------------------------\r\n     */\r\n\r\n    applyFromTo = function() {\r\n\r\n      var instanceOptions = s._iO,\r\n          f = instanceOptions.from,\r\n          t = instanceOptions.to,\r\n          start, end;\r\n\r\n      end = function() {\r\n\r\n        // end has been reached.\r\n        sm2._wD(s.id + ': \"To\" time of ' + t + ' reached.');\r\n\r\n        // detach listener\r\n        s.clearOnPosition(t, end);\r\n\r\n        // stop should clear this, too\r\n        s.stop();\r\n\r\n      };\r\n\r\n      start = function() {\r\n\r\n        sm2._wD(s.id + ': Playing \"from\" ' + f);\r\n\r\n        // add listener for end\r\n        if (t !== null && !isNaN(t)) {\r\n          s.onPosition(t, end);\r\n        }\r\n\r\n      };\r\n\r\n      if (f !== null && !isNaN(f)) {\r\n\r\n        // apply to instance options, guaranteeing correct start position.\r\n        instanceOptions.position = f;\r\n\r\n        // multiShot timing can't be tracked, so prevent that.\r\n        instanceOptions.multiShot = false;\r\n\r\n        start();\r\n\r\n      }\r\n\r\n      // return updated instanceOptions including starting position\r\n      return instanceOptions;\r\n\r\n    };\r\n\r\n    attachOnPosition = function() {\r\n\r\n      var item,\r\n          op = s._iO.onposition;\r\n\r\n      // attach onposition things, if any, now.\r\n\r\n      if (op) {\r\n\r\n        for (item in op) {\r\n          if (op.hasOwnProperty(item)) {\r\n            s.onPosition(parseInt(item, 10), op[item]);\r\n          }\r\n        }\r\n\r\n      }\r\n\r\n    };\r\n\r\n    detachOnPosition = function() {\r\n\r\n      var item,\r\n          op = s._iO.onposition;\r\n\r\n      // detach any onposition()-style listeners.\r\n\r\n      if (op) {\r\n\r\n        for (item in op) {\r\n          if (op.hasOwnProperty(item)) {\r\n            s.clearOnPosition(parseInt(item, 10));\r\n          }\r\n        }\r\n\r\n      }\r\n\r\n    };\r\n\r\n    start_html5_timer = function() {\r\n\r\n      if (s.isHTML5) {\r\n        startTimer(s);\r\n      }\r\n\r\n    };\r\n\r\n    stop_html5_timer = function() {\r\n\r\n      if (s.isHTML5) {\r\n        stopTimer(s);\r\n      }\r\n\r\n    };\r\n\r\n    resetProperties = function(retainPosition) {\r\n\r\n      if (!retainPosition) {\r\n        onPositionItems = [];\r\n        onPositionFired = 0;\r\n      }\r\n\r\n      onplay_called = false;\r\n\r\n      s._hasTimer = null;\r\n      s._a = null;\r\n      s._html5_canplay = false;\r\n      s.bytesLoaded = null;\r\n      s.bytesTotal = null;\r\n      s.duration = (s._iO && s._iO.duration ? s._iO.duration : null);\r\n      s.durationEstimate = null;\r\n      s.buffered = [];\r\n\r\n      // legacy: 1D array\r\n      s.eqData = [];\r\n\r\n      s.eqData.left = [];\r\n      s.eqData.right = [];\r\n\r\n      s.failures = 0;\r\n      s.isBuffering = false;\r\n      s.instanceOptions = {};\r\n      s.instanceCount = 0;\r\n      s.loaded = false;\r\n      s.metadata = {};\r\n\r\n      // 0 = uninitialised, 1 = loading, 2 = failed/error, 3 = loaded/success\r\n      s.readyState = 0;\r\n\r\n      s.muted = false;\r\n      s.paused = false;\r\n\r\n      s.peakData = {\r\n        left: 0,\r\n        right: 0\r\n      };\r\n\r\n      s.waveformData = {\r\n        left: [],\r\n        right: []\r\n      };\r\n\r\n      s.playState = 0;\r\n      s.position = null;\r\n\r\n      s.id3 = {};\r\n\r\n    };\r\n\r\n    resetProperties();\r\n\r\n    /**\r\n     * Pseudo-private SMSound internals\r\n     * --------------------------------\r\n     */\r\n\r\n    this._onTimer = function(bForce) {\r\n\r\n      /**\r\n       * HTML5-only _whileplaying() etc.\r\n       * called from both HTML5 native events, and polling/interval-based timers\r\n       * mimics flash and fires only when time/duration change, so as to be polling-friendly\r\n       */\r\n\r\n      var duration, isNew = false, time, x = {};\r\n\r\n      if (s._hasTimer || bForce) {\r\n\r\n        // TODO: May not need to track readyState (1 = loading)\r\n\r\n        if (s._a && (bForce || ((s.playState > 0 || s.readyState === 1) && !s.paused))) {\r\n\r\n          duration = s._get_html5_duration();\r\n\r\n          if (duration !== lastHTML5State.duration) {\r\n\r\n            lastHTML5State.duration = duration;\r\n            s.duration = duration;\r\n            isNew = true;\r\n\r\n          }\r\n\r\n          // TODO: investigate why this goes wack if not set/re-set each time.\r\n          s.durationEstimate = s.duration;\r\n\r\n          time = (s._a.currentTime * msecScale || 0);\r\n\r\n          if (time !== lastHTML5State.time) {\r\n\r\n            lastHTML5State.time = time;\r\n            isNew = true;\r\n\r\n          }\r\n\r\n          if (isNew || bForce) {\r\n\r\n            s._whileplaying(time, x, x, x, x);\r\n\r\n          }\r\n\r\n        }/* else {\r\n\r\n          // sm2._wD('_onTimer: Warn for \"'+s.id+'\": '+(!s._a?'Could not find element. ':'')+(s.playState === 0?'playState bad, 0?':'playState = '+s.playState+', OK'));\r\n\r\n          return false;\r\n\r\n        }*/\r\n\r\n      }\r\n\r\n      return isNew;\r\n\r\n    };\r\n\r\n    this._get_html5_duration = function() {\r\n\r\n      var instanceOptions = s._iO,\r\n          // if audio object exists, use its duration - else, instance option duration (if provided - it's a hack, really, and should be retired) OR null\r\n          d = (s._a && s._a.duration ? s._a.duration * msecScale : (instanceOptions && instanceOptions.duration ? instanceOptions.duration : null)),\r\n          result = (d && !isNaN(d) && d !== Infinity ? d : null);\r\n\r\n      return result;\r\n\r\n    };\r\n\r\n    this._apply_loop = function(a, nLoops) {\r\n\r\n      /**\r\n       * boolean instead of \"loop\", for webkit? - spec says string. http://www.w3.org/TR/html-markup/audio.html#audio.attrs.loop\r\n       * note that loop is either off or infinite under HTML5, unlike Flash which allows arbitrary loop counts to be specified.\r\n       */\r\n\r\n      // <d>\r\n      if (!a.loop && nLoops > 1) {\r\n        sm2._wD('Note: Native HTML5 looping is infinite.', 1);\r\n      }\r\n      // </d>\r\n\r\n      a.loop = (nLoops > 1 ? 'loop' : '');\r\n\r\n    };\r\n\r\n    this._setup_html5 = function(options) {\r\n\r\n      var instanceOptions = mixin(s._iO, options),\r\n          a = useGlobalHTML5Audio ? globalHTML5Audio : s._a,\r\n          dURL = decodeURI(instanceOptions.url),\r\n          sameURL;\r\n\r\n      /**\r\n       * \"First things first, I, Poppa...\" (reset the previous state of the old sound, if playing)\r\n       * Fixes case with devices that can only play one sound at a time\r\n       * Otherwise, other sounds in mid-play will be terminated without warning and in a stuck state\r\n       */\r\n\r\n      if (useGlobalHTML5Audio) {\r\n\r\n        if (dURL === decodeURI(lastGlobalHTML5URL)) {\r\n          // global HTML5 audio: re-use of URL\r\n          sameURL = true;\r\n        }\r\n\r\n      } else if (dURL === decodeURI(lastURL)) {\r\n\r\n        // options URL is the same as the \"last\" URL, and we used (loaded) it\r\n        sameURL = true;\r\n\r\n      }\r\n\r\n      if (a) {\r\n\r\n        if (a._s) {\r\n\r\n          if (useGlobalHTML5Audio) {\r\n\r\n            if (a._s && a._s.playState && !sameURL) {\r\n\r\n              // global HTML5 audio case, and loading a new URL. stop the currently-playing one.\r\n              a._s.stop();\r\n\r\n            }\r\n\r\n          } else if (!useGlobalHTML5Audio && dURL === decodeURI(lastURL)) {\r\n\r\n            // non-global HTML5 reuse case: same url, ignore request\r\n            s._apply_loop(a, instanceOptions.loops);\r\n\r\n            return a;\r\n\r\n          }\r\n\r\n        }\r\n\r\n        if (!sameURL) {\r\n\r\n          // don't retain onPosition() stuff with new URLs.\r\n\r\n          if (lastURL) {\r\n            resetProperties(false);\r\n          }\r\n\r\n          // assign new HTML5 URL\r\n\r\n          a.src = instanceOptions.url;\r\n\r\n          s.url = instanceOptions.url;\r\n\r\n          lastURL = instanceOptions.url;\r\n\r\n          lastGlobalHTML5URL = instanceOptions.url;\r\n\r\n          a._called_load = false;\r\n\r\n        }\r\n\r\n      } else {\r\n\r\n        if (instanceOptions.autoLoad || instanceOptions.autoPlay) {\r\n\r\n          s._a = new Audio(instanceOptions.url);\r\n          s._a.load();\r\n\r\n        } else {\r\n\r\n          // null for stupid Opera 9.64 case\r\n          s._a = (isOpera && opera.version() < 10 ? new Audio(null) : new Audio());\r\n\r\n        }\r\n\r\n        // assign local reference\r\n        a = s._a;\r\n\r\n        a._called_load = false;\r\n\r\n        if (useGlobalHTML5Audio) {\r\n\r\n          globalHTML5Audio = a;\r\n\r\n        }\r\n\r\n      }\r\n\r\n      s.isHTML5 = true;\r\n\r\n      // store a ref on the track\r\n      s._a = a;\r\n\r\n      // store a ref on the audio\r\n      a._s = s;\r\n\r\n      add_html5_events();\r\n\r\n      s._apply_loop(a, instanceOptions.loops);\r\n\r\n      if (instanceOptions.autoLoad || instanceOptions.autoPlay) {\r\n\r\n        s.load();\r\n\r\n      } else {\r\n\r\n        // early HTML5 implementation (non-standard)\r\n        a.autobuffer = false;\r\n\r\n        // standard ('none' is also an option.)\r\n        a.preload = 'auto';\r\n\r\n      }\r\n\r\n      return a;\r\n\r\n    };\r\n\r\n    add_html5_events = function() {\r\n\r\n      if (s._a._added_events) return false;\r\n\r\n      var f;\r\n\r\n      function add(oEvt, oFn, bCapture) {\r\n        return s._a ? s._a.addEventListener(oEvt, oFn, bCapture || false) : null;\r\n      }\r\n\r\n      s._a._added_events = true;\r\n\r\n      for (f in html5_events) {\r\n        if (html5_events.hasOwnProperty(f)) {\r\n          add(f, html5_events[f]);\r\n        }\r\n      }\r\n\r\n      return true;\r\n\r\n    };\r\n\r\n    remove_html5_events = function() {\r\n\r\n      // Remove event listeners\r\n\r\n      var f;\r\n\r\n      function remove(oEvt, oFn, bCapture) {\r\n        return (s._a ? s._a.removeEventListener(oEvt, oFn, bCapture || false) : null);\r\n      }\r\n\r\n      sm2._wD(s.id + ': Removing event listeners');\r\n      s._a._added_events = false;\r\n\r\n      for (f in html5_events) {\r\n        if (html5_events.hasOwnProperty(f)) {\r\n          remove(f, html5_events[f]);\r\n        }\r\n      }\r\n\r\n    };\r\n\r\n    /**\r\n     * Pseudo-private event internals\r\n     * ------------------------------\r\n     */\r\n\r\n    this._onload = function(nSuccess) {\r\n\r\n      var fN,\r\n          // check for duration to prevent false positives from flash 8 when loading from cache.\r\n          loadOK = !!nSuccess || (!s.isHTML5 && fV === 8 && s.duration);\r\n\r\n      // <d>\r\n      fN = s.id + ': ';\r\n      sm2._wD(fN + (loadOK ? 'onload()' : 'Failed to load / invalid sound?' + (!s.duration ? ' Zero-length duration reported.' : ' -') + ' (' + s.url + ')'), (loadOK ? 1 : 2));\r\n\r\n      if (!loadOK && !s.isHTML5) {\r\n        if (sm2.sandbox.noRemote === true) {\r\n          sm2._wD(fN + str('noNet'), 1);\r\n        }\r\n        if (sm2.sandbox.noLocal === true) {\r\n          sm2._wD(fN + str('noLocal'), 1);\r\n        }\r\n      }\r\n      // </d>\r\n\r\n      s.loaded = loadOK;\r\n      s.readyState = (loadOK ? 3 : 2);\r\n      s._onbufferchange(0);\r\n\r\n      if (!loadOK && !s.isHTML5) {\r\n        // note: no error code from Flash.\r\n        s._onerror();\r\n      }\r\n\r\n      if (s._iO.onload) {\r\n        wrapCallback(s, function() {\r\n          s._iO.onload.apply(s, [loadOK]);\r\n        });\r\n      }\r\n\r\n      return true;\r\n\r\n    };\r\n\r\n    this._onerror = function(errorCode, description) {\r\n\r\n      // https://html.spec.whatwg.org/multipage/embedded-content.html#error-codes\r\n      if (s._iO.onerror) {\r\n        wrapCallback(s, function() {\r\n          s._iO.onerror.apply(s, [errorCode, description]);\r\n        });\r\n      }\r\n\r\n    };\r\n\r\n    this._onbufferchange = function(nIsBuffering) {\r\n\r\n      // ignore if not playing\r\n      if (s.playState === 0) return false;\r\n\r\n      if ((nIsBuffering && s.isBuffering) || (!nIsBuffering && !s.isBuffering)) return false;\r\n\r\n      s.isBuffering = (nIsBuffering === 1);\r\n\r\n      if (s._iO.onbufferchange) {\r\n        sm2._wD(s.id + ': Buffer state change: ' + nIsBuffering);\r\n        s._iO.onbufferchange.apply(s, [nIsBuffering]);\r\n      }\r\n\r\n      return true;\r\n\r\n    };\r\n\r\n    /**\r\n     * Playback may have stopped due to buffering, or related reason.\r\n     * This state can be encountered on iOS < 6 when auto-play is blocked.\r\n     */\r\n\r\n    this._onsuspend = function() {\r\n\r\n      if (s._iO.onsuspend) {\r\n        sm2._wD(s.id + ': Playback suspended');\r\n        s._iO.onsuspend.apply(s);\r\n      }\r\n\r\n      return true;\r\n\r\n    };\r\n\r\n    /**\r\n     * flash 9/movieStar + RTMP-only method, should fire only once at most\r\n     * at this point we just recreate failed sounds rather than trying to reconnect\r\n     */\r\n\r\n    this._onfailure = function(msg, level, code) {\r\n\r\n      s.failures++;\r\n      sm2._wD(s.id + ': Failure (' + s.failures + '): ' + msg);\r\n\r\n      if (s._iO.onfailure && s.failures === 1) {\r\n        s._iO.onfailure(msg, level, code);\r\n      } else {\r\n        sm2._wD(s.id + ': Ignoring failure');\r\n      }\r\n\r\n    };\r\n\r\n    /**\r\n     * flash 9/movieStar + RTMP-only method for unhandled warnings/exceptions from Flash\r\n     * e.g., RTMP \"method missing\" warning (non-fatal) for getStreamLength on server\r\n     */\r\n\r\n    this._onwarning = function(msg, level, code) {\r\n\r\n      if (s._iO.onwarning) {\r\n        s._iO.onwarning(msg, level, code);\r\n      }\r\n\r\n    };\r\n\r\n    this._onfinish = function() {\r\n\r\n      // store local copy before it gets trashed...\r\n      var io_onfinish = s._iO.onfinish;\r\n\r\n      s._onbufferchange(0);\r\n      s._resetOnPosition(0);\r\n\r\n      // reset some state items\r\n      if (s.instanceCount) {\r\n\r\n        s.instanceCount--;\r\n\r\n        if (!s.instanceCount) {\r\n\r\n          // remove onPosition listeners, if any\r\n          detachOnPosition();\r\n\r\n          // reset instance options\r\n          s.playState = 0;\r\n          s.paused = false;\r\n          s.instanceCount = 0;\r\n          s.instanceOptions = {};\r\n          s._iO = {};\r\n          stop_html5_timer();\r\n\r\n          // reset position, too\r\n          if (s.isHTML5) {\r\n            s.position = 0;\r\n          }\r\n\r\n        }\r\n\r\n        if (!s.instanceCount || s._iO.multiShotEvents) {\r\n          // fire onfinish for last, or every instance\r\n          if (io_onfinish) {\r\n            sm2._wD(s.id + ': onfinish()');\r\n            wrapCallback(s, function() {\r\n              io_onfinish.apply(s);\r\n            });\r\n          }\r\n        }\r\n\r\n      }\r\n\r\n    };\r\n\r\n    this._whileloading = function(nBytesLoaded, nBytesTotal, nDuration, nBufferLength) {\r\n\r\n      var instanceOptions = s._iO;\r\n\r\n      s.bytesLoaded = nBytesLoaded;\r\n      s.bytesTotal = nBytesTotal;\r\n      s.duration = Math.floor(nDuration);\r\n      s.bufferLength = nBufferLength;\r\n\r\n      if (!s.isHTML5 && !instanceOptions.isMovieStar) {\r\n\r\n        if (instanceOptions.duration) {\r\n          // use duration from options, if specified and larger. nobody should be specifying duration in options, actually, and it should be retired.\r\n          s.durationEstimate = (s.duration > instanceOptions.duration) ? s.duration : instanceOptions.duration;\r\n        } else {\r\n          s.durationEstimate = parseInt((s.bytesTotal / s.bytesLoaded) * s.duration, 10);\r\n        }\r\n\r\n      } else {\r\n\r\n        s.durationEstimate = s.duration;\r\n\r\n      }\r\n\r\n      // for flash, reflect sequential-load-style buffering\r\n      if (!s.isHTML5) {\r\n        s.buffered = [{\r\n          start: 0,\r\n          end: s.duration\r\n        }];\r\n      }\r\n\r\n      // allow whileloading to fire even if \"load\" fired under HTML5, due to HTTP range/partials\r\n      if ((s.readyState !== 3 || s.isHTML5) && instanceOptions.whileloading) {\r\n        instanceOptions.whileloading.apply(s);\r\n      }\r\n\r\n    };\r\n\r\n    this._whileplaying = function(nPosition, oPeakData, oWaveformDataLeft, oWaveformDataRight, oEQData) {\r\n\r\n      var instanceOptions = s._iO,\r\n          eqLeft;\r\n\r\n      // flash safety net\r\n      if (isNaN(nPosition) || nPosition === null) return false;\r\n\r\n      // Safari HTML5 play() may return small -ve values when starting from position: 0, eg. -50.120396875. Unexpected/invalid per W3, I think. Normalize to 0.\r\n      s.position = Math.max(0, nPosition);\r\n\r\n      s._processOnPosition();\r\n\r\n      if (!s.isHTML5 && fV > 8) {\r\n\r\n        if (instanceOptions.usePeakData && oPeakData !== _undefined && oPeakData) {\r\n          s.peakData = {\r\n            left: oPeakData.leftPeak,\r\n            right: oPeakData.rightPeak\r\n          };\r\n        }\r\n\r\n        if (instanceOptions.useWaveformData && oWaveformDataLeft !== _undefined && oWaveformDataLeft) {\r\n          s.waveformData = {\r\n            left: oWaveformDataLeft.split(','),\r\n            right: oWaveformDataRight.split(',')\r\n          };\r\n        }\r\n\r\n        if (instanceOptions.useEQData) {\r\n          if (oEQData !== _undefined && oEQData && oEQData.leftEQ) {\r\n            eqLeft = oEQData.leftEQ.split(',');\r\n            s.eqData = eqLeft;\r\n            s.eqData.left = eqLeft;\r\n            if (oEQData.rightEQ !== _undefined && oEQData.rightEQ) {\r\n              s.eqData.right = oEQData.rightEQ.split(',');\r\n            }\r\n          }\r\n        }\r\n\r\n      }\r\n\r\n      if (s.playState === 1) {\r\n\r\n        // special case/hack: ensure buffering is false if loading from cache (and not yet started)\r\n        if (!s.isHTML5 && fV === 8 && !s.position && s.isBuffering) {\r\n          s._onbufferchange(0);\r\n        }\r\n\r\n        if (instanceOptions.whileplaying) {\r\n          // flash may call after actual finish\r\n          instanceOptions.whileplaying.apply(s);\r\n        }\r\n\r\n      }\r\n\r\n      return true;\r\n\r\n    };\r\n\r\n    this._oncaptiondata = function(oData) {\r\n\r\n      /**\r\n       * internal: flash 9 + NetStream (MovieStar/RTMP-only) feature\r\n       *\r\n       * @param {object} oData\r\n       */\r\n\r\n      sm2._wD(s.id + ': Caption data received.');\r\n\r\n      s.captiondata = oData;\r\n\r\n      if (s._iO.oncaptiondata) {\r\n        s._iO.oncaptiondata.apply(s, [oData]);\r\n      }\r\n\r\n    };\r\n\r\n    this._onmetadata = function(oMDProps, oMDData) {\r\n\r\n      /**\r\n       * internal: flash 9 + NetStream (MovieStar/RTMP-only) feature\r\n       * RTMP may include song title, MovieStar content may include encoding info\r\n       *\r\n       * @param {array} oMDProps (names)\r\n       * @param {array} oMDData (values)\r\n       */\r\n\r\n      sm2._wD(s.id + ': Metadata received.');\r\n\r\n      var oData = {}, i, j;\r\n\r\n      for (i = 0, j = oMDProps.length; i < j; i++) {\r\n        oData[oMDProps[i]] = oMDData[i];\r\n      }\r\n\r\n      s.metadata = oData;\r\n\r\n      if (s._iO.onmetadata) {\r\n        s._iO.onmetadata.call(s, s.metadata);\r\n      }\r\n\r\n    };\r\n\r\n    this._onid3 = function(oID3Props, oID3Data) {\r\n\r\n      /**\r\n       * internal: flash 8 + flash 9 ID3 feature\r\n       * may include artist, song title etc.\r\n       *\r\n       * @param {array} oID3Props (names)\r\n       * @param {array} oID3Data (values)\r\n       */\r\n\r\n      sm2._wD(s.id + ': ID3 data received.');\r\n\r\n      var oData = [], i, j;\r\n\r\n      for (i = 0, j = oID3Props.length; i < j; i++) {\r\n        oData[oID3Props[i]] = oID3Data[i];\r\n      }\r\n\r\n      s.id3 = mixin(s.id3, oData);\r\n\r\n      if (s._iO.onid3) {\r\n        s._iO.onid3.apply(s);\r\n      }\r\n\r\n    };\r\n\r\n    // flash/RTMP-only\r\n\r\n    this._onconnect = function(bSuccess) {\r\n\r\n      bSuccess = (bSuccess === 1);\r\n      sm2._wD(s.id + ': ' + (bSuccess ? 'Connected.' : 'Failed to connect? - ' + s.url), (bSuccess ? 1 : 2));\r\n      s.connected = bSuccess;\r\n\r\n      if (bSuccess) {\r\n\r\n        s.failures = 0;\r\n\r\n        if (idCheck(s.id)) {\r\n          if (s.getAutoPlay()) {\r\n            // only update the play state if auto playing\r\n            s.play(_undefined, s.getAutoPlay());\r\n          } else if (s._iO.autoLoad) {\r\n            s.load();\r\n          }\r\n        }\r\n\r\n        if (s._iO.onconnect) {\r\n          s._iO.onconnect.apply(s, [bSuccess]);\r\n        }\r\n\r\n      }\r\n\r\n    };\r\n\r\n    this._ondataerror = function(sError) {\r\n\r\n      // flash 9 wave/eq data handler\r\n      // hack: called at start, and end from flash at/after onfinish()\r\n      if (s.playState > 0) {\r\n        sm2._wD(s.id + ': Data error: ' + sError);\r\n        if (s._iO.ondataerror) {\r\n          s._iO.ondataerror.apply(s);\r\n        }\r\n      }\r\n\r\n    };\r\n\r\n    // <d>\r\n    this._debug();\r\n    // </d>\r\n\r\n  }; // SMSound()\r\n\r\n  /**\r\n   * Private SoundManager internals\r\n   * ------------------------------\r\n   */\r\n\r\n  getDocument = function() {\r\n\r\n    return (doc.body || doc.getElementsByTagName('div')[0]);\r\n\r\n  };\r\n\r\n  id = function(sID) {\r\n\r\n    return doc.getElementById(sID);\r\n\r\n  };\r\n\r\n  mixin = function(oMain, oAdd) {\r\n\r\n    // non-destructive merge\r\n    var o1 = (oMain || {}), o2, o;\r\n\r\n    // if unspecified, o2 is the default options object\r\n    o2 = (oAdd === _undefined ? sm2.defaultOptions : oAdd);\r\n\r\n    for (o in o2) {\r\n\r\n      if (o2.hasOwnProperty(o) && o1[o] === _undefined) {\r\n\r\n        if (typeof o2[o] !== 'object' || o2[o] === null) {\r\n\r\n          // assign directly\r\n          o1[o] = o2[o];\r\n\r\n        } else {\r\n\r\n          // recurse through o2\r\n          o1[o] = mixin(o1[o], o2[o]);\r\n\r\n        }\r\n\r\n      }\r\n\r\n    }\r\n\r\n    return o1;\r\n\r\n  };\r\n\r\n  wrapCallback = function(oSound, callback) {\r\n\r\n    /**\r\n     * 03/03/2013: Fix for Flash Player 11.6.602.171 + Flash 8 (flashVersion = 8) SWF issue\r\n     * setTimeout() fix for certain SMSound callbacks like onload() and onfinish(), where subsequent calls like play() and load() fail when Flash Player 11.6.602.171 is installed, and using soundManager with flashVersion = 8 (which is the default).\r\n     * Not sure of exact cause. Suspect race condition and/or invalid (NaN-style) position argument trickling down to the next JS -> Flash _start() call, in the play() case.\r\n     * Fix: setTimeout() to yield, plus safer null / NaN checking on position argument provided to Flash.\r\n     * https://getsatisfaction.com/schillmania/topics/recent_chrome_update_seems_to_have_broken_my_sm2_audio_player\r\n     */\r\n    if (!oSound.isHTML5 && fV === 8) {\r\n      window.setTimeout(callback, 0);\r\n    } else {\r\n      callback();\r\n    }\r\n\r\n  };\r\n\r\n  // additional soundManager properties that soundManager.setup() will accept\r\n\r\n  extraOptions = {\r\n    onready: 1,\r\n    ontimeout: 1,\r\n    defaultOptions: 1,\r\n    flash9Options: 1,\r\n    movieStarOptions: 1\r\n  };\r\n\r\n  assign = function(o, oParent) {\r\n\r\n    /**\r\n     * recursive assignment of properties, soundManager.setup() helper\r\n     * allows property assignment based on whitelist\r\n     */\r\n\r\n    var i,\r\n        result = true,\r\n        hasParent = (oParent !== _undefined),\r\n        setupOptions = sm2.setupOptions,\r\n        bonusOptions = extraOptions;\r\n\r\n    // <d>\r\n\r\n    // if soundManager.setup() called, show accepted parameters.\r\n\r\n    if (o === _undefined) {\r\n\r\n      result = [];\r\n\r\n      for (i in setupOptions) {\r\n\r\n        if (setupOptions.hasOwnProperty(i)) {\r\n          result.push(i);\r\n        }\r\n\r\n      }\r\n\r\n      for (i in bonusOptions) {\r\n\r\n        if (bonusOptions.hasOwnProperty(i)) {\r\n\r\n          if (typeof sm2[i] === 'object') {\r\n            result.push(i + ': {...}');\r\n          } else if (sm2[i] instanceof Function) {\r\n            result.push(i + ': function() {...}');\r\n          } else {\r\n            result.push(i);\r\n          }\r\n\r\n        }\r\n\r\n      }\r\n\r\n      sm2._wD(str('setup', result.join(', ')));\r\n\r\n      return false;\r\n\r\n    }\r\n\r\n    // </d>\r\n\r\n    for (i in o) {\r\n\r\n      if (o.hasOwnProperty(i)) {\r\n\r\n        // if not an {object} we want to recurse through...\r\n\r\n        if (typeof o[i] !== 'object' || o[i] === null || o[i] instanceof Array || o[i] instanceof RegExp) {\r\n\r\n          // check \"allowed\" options\r\n\r\n          if (hasParent && bonusOptions[oParent] !== _undefined) {\r\n\r\n            // valid recursive / nested object option, eg., { defaultOptions: { volume: 50 } }\r\n            sm2[oParent][i] = o[i];\r\n\r\n          } else if (setupOptions[i] !== _undefined) {\r\n\r\n            // special case: assign to setupOptions object, which soundManager property references\r\n            sm2.setupOptions[i] = o[i];\r\n\r\n            // assign directly to soundManager, too\r\n            sm2[i] = o[i];\r\n\r\n          } else if (bonusOptions[i] === _undefined) {\r\n\r\n            // invalid or disallowed parameter. complain.\r\n            complain(str((sm2[i] === _undefined ? 'setupUndef' : 'setupError'), i), 2);\r\n\r\n            result = false;\r\n\r\n          } else if (sm2[i] instanceof Function) {\r\n\r\n            /**\r\n             * valid extraOptions (bonusOptions) parameter.\r\n             * is it a method, like onready/ontimeout? call it.\r\n             * multiple parameters should be in an array, eg. soundManager.setup({onready: [myHandler, myScope]});\r\n             */\r\n            sm2[i].apply(sm2, (o[i] instanceof Array ? o[i] : [o[i]]));\r\n\r\n          } else {\r\n\r\n            // good old-fashioned direct assignment\r\n            sm2[i] = o[i];\r\n\r\n          }\r\n\r\n        } else if (bonusOptions[i] === _undefined) {\r\n\r\n          // recursion case, eg., { defaultOptions: { ... } }\r\n\r\n          // invalid or disallowed parameter. complain.\r\n          complain(str((sm2[i] === _undefined ? 'setupUndef' : 'setupError'), i), 2);\r\n\r\n          result = false;\r\n\r\n        } else {\r\n\r\n          // recurse through object\r\n          return assign(o[i], i);\r\n\r\n        }\r\n\r\n      }\r\n\r\n    }\r\n\r\n    return result;\r\n\r\n  };\r\n\r\n  function preferFlashCheck(kind) {\r\n\r\n    // whether flash should play a given type\r\n    return (sm2.preferFlash && hasFlash && !sm2.ignoreFlash && (sm2.flash[kind] !== _undefined && sm2.flash[kind]));\r\n\r\n  }\r\n\r\n  /**\r\n   * Internal DOM2-level event helpers\r\n   * ---------------------------------\r\n   */\r\n\r\n  event = (function() {\r\n\r\n    // normalize event methods\r\n    var old = (window.attachEvent),\r\n    evt = {\r\n      add: (old ? 'attachEvent' : 'addEventListener'),\r\n      remove: (old ? 'detachEvent' : 'removeEventListener')\r\n    };\r\n\r\n    // normalize \"on\" event prefix, optional capture argument\r\n    function getArgs(oArgs) {\r\n\r\n      var args = slice.call(oArgs),\r\n          len = args.length;\r\n\r\n      if (old) {\r\n        // prefix\r\n        args[1] = 'on' + args[1];\r\n        if (len > 3) {\r\n          // no capture\r\n          args.pop();\r\n        }\r\n      } else if (len === 3) {\r\n        args.push(false);\r\n      }\r\n\r\n      return args;\r\n\r\n    }\r\n\r\n    function apply(args, sType) {\r\n\r\n      // normalize and call the event method, with the proper arguments\r\n      var element = args.shift(),\r\n          method = [evt[sType]];\r\n\r\n      if (old) {\r\n        // old IE can't do apply().\r\n        element[method](args[0], args[1]);\r\n      } else {\r\n        element[method].apply(element, args);\r\n      }\r\n\r\n    }\r\n\r\n    function add() {\r\n      apply(getArgs(arguments), 'add');\r\n    }\r\n\r\n    function remove() {\r\n      apply(getArgs(arguments), 'remove');\r\n    }\r\n\r\n    return {\r\n      add: add,\r\n      remove: remove\r\n    };\r\n\r\n  }());\r\n\r\n  /**\r\n   * Internal HTML5 event handling\r\n   * -----------------------------\r\n   */\r\n\r\n  function html5_event(oFn) {\r\n\r\n    // wrap html5 event handlers so we don't call them on destroyed and/or unloaded sounds\r\n\r\n    return function(e) {\r\n\r\n      var s = this._s,\r\n          result;\r\n\r\n      if (!s || !s._a) {\r\n        // <d>\r\n        if (s && s.id) {\r\n          sm2._wD(s.id + ': Ignoring ' + e.type);\r\n        } else {\r\n          sm2._wD(h5 + 'Ignoring ' + e.type);\r\n        }\r\n        // </d>\r\n        result = null;\r\n      } else {\r\n        result = oFn.call(this, e);\r\n      }\r\n\r\n      return result;\r\n\r\n    };\r\n\r\n  }\r\n\r\n  html5_events = {\r\n\r\n    // HTML5 event-name-to-handler map\r\n\r\n    abort: html5_event(function() {\r\n\r\n      sm2._wD(this._s.id + ': abort');\r\n\r\n    }),\r\n\r\n    // enough has loaded to play\r\n\r\n    canplay: html5_event(function() {\r\n\r\n      var s = this._s,\r\n          position1K;\r\n\r\n      if (s._html5_canplay) {\r\n        // this event has already fired. ignore.\r\n        return;\r\n      }\r\n\r\n      s._html5_canplay = true;\r\n      sm2._wD(s.id + ': canplay');\r\n      s._onbufferchange(0);\r\n\r\n      // position according to instance options\r\n      position1K = (s._iO.position !== _undefined && !isNaN(s._iO.position) ? s._iO.position / msecScale : null);\r\n\r\n      // set the position if position was provided before the sound loaded\r\n      if (this.currentTime !== position1K) {\r\n        sm2._wD(s.id + ': canplay: Setting position to ' + position1K);\r\n        try {\r\n          this.currentTime = position1K;\r\n        } catch(ee) {\r\n          sm2._wD(s.id + ': canplay: Setting position of ' + position1K + ' failed: ' + ee.message, 2);\r\n        }\r\n      }\r\n\r\n      // hack for HTML5 from/to case\r\n      if (s._iO._oncanplay) {\r\n        s._iO._oncanplay();\r\n      }\r\n\r\n    }),\r\n\r\n    canplaythrough: html5_event(function() {\r\n\r\n      var s = this._s;\r\n\r\n      if (!s.loaded) {\r\n        s._onbufferchange(0);\r\n        s._whileloading(s.bytesLoaded, s.bytesTotal, s._get_html5_duration());\r\n        s._onload(true);\r\n      }\r\n\r\n    }),\r\n\r\n    durationchange: html5_event(function() {\r\n\r\n      // durationchange may fire at various times, probably the safest way to capture accurate/final duration.\r\n\r\n      var s = this._s,\r\n          duration;\r\n\r\n      duration = s._get_html5_duration();\r\n\r\n      if (!isNaN(duration) && duration !== s.duration) {\r\n\r\n        sm2._wD(this._s.id + ': durationchange (' + duration + ')' + (s.duration ? ', previously ' + s.duration : ''));\r\n\r\n        s.durationEstimate = s.duration = duration;\r\n\r\n      }\r\n\r\n    }),\r\n\r\n    // TODO: Reserved for potential use\r\n    /*\r\n    emptied: html5_event(function() {\r\n\r\n      sm2._wD(this._s.id + ': emptied');\r\n\r\n    }),\r\n    */\r\n\r\n    ended: html5_event(function() {\r\n\r\n      var s = this._s;\r\n\r\n      sm2._wD(s.id + ': ended');\r\n\r\n      s._onfinish();\r\n\r\n    }),\r\n\r\n    error: html5_event(function() {\r\n\r\n      var description = (html5ErrorCodes[this.error.code] || null);\r\n      sm2._wD(this._s.id + ': HTML5 error, code ' + this.error.code + (description ? ' (' + description + ')' : ''));\r\n      this._s._onload(false);\r\n      this._s._onerror(this.error.code, description);\r\n\r\n    }),\r\n\r\n    loadeddata: html5_event(function() {\r\n\r\n      var s = this._s;\r\n\r\n      sm2._wD(s.id + ': loadeddata');\r\n\r\n      // safari seems to nicely report progress events, eventually totalling 100%\r\n      if (!s._loaded && !isSafari) {\r\n        s.duration = s._get_html5_duration();\r\n      }\r\n\r\n    }),\r\n\r\n    loadedmetadata: html5_event(function() {\r\n\r\n      sm2._wD(this._s.id + ': loadedmetadata');\r\n\r\n    }),\r\n\r\n    loadstart: html5_event(function() {\r\n\r\n      sm2._wD(this._s.id + ': loadstart');\r\n      // assume buffering at first\r\n      this._s._onbufferchange(1);\r\n\r\n    }),\r\n\r\n    play: html5_event(function() {\r\n\r\n      // sm2._wD(this._s.id + ': play()');\r\n      // once play starts, no buffering\r\n      this._s._onbufferchange(0);\r\n\r\n    }),\r\n\r\n    playing: html5_event(function() {\r\n\r\n      sm2._wD(this._s.id + ': playing ' + String.fromCharCode(9835));\r\n      // once play starts, no buffering\r\n      this._s._onbufferchange(0);\r\n\r\n    }),\r\n\r\n    progress: html5_event(function(e) {\r\n\r\n      // note: can fire repeatedly after \"loaded\" event, due to use of HTTP range/partials\r\n\r\n      var s = this._s,\r\n          i, j, progStr, buffered = 0,\r\n          isProgress = (e.type === 'progress'),\r\n          ranges = e.target.buffered,\r\n          // firefox 3.6 implements e.loaded/total (bytes)\r\n          loaded = (e.loaded || 0),\r\n          total = (e.total || 1);\r\n\r\n      // reset the \"buffered\" (loaded byte ranges) array\r\n      s.buffered = [];\r\n\r\n      if (ranges && ranges.length) {\r\n\r\n        // if loaded is 0, try TimeRanges implementation as % of load\r\n        // https://developer.mozilla.org/en/DOM/TimeRanges\r\n\r\n        // re-build \"buffered\" array\r\n        // HTML5 returns seconds. SM2 API uses msec for setPosition() etc., whether Flash or HTML5.\r\n        for (i = 0, j = ranges.length; i < j; i++) {\r\n          s.buffered.push({\r\n            start: ranges.start(i) * msecScale,\r\n            end: ranges.end(i) * msecScale\r\n          });\r\n        }\r\n\r\n        // use the last value locally\r\n        buffered = (ranges.end(0) - ranges.start(0)) * msecScale;\r\n\r\n        // linear case, buffer sum; does not account for seeking and HTTP partials / byte ranges\r\n        loaded = Math.min(1, buffered / (e.target.duration * msecScale));\r\n\r\n        // <d>\r\n        if (isProgress && ranges.length > 1) {\r\n          progStr = [];\r\n          j = ranges.length;\r\n          for (i = 0; i < j; i++) {\r\n            progStr.push((e.target.buffered.start(i) * msecScale) + '-' + (e.target.buffered.end(i) * msecScale));\r\n          }\r\n          sm2._wD(this._s.id + ': progress, timeRanges: ' + progStr.join(', '));\r\n        }\r\n\r\n        if (isProgress && !isNaN(loaded)) {\r\n          sm2._wD(this._s.id + ': progress, ' + Math.floor(loaded * 100) + '% loaded');\r\n        }\r\n        // </d>\r\n\r\n      }\r\n\r\n      if (!isNaN(loaded)) {\r\n\r\n        // TODO: prevent calls with duplicate values.\r\n        s._whileloading(loaded, total, s._get_html5_duration());\r\n        if (loaded && total && loaded === total) {\r\n          // in case \"onload\" doesn't fire (eg. gecko 1.9.2)\r\n          html5_events.canplaythrough.call(this, e);\r\n        }\r\n\r\n      }\r\n\r\n    }),\r\n\r\n    ratechange: html5_event(function() {\r\n\r\n      sm2._wD(this._s.id + ': ratechange');\r\n\r\n    }),\r\n\r\n    suspend: html5_event(function(e) {\r\n\r\n      // download paused/stopped, may have finished (eg. onload)\r\n      var s = this._s;\r\n\r\n      sm2._wD(this._s.id + ': suspend');\r\n      html5_events.progress.call(this, e);\r\n      s._onsuspend();\r\n\r\n    }),\r\n\r\n    stalled: html5_event(function() {\r\n\r\n      sm2._wD(this._s.id + ': stalled');\r\n\r\n    }),\r\n\r\n    timeupdate: html5_event(function() {\r\n\r\n      this._s._onTimer();\r\n\r\n    }),\r\n\r\n    waiting: html5_event(function() {\r\n\r\n      var s = this._s;\r\n\r\n      // see also: seeking\r\n      sm2._wD(this._s.id + ': waiting');\r\n\r\n      // playback faster than download rate, etc.\r\n      s._onbufferchange(1);\r\n\r\n    })\r\n\r\n  };\r\n\r\n  html5OK = function(iO) {\r\n\r\n    // playability test based on URL or MIME type\r\n\r\n    var result;\r\n\r\n    if (!iO || (!iO.type && !iO.url && !iO.serverURL)) {\r\n\r\n      // nothing to check\r\n      result = false;\r\n\r\n    } else if (iO.serverURL || (iO.type && preferFlashCheck(iO.type))) {\r\n\r\n      // RTMP, or preferring flash\r\n      result = false;\r\n\r\n    } else {\r\n\r\n      // Use type, if specified. Pass data: URIs to HTML5. If HTML5-only mode, no other options, so just give 'er\r\n      result = ((iO.type ? html5CanPlay({ type: iO.type }) : html5CanPlay({ url: iO.url }) || sm2.html5Only || iO.url.match(/data:/i)));\r\n\r\n    }\r\n\r\n    return result;\r\n\r\n  };\r\n\r\n  html5Unload = function(oAudio) {\r\n\r\n    /**\r\n     * Internal method: Unload media, and cancel any current/pending network requests.\r\n     * Firefox can load an empty URL, which allegedly destroys the decoder and stops the download.\r\n     * https://developer.mozilla.org/En/Using_audio_and_video_in_Firefox#Stopping_the_download_of_media\r\n     * However, Firefox has been seen loading a relative URL from '' and thus requesting the hosting page on unload.\r\n     * Other UA behaviour is unclear, so everyone else gets an about:blank-style URL.\r\n     */\r\n\r\n    var url;\r\n\r\n    if (oAudio) {\r\n\r\n      // Firefox and Chrome accept short WAVe data: URIs. Chome dislikes audio/wav, but accepts audio/wav for data: MIME.\r\n      // Desktop Safari complains / fails on data: URI, so it gets about:blank.\r\n      url = (isSafari ? emptyURL : (sm2.html5.canPlayType('audio/wav') ? emptyWAV : emptyURL));\r\n\r\n      oAudio.src = url;\r\n\r\n      // reset some state, too\r\n      if (oAudio._called_unload !== _undefined) {\r\n        oAudio._called_load = false;\r\n      }\r\n\r\n    }\r\n\r\n    if (useGlobalHTML5Audio) {\r\n\r\n      // ensure URL state is trashed, also\r\n      lastGlobalHTML5URL = null;\r\n\r\n    }\r\n\r\n    return url;\r\n\r\n  };\r\n\r\n  html5CanPlay = function(o) {\r\n\r\n    /**\r\n     * Try to find MIME, test and return truthiness\r\n     * o = {\r\n     *  url: '/path/to/an.mp3',\r\n     *  type: 'audio/mp3'\r\n     * }\r\n     */\r\n\r\n    if (!sm2.useHTML5Audio || !sm2.hasHTML5) return false;\r\n\r\n    var url = (o.url || null),\r\n        mime = (o.type || null),\r\n        aF = sm2.audioFormats,\r\n        result,\r\n        offset,\r\n        fileExt,\r\n        item;\r\n\r\n    // account for known cases like audio/mp3\r\n\r\n    if (mime && sm2.html5[mime] !== _undefined) return (sm2.html5[mime] && !preferFlashCheck(mime));\r\n\r\n    if (!html5Ext) {\r\n\r\n      html5Ext = [];\r\n\r\n      for (item in aF) {\r\n\r\n        if (aF.hasOwnProperty(item)) {\r\n\r\n          html5Ext.push(item);\r\n\r\n          if (aF[item].related) {\r\n            html5Ext = html5Ext.concat(aF[item].related);\r\n          }\r\n\r\n        }\r\n\r\n      }\r\n\r\n      html5Ext = new RegExp('\\\\.(' + html5Ext.join('|') + ')(\\\\?.*)?$', 'i');\r\n\r\n    }\r\n\r\n    // TODO: Strip URL queries, etc.\r\n    fileExt = (url ? url.toLowerCase().match(html5Ext) : null);\r\n\r\n    if (!fileExt || !fileExt.length) {\r\n\r\n      if (!mime) {\r\n\r\n        result = false;\r\n\r\n      } else {\r\n\r\n        // audio/mp3 -> mp3, result should be known\r\n        offset = mime.indexOf(';');\r\n\r\n        // strip \"audio/X; codecs...\"\r\n        fileExt = (offset !== -1 ? mime.substr(0, offset) : mime).substr(6);\r\n\r\n      }\r\n\r\n    } else {\r\n\r\n      // match the raw extension name - \"mp3\", for example\r\n      fileExt = fileExt[1];\r\n\r\n    }\r\n\r\n    if (fileExt && sm2.html5[fileExt] !== _undefined) {\r\n\r\n      // result known\r\n      result = (sm2.html5[fileExt] && !preferFlashCheck(fileExt));\r\n\r\n    } else {\r\n\r\n      mime = 'audio/' + fileExt;\r\n      result = sm2.html5.canPlayType({ type: mime });\r\n\r\n      sm2.html5[fileExt] = result;\r\n\r\n      // sm2._wD('canPlayType, found result: ' + result);\r\n      result = (result && sm2.html5[mime] && !preferFlashCheck(mime));\r\n    }\r\n\r\n    return result;\r\n\r\n  };\r\n\r\n  testHTML5 = function() {\r\n\r\n    /**\r\n     * Internal: Iterates over audioFormats, determining support eg. audio/mp3, audio/mpeg and so on\r\n     * assigns results to html5[] and flash[].\r\n     */\r\n\r\n    if (!sm2.useHTML5Audio || !sm2.hasHTML5) {\r\n\r\n      // without HTML5, we need Flash.\r\n      sm2.html5.usingFlash = true;\r\n      needsFlash = true;\r\n\r\n      return false;\r\n\r\n    }\r\n\r\n    // double-whammy: Opera 9.64 throws WRONG_ARGUMENTS_ERR if no parameter passed to Audio(), and Webkit + iOS happily tries to load \"null\" as a URL. :/\r\n    var a = (Audio !== _undefined ? (isOpera && opera.version() < 10 ? new Audio(null) : new Audio()) : null),\r\n        item, lookup, support = {}, aF, i;\r\n\r\n    function cp(m) {\r\n\r\n      var canPlay, j,\r\n          result = false,\r\n          isOK = false;\r\n\r\n      if (!a || typeof a.canPlayType !== 'function') return result;\r\n\r\n      if (m instanceof Array) {\r\n\r\n        // iterate through all mime types, return any successes\r\n\r\n        for (i = 0, j = m.length; i < j; i++) {\r\n\r\n          if (sm2.html5[m[i]] || a.canPlayType(m[i]).match(sm2.html5Test)) {\r\n\r\n            isOK = true;\r\n            sm2.html5[m[i]] = true;\r\n\r\n            // note flash support, too\r\n            sm2.flash[m[i]] = !!(m[i].match(flashMIME));\r\n\r\n          }\r\n\r\n        }\r\n\r\n        result = isOK;\r\n\r\n      } else {\r\n\r\n        canPlay = (a && typeof a.canPlayType === 'function' ? a.canPlayType(m) : false);\r\n        result = !!(canPlay && (canPlay.match(sm2.html5Test)));\r\n\r\n      }\r\n\r\n      return result;\r\n\r\n    }\r\n\r\n    // test all registered formats + codecs\r\n\r\n    aF = sm2.audioFormats;\r\n\r\n    for (item in aF) {\r\n\r\n      if (aF.hasOwnProperty(item)) {\r\n\r\n        lookup = 'audio/' + item;\r\n\r\n        support[item] = cp(aF[item].type);\r\n\r\n        // write back generic type too, eg. audio/mp3\r\n        support[lookup] = support[item];\r\n\r\n        // assign flash\r\n        if (item.match(flashMIME)) {\r\n\r\n          sm2.flash[item] = true;\r\n          sm2.flash[lookup] = true;\r\n\r\n        } else {\r\n\r\n          sm2.flash[item] = false;\r\n          sm2.flash[lookup] = false;\r\n\r\n        }\r\n\r\n        // assign result to related formats, too\r\n\r\n        if (aF[item] && aF[item].related) {\r\n\r\n          for (i = aF[item].related.length - 1; i >= 0; i--) {\r\n\r\n            // eg. audio/m4a\r\n            support['audio/' + aF[item].related[i]] = support[item];\r\n            sm2.html5[aF[item].related[i]] = support[item];\r\n            sm2.flash[aF[item].related[i]] = support[item];\r\n\r\n          }\r\n\r\n        }\r\n\r\n      }\r\n\r\n    }\r\n\r\n    support.canPlayType = (a ? cp : null);\r\n    sm2.html5 = mixin(sm2.html5, support);\r\n\r\n    sm2.html5.usingFlash = featureCheck();\r\n    needsFlash = sm2.html5.usingFlash;\r\n\r\n    return true;\r\n\r\n  };\r\n\r\n  strings = {\r\n\r\n    // <d>\r\n    notReady: 'Unavailable - wait until onready() has fired.',\r\n    notOK: 'Audio support is not available.',\r\n    domError: sm + 'exception caught while appending SWF to DOM.',\r\n    spcWmode: 'Removing wmode, preventing known SWF loading issue(s)',\r\n    swf404: smc + 'Verify that %s is a valid path.',\r\n    tryDebug: 'Try ' + sm + '.debugFlash = true for more security details (output goes to SWF.)',\r\n    checkSWF: 'See SWF output for more debug info.',\r\n    localFail: smc + 'Non-HTTP page (' + doc.location.protocol + ' URL?) Review Flash player security settings for this special case:\\nhttp://www.macromedia.com/support/documentation/en/flashplayer/help/settings_manager04.html\\nMay need to add/allow path, eg. c:/sm2/ or /users/me/sm2/',\r\n    waitFocus: smc + 'Special case: Waiting for SWF to load with window focus...',\r\n    waitForever: smc + 'Waiting indefinitely for Flash (will recover if unblocked)...',\r\n    waitSWF: smc + 'Waiting for 100% SWF load...',\r\n    needFunction: smc + 'Function object expected for %s',\r\n    badID: 'Sound ID \"%s\" should be a string, starting with a non-numeric character',\r\n    currentObj: smc + '_debug(): Current sound objects',\r\n    waitOnload: smc + 'Waiting for window.onload()',\r\n    docLoaded: smc + 'Document already loaded',\r\n    onload: smc + 'initComplete(): calling soundManager.onload()',\r\n    onloadOK: sm + '.onload() complete',\r\n    didInit: smc + 'init(): Already called?',\r\n    secNote: 'Flash security note: Network/internet URLs will not load due to security restrictions. Access can be configured via Flash Player Global Security Settings Page: http://www.macromedia.com/support/documentation/en/flashplayer/help/settings_manager04.html',\r\n    badRemove: smc + 'Failed to remove Flash node.',\r\n    shutdown: sm + '.disable(): Shutting down',\r\n    queue: smc + 'Queueing %s handler',\r\n    smError: 'SMSound.load(): Exception: JS-Flash communication failed, or JS error.',\r\n    fbTimeout: 'No flash response, applying .' + swfCSS.swfTimedout + ' CSS...',\r\n    fbLoaded: 'Flash loaded',\r\n    fbHandler: smc + 'flashBlockHandler()',\r\n    manURL: 'SMSound.load(): Using manually-assigned URL',\r\n    onURL: sm + '.load(): current URL already assigned.',\r\n    badFV: sm + '.flashVersion must be 8 or 9. \"%s\" is invalid. Reverting to %s.',\r\n    as2loop: 'Note: Setting stream:false so looping can work (flash 8 limitation)',\r\n    noNSLoop: 'Note: Looping not implemented for MovieStar formats',\r\n    needfl9: 'Note: Switching to flash 9, required for MP4 formats.',\r\n    mfTimeout: 'Setting flashLoadTimeout = 0 (infinite) for off-screen, mobile flash case',\r\n    needFlash: smc + 'Fatal error: Flash is needed to play some required formats, but is not available.',\r\n    gotFocus: smc + 'Got window focus.',\r\n    policy: 'Enabling usePolicyFile for data access',\r\n    setup: sm + '.setup(): allowed parameters: %s',\r\n    setupError: sm + '.setup(): \"%s\" cannot be assigned with this method.',\r\n    setupUndef: sm + '.setup(): Could not find option \"%s\"',\r\n    setupLate: sm + '.setup(): url, flashVersion and html5Test property changes will not take effect until reboot().',\r\n    noURL: smc + 'Flash URL required. Call soundManager.setup({url:...}) to get started.',\r\n    sm2Loaded: 'SoundManager 2: Ready. ' + String.fromCharCode(10003),\r\n    reset: sm + '.reset(): Removing event callbacks',\r\n    mobileUA: 'Mobile UA detected, preferring HTML5 by default.',\r\n    globalHTML5: 'Using singleton HTML5 Audio() pattern for this device.',\r\n    ignoreMobile: 'Ignoring mobile restrictions for this device.'\r\n    // </d>\r\n\r\n  };\r\n\r\n  str = function() {\r\n\r\n    // internal string replace helper.\r\n    // arguments: o [,items to replace]\r\n    // <d>\r\n\r\n    var args,\r\n        i, j, o,\r\n        sstr;\r\n\r\n    // real array, please\r\n    args = slice.call(arguments);\r\n\r\n    // first argument\r\n    o = args.shift();\r\n\r\n    sstr = (strings && strings[o] ? strings[o] : '');\r\n\r\n    if (sstr && args && args.length) {\r\n      for (i = 0, j = args.length; i < j; i++) {\r\n        sstr = sstr.replace('%s', args[i]);\r\n      }\r\n    }\r\n\r\n    return sstr;\r\n    // </d>\r\n\r\n  };\r\n\r\n  loopFix = function(sOpt) {\r\n\r\n    // flash 8 requires stream = false for looping to work\r\n    if (fV === 8 && sOpt.loops > 1 && sOpt.stream) {\r\n      _wDS('as2loop');\r\n      sOpt.stream = false;\r\n    }\r\n\r\n    return sOpt;\r\n\r\n  };\r\n\r\n  policyFix = function(sOpt, sPre) {\r\n\r\n    if (sOpt && !sOpt.usePolicyFile && (sOpt.onid3 || sOpt.usePeakData || sOpt.useWaveformData || sOpt.useEQData)) {\r\n      sm2._wD((sPre || '') + str('policy'));\r\n      sOpt.usePolicyFile = true;\r\n    }\r\n\r\n    return sOpt;\r\n\r\n  };\r\n\r\n  complain = function(sMsg) {\r\n\r\n    // <d>\r\n    if (hasConsole && console.warn !== _undefined) {\r\n      console.warn(sMsg);\r\n    } else {\r\n      sm2._wD(sMsg);\r\n    }\r\n    // </d>\r\n\r\n  };\r\n\r\n  doNothing = function() {\r\n\r\n    return false;\r\n\r\n  };\r\n\r\n  disableObject = function(o) {\r\n\r\n    var oProp;\r\n\r\n    for (oProp in o) {\r\n      if (o.hasOwnProperty(oProp) && typeof o[oProp] === 'function') {\r\n        o[oProp] = doNothing;\r\n      }\r\n    }\r\n\r\n    oProp = null;\r\n\r\n  };\r\n\r\n  failSafely = function(bNoDisable) {\r\n\r\n    // general failure exception handler\r\n\r\n    if (bNoDisable === _undefined) {\r\n      bNoDisable = false;\r\n    }\r\n\r\n    if (disabled || bNoDisable) {\r\n      sm2.disable(bNoDisable);\r\n    }\r\n\r\n  };\r\n\r\n  normalizeMovieURL = function(movieURL) {\r\n\r\n    var urlParams = null, url;\r\n\r\n    if (movieURL) {\r\n\r\n      if (movieURL.match(/\\.swf(\\?.*)?$/i)) {\r\n\r\n        urlParams = movieURL.substr(movieURL.toLowerCase().lastIndexOf('.swf?') + 4);\r\n\r\n        // assume user knows what they're doing\r\n        if (urlParams) return movieURL;\r\n\r\n      } else if (movieURL.lastIndexOf('/') !== movieURL.length - 1) {\r\n\r\n        // append trailing slash, if needed\r\n        movieURL += '/';\r\n\r\n      }\r\n\r\n    }\r\n\r\n    url = (movieURL && movieURL.lastIndexOf('/') !== -1 ? movieURL.substr(0, movieURL.lastIndexOf('/') + 1) : './') + sm2.movieURL;\r\n\r\n    if (sm2.noSWFCache) {\r\n      url += ('?ts=' + new Date().getTime());\r\n    }\r\n\r\n    return url;\r\n\r\n  };\r\n\r\n  setVersionInfo = function() {\r\n\r\n    // short-hand for internal use\r\n\r\n    fV = parseInt(sm2.flashVersion, 10);\r\n\r\n    if (fV !== 8 && fV !== 9) {\r\n      sm2._wD(str('badFV', fV, defaultFlashVersion));\r\n      sm2.flashVersion = fV = defaultFlashVersion;\r\n    }\r\n\r\n    // debug flash movie, if applicable\r\n\r\n    var isDebug = (sm2.debugMode || sm2.debugFlash ? '_debug.swf' : '.swf');\r\n\r\n    if (sm2.useHTML5Audio && !sm2.html5Only && sm2.audioFormats.mp4.required && fV < 9) {\r\n      sm2._wD(str('needfl9'));\r\n      sm2.flashVersion = fV = 9;\r\n    }\r\n\r\n    sm2.version = sm2.versionNumber + (sm2.html5Only ? ' (HTML5-only mode)' : (fV === 9 ? ' (AS3/Flash 9)' : ' (AS2/Flash 8)'));\r\n\r\n    // set up default options\r\n    if (fV > 8) {\r\n\r\n      // +flash 9 base options\r\n      sm2.defaultOptions = mixin(sm2.defaultOptions, sm2.flash9Options);\r\n      sm2.features.buffering = true;\r\n\r\n      // +moviestar support\r\n      sm2.defaultOptions = mixin(sm2.defaultOptions, sm2.movieStarOptions);\r\n      sm2.filePatterns.flash9 = new RegExp('\\\\.(mp3|' + netStreamTypes.join('|') + ')(\\\\?.*)?$', 'i');\r\n      sm2.features.movieStar = true;\r\n\r\n    } else {\r\n\r\n      sm2.features.movieStar = false;\r\n\r\n    }\r\n\r\n    // regExp for flash canPlay(), etc.\r\n    sm2.filePattern = sm2.filePatterns[(fV !== 8 ? 'flash9' : 'flash8')];\r\n\r\n    // if applicable, use _debug versions of SWFs\r\n    sm2.movieURL = (fV === 8 ? 'soundmanager2.swf' : 'soundmanager2_flash9.swf').replace('.swf', isDebug);\r\n\r\n    sm2.features.peakData = sm2.features.waveformData = sm2.features.eqData = (fV > 8);\r\n\r\n  };\r\n\r\n  setPolling = function(bPolling, bHighPerformance) {\r\n\r\n    if (!flash) {\r\n      return;\r\n    }\r\n\r\n    flash._setPolling(bPolling, bHighPerformance);\r\n\r\n  };\r\n\r\n  initDebug = function() {\r\n\r\n    // starts debug mode, creating output <div> for UAs without console object\r\n\r\n    // allow force of debug mode via URL\r\n    // <d>\r\n    if (sm2.debugURLParam.test(wl)) {\r\n      sm2.setupOptions.debugMode = sm2.debugMode = true;\r\n    }\r\n\r\n    if (id(sm2.debugID)) {\r\n      return;\r\n    }\r\n\r\n    var oD, oDebug, oTarget, oToggle, tmp;\r\n\r\n    if (sm2.debugMode && !id(sm2.debugID) && (!hasConsole || !sm2.useConsole || !sm2.consoleOnly)) {\r\n\r\n      oD = doc.createElement('div');\r\n      oD.id = sm2.debugID + '-toggle';\r\n\r\n      oToggle = {\r\n        position: 'fixed',\r\n        bottom: '0px',\r\n        right: '0px',\r\n        width: '1.2em',\r\n        height: '1.2em',\r\n        lineHeight: '1.2em',\r\n        margin: '2px',\r\n        textAlign: 'center',\r\n        border: '1px solid #999',\r\n        cursor: 'pointer',\r\n        background: '#fff',\r\n        color: '#333',\r\n        zIndex: 10001\r\n      };\r\n\r\n      oD.appendChild(doc.createTextNode('-'));\r\n      oD.onclick = toggleDebug;\r\n      oD.title = 'Toggle SM2 debug console';\r\n\r\n      if (ua.match(/msie 6/i)) {\r\n        oD.style.position = 'absolute';\r\n        oD.style.cursor = 'hand';\r\n      }\r\n\r\n      for (tmp in oToggle) {\r\n        if (oToggle.hasOwnProperty(tmp)) {\r\n          oD.style[tmp] = oToggle[tmp];\r\n        }\r\n      }\r\n\r\n      oDebug = doc.createElement('div');\r\n      oDebug.id = sm2.debugID;\r\n      oDebug.style.display = (sm2.debugMode ? 'block' : 'none');\r\n\r\n      if (sm2.debugMode && !id(oD.id)) {\r\n        try {\r\n          oTarget = getDocument();\r\n          oTarget.appendChild(oD);\r\n        } catch(e2) {\r\n          throw new Error(str('domError') + ' \\n' + e2.toString());\r\n        }\r\n        oTarget.appendChild(oDebug);\r\n      }\r\n\r\n    }\r\n\r\n    oTarget = null;\r\n    // </d>\r\n\r\n  };\r\n\r\n  idCheck = this.getSoundById;\r\n\r\n  // <d>\r\n  _wDS = function(o, errorLevel) {\r\n\r\n    return (!o ? '' : sm2._wD(str(o), errorLevel));\r\n\r\n  };\r\n\r\n  toggleDebug = function() {\r\n\r\n    var o = id(sm2.debugID),\r\n    oT = id(sm2.debugID + '-toggle');\r\n\r\n    if (!o) {\r\n      return;\r\n    }\r\n\r\n    if (debugOpen) {\r\n      // minimize\r\n      oT.innerHTML = '+';\r\n      o.style.display = 'none';\r\n    } else {\r\n      oT.innerHTML = '-';\r\n      o.style.display = 'block';\r\n    }\r\n\r\n    debugOpen = !debugOpen;\r\n\r\n  };\r\n\r\n  debugTS = function(sEventType, bSuccess, sMessage) {\r\n\r\n    // troubleshooter debug hooks\r\n\r\n    if (window.sm2Debugger !== _undefined) {\r\n      try {\r\n        sm2Debugger.handleEvent(sEventType, bSuccess, sMessage);\r\n      } catch(e) {\r\n        // oh well\r\n        return false;\r\n      }\r\n    }\r\n\r\n    return true;\r\n\r\n  };\r\n  // </d>\r\n\r\n  getSWFCSS = function() {\r\n\r\n    var css = [];\r\n\r\n    if (sm2.debugMode) {\r\n      css.push(swfCSS.sm2Debug);\r\n    }\r\n\r\n    if (sm2.debugFlash) {\r\n      css.push(swfCSS.flashDebug);\r\n    }\r\n\r\n    if (sm2.useHighPerformance) {\r\n      css.push(swfCSS.highPerf);\r\n    }\r\n\r\n    return css.join(' ');\r\n\r\n  };\r\n\r\n  flashBlockHandler = function() {\r\n\r\n    // *possible* flash block situation.\r\n\r\n    var name = str('fbHandler'),\r\n        p = sm2.getMoviePercent(),\r\n        css = swfCSS,\r\n        error = {\r\n          type: 'FLASHBLOCK'\r\n        };\r\n\r\n    if (sm2.html5Only) {\r\n      // no flash, or unused\r\n      return;\r\n    }\r\n\r\n    if (!sm2.ok()) {\r\n\r\n      if (needsFlash) {\r\n        // make the movie more visible, so user can fix\r\n        sm2.oMC.className = getSWFCSS() + ' ' + css.swfDefault + ' ' + (p === null ? css.swfTimedout : css.swfError);\r\n        sm2._wD(name + ': ' + str('fbTimeout') + (p ? ' (' + str('fbLoaded') + ')' : ''));\r\n      }\r\n\r\n      sm2.didFlashBlock = true;\r\n\r\n      // fire onready(), complain lightly\r\n      processOnEvents({\r\n        type: 'ontimeout',\r\n        ignoreInit: true,\r\n        error: error\r\n      });\r\n\r\n      catchError(error);\r\n\r\n    } else {\r\n\r\n      // SM2 loaded OK (or recovered)\r\n\r\n      // <d>\r\n      if (sm2.didFlashBlock) {\r\n        sm2._wD(name + ': Unblocked');\r\n      }\r\n      // </d>\r\n\r\n      if (sm2.oMC) {\r\n        sm2.oMC.className = [getSWFCSS(), css.swfDefault, css.swfLoaded + (sm2.didFlashBlock ? ' ' + css.swfUnblocked : '')].join(' ');\r\n      }\r\n\r\n    }\r\n\r\n  };\r\n\r\n  addOnEvent = function(sType, oMethod, oScope) {\r\n\r\n    if (on_queue[sType] === _undefined) {\r\n      on_queue[sType] = [];\r\n    }\r\n\r\n    on_queue[sType].push({\r\n      method: oMethod,\r\n      scope: (oScope || null),\r\n      fired: false\r\n    });\r\n\r\n  };\r\n\r\n  processOnEvents = function(oOptions) {\r\n\r\n    // if unspecified, assume OK/error\r\n\r\n    if (!oOptions) {\r\n      oOptions = {\r\n        type: (sm2.ok() ? 'onready' : 'ontimeout')\r\n      };\r\n    }\r\n\r\n    // not ready yet.\r\n    if (!didInit && oOptions && !oOptions.ignoreInit) return false;\r\n\r\n    // invalid case\r\n    if (oOptions.type === 'ontimeout' && (sm2.ok() || (disabled && !oOptions.ignoreInit))) return false;\r\n\r\n    var status = {\r\n          success: (oOptions && oOptions.ignoreInit ? sm2.ok() : !disabled)\r\n        },\r\n\r\n        // queue specified by type, or none\r\n        srcQueue = (oOptions && oOptions.type ? on_queue[oOptions.type] || [] : []),\r\n\r\n        queue = [], i, j,\r\n        args = [status],\r\n        canRetry = (needsFlash && !sm2.ok());\r\n\r\n    if (oOptions.error) {\r\n      args[0].error = oOptions.error;\r\n    }\r\n\r\n    for (i = 0, j = srcQueue.length; i < j; i++) {\r\n      if (srcQueue[i].fired !== true) {\r\n        queue.push(srcQueue[i]);\r\n      }\r\n    }\r\n\r\n    if (queue.length) {\r\n\r\n      // sm2._wD(sm + ': Firing ' + queue.length + ' ' + oOptions.type + '() item' + (queue.length === 1 ? '' : 's'));\r\n      for (i = 0, j = queue.length; i < j; i++) {\r\n\r\n        if (queue[i].scope) {\r\n          queue[i].method.apply(queue[i].scope, args);\r\n        } else {\r\n          queue[i].method.apply(this, args);\r\n        }\r\n\r\n        if (!canRetry) {\r\n          // useFlashBlock and SWF timeout case doesn't count here.\r\n          queue[i].fired = true;\r\n\r\n        }\r\n\r\n      }\r\n\r\n    }\r\n\r\n    return true;\r\n\r\n  };\r\n\r\n  initUserOnload = function() {\r\n\r\n    window.setTimeout(function() {\r\n\r\n      if (sm2.useFlashBlock) {\r\n        flashBlockHandler();\r\n      }\r\n\r\n      processOnEvents();\r\n\r\n      // call user-defined \"onload\", scoped to window\r\n\r\n      if (typeof sm2.onload === 'function') {\r\n        _wDS('onload', 1);\r\n        sm2.onload.apply(window);\r\n        _wDS('onloadOK', 1);\r\n      }\r\n\r\n      if (sm2.waitForWindowLoad) {\r\n        event.add(window, 'load', initUserOnload);\r\n      }\r\n\r\n    }, 1);\r\n\r\n  };\r\n\r\n  detectFlash = function() {\r\n\r\n    /**\r\n     * Hat tip: Flash Detect library (BSD, (C) 2007) by Carl \"DocYes\" S. Yestrau\r\n     * http://featureblend.com/javascript-flash-detection-library.html / http://featureblend.com/license.txt\r\n     */\r\n\r\n    // this work has already been done.\r\n    if (hasFlash !== _undefined) return hasFlash;\r\n\r\n    var hasPlugin = false, n = navigator, obj, type, types, AX = window.ActiveXObject;\r\n\r\n    // MS Edge 14 throws an \"Unspecified Error\" because n.plugins is inaccessible due to permissions\r\n    var nP;\r\n\r\n    try {\r\n      nP = n.plugins;\r\n    } catch(e) {\r\n      nP = undefined;\r\n    }\r\n\r\n    if (nP && nP.length) {\r\n\r\n      type = 'application/x-shockwave-flash';\r\n      types = n.mimeTypes;\r\n\r\n      if (types && types[type] && types[type].enabledPlugin && types[type].enabledPlugin.description) {\r\n        hasPlugin = true;\r\n      }\r\n\r\n    } else if (AX !== _undefined && !ua.match(/MSAppHost/i)) {\r\n\r\n      // Windows 8 Store Apps (MSAppHost) are weird (compatibility?) and won't complain here, but will barf if Flash/ActiveX object is appended to the DOM.\r\n      try {\r\n        obj = new AX('ShockwaveFlash.ShockwaveFlash');\r\n      } catch(e) {\r\n        // oh well\r\n        obj = null;\r\n      }\r\n\r\n      hasPlugin = (!!obj);\r\n\r\n      // cleanup, because it is ActiveX after all\r\n      obj = null;\r\n\r\n    }\r\n\r\n    hasFlash = hasPlugin;\r\n\r\n    return hasPlugin;\r\n\r\n  };\r\n\r\n  featureCheck = function() {\r\n\r\n    var flashNeeded,\r\n        item,\r\n        formats = sm2.audioFormats,\r\n        // iPhone <= 3.1 has broken HTML5 audio(), but firmware 3.2 (original iPad) + iOS4 works.\r\n        isSpecial = (is_iDevice && !!(ua.match(/os (1|2|3_0|3_1)\\s/i)));\r\n\r\n    if (isSpecial) {\r\n\r\n      // has Audio(), but is broken; let it load links directly.\r\n      sm2.hasHTML5 = false;\r\n\r\n      // ignore flash case, however\r\n      sm2.html5Only = true;\r\n\r\n      // hide the SWF, if present\r\n      if (sm2.oMC) {\r\n        sm2.oMC.style.display = 'none';\r\n      }\r\n\r\n    } else if (sm2.useHTML5Audio) {\r\n\r\n        if (!sm2.html5 || !sm2.html5.canPlayType) {\r\n          sm2._wD('SoundManager: No HTML5 Audio() support detected.');\r\n          sm2.hasHTML5 = false;\r\n        }\r\n\r\n        // <d>\r\n        if (isBadSafari) {\r\n          sm2._wD(smc + 'Note: Buggy HTML5 Audio in Safari on this OS X release, see https://bugs.webkit.org/show_bug.cgi?id=32159 - ' + (!hasFlash ? ' would use flash fallback for MP3/MP4, but none detected.' : 'will use flash fallback for MP3/MP4, if available'), 1);\r\n        }\r\n        // </d>\r\n\r\n      }\r\n\r\n    if (sm2.useHTML5Audio && sm2.hasHTML5) {\r\n\r\n      // sort out whether flash is optional, required or can be ignored.\r\n\r\n      // innocent until proven guilty.\r\n      canIgnoreFlash = true;\r\n\r\n      for (item in formats) {\r\n\r\n        if (formats.hasOwnProperty(item)) {\r\n\r\n          if (formats[item].required) {\r\n\r\n            if (!sm2.html5.canPlayType(formats[item].type)) {\r\n\r\n              // 100% HTML5 mode is not possible.\r\n              canIgnoreFlash = false;\r\n              flashNeeded = true;\r\n\r\n            } else if (sm2.preferFlash && (sm2.flash[item] || sm2.flash[formats[item].type])) {\r\n\r\n              // flash may be required, or preferred for this format.\r\n              flashNeeded = true;\r\n\r\n            }\r\n\r\n          }\r\n\r\n        }\r\n\r\n      }\r\n\r\n    }\r\n\r\n    // sanity check...\r\n    if (sm2.ignoreFlash) {\r\n      flashNeeded = false;\r\n      canIgnoreFlash = true;\r\n    }\r\n\r\n    sm2.html5Only = (sm2.hasHTML5 && sm2.useHTML5Audio && !flashNeeded);\r\n\r\n    return (!sm2.html5Only);\r\n\r\n  };\r\n\r\n  parseURL = function(url) {\r\n\r\n    /**\r\n     * Internal: Finds and returns the first playable URL (or failing that, the first URL.)\r\n     * @param {string or array} url A single URL string, OR, an array of URL strings or {url:'/path/to/resource', type:'audio/mp3'} objects.\r\n     */\r\n\r\n    var i, j, urlResult = 0, result;\r\n\r\n    if (url instanceof Array) {\r\n\r\n      // find the first good one\r\n      for (i = 0, j = url.length; i < j; i++) {\r\n\r\n        if (url[i] instanceof Object) {\r\n\r\n          // MIME check\r\n          if (sm2.canPlayMIME(url[i].type)) {\r\n            urlResult = i;\r\n            break;\r\n          }\r\n\r\n        } else if (sm2.canPlayURL(url[i])) {\r\n\r\n          // URL string check\r\n          urlResult = i;\r\n          break;\r\n\r\n        }\r\n\r\n      }\r\n\r\n      // normalize to string\r\n      if (url[urlResult].url) {\r\n        url[urlResult] = url[urlResult].url;\r\n      }\r\n\r\n      result = url[urlResult];\r\n\r\n    } else {\r\n\r\n      // single URL case\r\n      result = url;\r\n\r\n    }\r\n\r\n    return result;\r\n\r\n  };\r\n\r\n\r\n  startTimer = function(oSound) {\r\n\r\n    /**\r\n     * attach a timer to this sound, and start an interval if needed\r\n     */\r\n\r\n    if (!oSound._hasTimer) {\r\n\r\n      oSound._hasTimer = true;\r\n\r\n      if (!mobileHTML5 && sm2.html5PollingInterval) {\r\n\r\n        if (h5IntervalTimer === null && h5TimerCount === 0) {\r\n\r\n          h5IntervalTimer = setInterval(timerExecute, sm2.html5PollingInterval);\r\n\r\n        }\r\n\r\n        h5TimerCount++;\r\n\r\n      }\r\n\r\n    }\r\n\r\n  };\r\n\r\n  stopTimer = function(oSound) {\r\n\r\n    /**\r\n     * detach a timer\r\n     */\r\n\r\n    if (oSound._hasTimer) {\r\n\r\n      oSound._hasTimer = false;\r\n\r\n      if (!mobileHTML5 && sm2.html5PollingInterval) {\r\n\r\n        // interval will stop itself at next execution.\r\n\r\n        h5TimerCount--;\r\n\r\n      }\r\n\r\n    }\r\n\r\n  };\r\n\r\n  timerExecute = function() {\r\n\r\n    /**\r\n     * manual polling for HTML5 progress events, ie., whileplaying()\r\n     * (can achieve greater precision than conservative default HTML5 interval)\r\n     */\r\n\r\n    var i;\r\n\r\n    if (h5IntervalTimer !== null && !h5TimerCount) {\r\n\r\n      // no active timers, stop polling interval.\r\n\r\n      clearInterval(h5IntervalTimer);\r\n\r\n      h5IntervalTimer = null;\r\n\r\n      return;\r\n\r\n    }\r\n\r\n    // check all HTML5 sounds with timers\r\n\r\n    for (i = sm2.soundIDs.length - 1; i >= 0; i--) {\r\n\r\n      if (sm2.sounds[sm2.soundIDs[i]].isHTML5 && sm2.sounds[sm2.soundIDs[i]]._hasTimer) {\r\n        sm2.sounds[sm2.soundIDs[i]]._onTimer();\r\n      }\r\n\r\n    }\r\n\r\n  };\r\n\r\n  catchError = function(options) {\r\n\r\n    options = (options !== _undefined ? options : {});\r\n\r\n    if (typeof sm2.onerror === 'function') {\r\n      sm2.onerror.apply(window, [{\r\n        type: (options.type !== _undefined ? options.type : null)\r\n      }]);\r\n    }\r\n\r\n    if (options.fatal !== _undefined && options.fatal) {\r\n      sm2.disable();\r\n    }\r\n\r\n  };\r\n\r\n  badSafariFix = function() {\r\n\r\n    // special case: \"bad\" Safari (OS X 10.3 - 10.7) must fall back to flash for MP3/MP4\r\n    if (!isBadSafari || !detectFlash()) {\r\n      // doesn't apply\r\n      return;\r\n    }\r\n\r\n    var aF = sm2.audioFormats, i, item;\r\n\r\n    for (item in aF) {\r\n\r\n      if (aF.hasOwnProperty(item)) {\r\n\r\n        if (item === 'mp3' || item === 'mp4') {\r\n\r\n          sm2._wD(sm + ': Using flash fallback for ' + item + ' format');\r\n          sm2.html5[item] = false;\r\n\r\n          // assign result to related formats, too\r\n          if (aF[item] && aF[item].related) {\r\n            for (i = aF[item].related.length - 1; i >= 0; i--) {\r\n              sm2.html5[aF[item].related[i]] = false;\r\n            }\r\n          }\r\n\r\n        }\r\n\r\n      }\r\n\r\n    }\r\n\r\n  };\r\n\r\n  /**\r\n   * Pseudo-private flash/ExternalInterface methods\r\n   * ----------------------------------------------\r\n   */\r\n\r\n  this._setSandboxType = function(sandboxType) {\r\n\r\n    // <d>\r\n    // Security sandbox according to Flash plugin\r\n    var sb = sm2.sandbox;\r\n\r\n    sb.type = sandboxType;\r\n    sb.description = sb.types[(sb.types[sandboxType] !== _undefined ? sandboxType : 'unknown')];\r\n\r\n    if (sb.type === 'localWithFile') {\r\n\r\n      sb.noRemote = true;\r\n      sb.noLocal = false;\r\n      _wDS('secNote', 2);\r\n\r\n    } else if (sb.type === 'localWithNetwork') {\r\n\r\n      sb.noRemote = false;\r\n      sb.noLocal = true;\r\n\r\n    } else if (sb.type === 'localTrusted') {\r\n\r\n      sb.noRemote = false;\r\n      sb.noLocal = false;\r\n\r\n    }\r\n    // </d>\r\n\r\n  };\r\n\r\n  this._externalInterfaceOK = function(swfVersion) {\r\n\r\n    // flash callback confirming flash loaded, EI working etc.\r\n    // swfVersion: SWF build string\r\n\r\n    if (sm2.swfLoaded) {\r\n      return;\r\n    }\r\n\r\n    var e;\r\n\r\n    debugTS('swf', true);\r\n    debugTS('flashtojs', true);\r\n    sm2.swfLoaded = true;\r\n    tryInitOnFocus = false;\r\n\r\n    if (isBadSafari) {\r\n      badSafariFix();\r\n    }\r\n\r\n    // complain if JS + SWF build/version strings don't match, excluding +DEV builds\r\n    // <d>\r\n    if (!swfVersion || swfVersion.replace(/\\+dev/i, '') !== sm2.versionNumber.replace(/\\+dev/i, '')) {\r\n\r\n      e = sm + ': Fatal: JavaScript file build \"' + sm2.versionNumber + '\" does not match Flash SWF build \"' + swfVersion + '\" at ' + sm2.url + '. Ensure both are up-to-date.';\r\n\r\n      // escape flash -> JS stack so this error fires in window.\r\n      setTimeout(function() {\r\n        throw new Error(e);\r\n      }, 0);\r\n\r\n      // exit, init will fail with timeout\r\n      return;\r\n\r\n    }\r\n    // </d>\r\n\r\n    // IE needs a larger timeout\r\n    setTimeout(init, isIE ? 100 : 1);\r\n\r\n  };\r\n\r\n  /**\r\n   * Private initialization helpers\r\n   * ------------------------------\r\n   */\r\n\r\n  createMovie = function(movieID, movieURL) {\r\n\r\n    // ignore if already connected\r\n    if (didAppend && appendSuccess) return false;\r\n\r\n    function initMsg() {\r\n\r\n      // <d>\r\n\r\n      var options = [],\r\n          title,\r\n          msg = [],\r\n          delimiter = ' + ';\r\n\r\n      title = 'SoundManager ' + sm2.version + (!sm2.html5Only && sm2.useHTML5Audio ? (sm2.hasHTML5 ? ' + HTML5 audio' : ', no HTML5 audio support') : '');\r\n\r\n      if (!sm2.html5Only) {\r\n\r\n        if (sm2.preferFlash) {\r\n          options.push('preferFlash');\r\n        }\r\n\r\n        if (sm2.useHighPerformance) {\r\n          options.push('useHighPerformance');\r\n        }\r\n\r\n        if (sm2.flashPollingInterval) {\r\n          options.push('flashPollingInterval (' + sm2.flashPollingInterval + 'ms)');\r\n        }\r\n\r\n        if (sm2.html5PollingInterval) {\r\n          options.push('html5PollingInterval (' + sm2.html5PollingInterval + 'ms)');\r\n        }\r\n\r\n        if (sm2.wmode) {\r\n          options.push('wmode (' + sm2.wmode + ')');\r\n        }\r\n\r\n        if (sm2.debugFlash) {\r\n          options.push('debugFlash');\r\n        }\r\n\r\n        if (sm2.useFlashBlock) {\r\n          options.push('flashBlock');\r\n        }\r\n\r\n      } else if (sm2.html5PollingInterval) {\r\n          options.push('html5PollingInterval (' + sm2.html5PollingInterval + 'ms)');\r\n        }\r\n\r\n      if (options.length) {\r\n        msg = msg.concat([options.join(delimiter)]);\r\n      }\r\n\r\n      sm2._wD(title + (msg.length ? delimiter + msg.join(', ') : ''), 1);\r\n\r\n      showSupport();\r\n\r\n      // </d>\r\n\r\n    }\r\n\r\n    if (sm2.html5Only) {\r\n\r\n      // 100% HTML5 mode\r\n      setVersionInfo();\r\n\r\n      initMsg();\r\n      sm2.oMC = id(sm2.movieID);\r\n      init();\r\n\r\n      // prevent multiple init attempts\r\n      didAppend = true;\r\n\r\n      appendSuccess = true;\r\n\r\n      return false;\r\n\r\n    }\r\n\r\n    // flash path\r\n    var remoteURL = (movieURL || sm2.url),\r\n    localURL = (sm2.altURL || remoteURL),\r\n    swfTitle = 'JS/Flash audio component (SoundManager 2)',\r\n    oTarget = getDocument(),\r\n    extraClass = getSWFCSS(),\r\n    isRTL = null,\r\n    html = doc.getElementsByTagName('html')[0],\r\n    oEmbed, oMovie, tmp, movieHTML, oEl, s, x, sClass;\r\n\r\n    isRTL = (html && html.dir && html.dir.match(/rtl/i));\r\n    movieID = (movieID === _undefined ? sm2.id : movieID);\r\n\r\n    function param(name, value) {\r\n      return '<param name=\"' + name + '\" value=\"' + value + '\" />';\r\n    }\r\n\r\n    // safety check for legacy (change to Flash 9 URL)\r\n    setVersionInfo();\r\n    sm2.url = normalizeMovieURL(overHTTP ? remoteURL : localURL);\r\n    movieURL = sm2.url;\r\n\r\n    sm2.wmode = (!sm2.wmode && sm2.useHighPerformance ? 'transparent' : sm2.wmode);\r\n\r\n    if (sm2.wmode !== null && (ua.match(/msie 8/i) || (!isIE && !sm2.useHighPerformance)) && navigator.platform.match(/win32|win64/i)) {\r\n      /**\r\n       * extra-special case: movie doesn't load until scrolled into view when using wmode = anything but 'window' here\r\n       * does not apply when using high performance (position:fixed means on-screen), OR infinite flash load timeout\r\n       * wmode breaks IE 8 on Vista + Win7 too in some cases, as of January 2011 (?)\r\n       */\r\n      messages.push(strings.spcWmode);\r\n      sm2.wmode = null;\r\n    }\r\n\r\n    oEmbed = {\r\n      name: movieID,\r\n      id: movieID,\r\n      src: movieURL,\r\n      quality: 'high',\r\n      allowScriptAccess: sm2.allowScriptAccess,\r\n      bgcolor: sm2.bgColor,\r\n      pluginspage: http + 'www.macromedia.com/go/getflashplayer',\r\n      title: swfTitle,\r\n      type: 'application/x-shockwave-flash',\r\n      wmode: sm2.wmode,\r\n      // http://help.adobe.com/en_US/as3/mobile/WS4bebcd66a74275c36cfb8137124318eebc6-7ffd.html\r\n      hasPriority: 'true'\r\n    };\r\n\r\n    if (sm2.debugFlash) {\r\n      oEmbed.FlashVars = 'debug=1';\r\n    }\r\n\r\n    if (!sm2.wmode) {\r\n      // don't write empty attribute\r\n      delete oEmbed.wmode;\r\n    }\r\n\r\n    if (isIE) {\r\n\r\n      // IE is \"special\".\r\n      oMovie = doc.createElement('div');\r\n      movieHTML = [\r\n        '<object id=\"' + movieID + '\" data=\"' + movieURL + '\" type=\"' + oEmbed.type + '\" title=\"' + oEmbed.title + '\" classid=\"clsid:D27CDB6E-AE6D-11cf-96B8-444553540000\" codebase=\"http://download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=6,0,40,0\">',\r\n        param('movie', movieURL),\r\n        param('AllowScriptAccess', sm2.allowScriptAccess),\r\n        param('quality', oEmbed.quality),\r\n        (sm2.wmode ? param('wmode', sm2.wmode) : ''),\r\n        param('bgcolor', sm2.bgColor),\r\n        param('hasPriority', 'true'),\r\n        (sm2.debugFlash ? param('FlashVars', oEmbed.FlashVars) : ''),\r\n        '</object>'\r\n      ].join('');\r\n\r\n    } else {\r\n\r\n      oMovie = doc.createElement('embed');\r\n      for (tmp in oEmbed) {\r\n        if (oEmbed.hasOwnProperty(tmp)) {\r\n          oMovie.setAttribute(tmp, oEmbed[tmp]);\r\n        }\r\n      }\r\n\r\n    }\r\n\r\n    initDebug();\r\n    extraClass = getSWFCSS();\r\n    oTarget = getDocument();\r\n\r\n    if (oTarget) {\r\n\r\n      sm2.oMC = (id(sm2.movieID) || doc.createElement('div'));\r\n\r\n      if (!sm2.oMC.id) {\r\n\r\n        sm2.oMC.id = sm2.movieID;\r\n        sm2.oMC.className = swfCSS.swfDefault + ' ' + extraClass;\r\n        s = null;\r\n        oEl = null;\r\n\r\n        if (!sm2.useFlashBlock) {\r\n          if (sm2.useHighPerformance) {\r\n            // on-screen at all times\r\n            s = {\r\n              position: 'fixed',\r\n              width: '8px',\r\n              height: '8px',\r\n              // >= 6px for flash to run fast, >= 8px to start up under Firefox/win32 in some cases. odd? yes.\r\n              bottom: '0px',\r\n              left: '0px',\r\n              overflow: 'hidden'\r\n            };\r\n          } else {\r\n            // hide off-screen, lower priority\r\n            s = {\r\n              position: 'absolute',\r\n              width: '6px',\r\n              height: '6px',\r\n              top: '-9999px',\r\n              left: '-9999px'\r\n            };\r\n            if (isRTL) {\r\n              s.left = Math.abs(parseInt(s.left, 10)) + 'px';\r\n            }\r\n          }\r\n        }\r\n\r\n        if (isWebkit) {\r\n          // soundcloud-reported render/crash fix, safari 5\r\n          sm2.oMC.style.zIndex = 10000;\r\n        }\r\n\r\n        if (!sm2.debugFlash) {\r\n          for (x in s) {\r\n            if (s.hasOwnProperty(x)) {\r\n              sm2.oMC.style[x] = s[x];\r\n            }\r\n          }\r\n        }\r\n\r\n        try {\r\n\r\n          if (!isIE) {\r\n            sm2.oMC.appendChild(oMovie);\r\n          }\r\n\r\n          oTarget.appendChild(sm2.oMC);\r\n\r\n          if (isIE) {\r\n            oEl = sm2.oMC.appendChild(doc.createElement('div'));\r\n            oEl.className = swfCSS.swfBox;\r\n            oEl.innerHTML = movieHTML;\r\n          }\r\n\r\n          appendSuccess = true;\r\n\r\n        } catch(e) {\r\n\r\n          throw new Error(str('domError') + ' \\n' + e.toString());\r\n\r\n        }\r\n\r\n      } else {\r\n\r\n        // SM2 container is already in the document (eg. flashblock use case)\r\n        sClass = sm2.oMC.className;\r\n        sm2.oMC.className = (sClass ? sClass + ' ' : swfCSS.swfDefault) + (extraClass ? ' ' + extraClass : '');\r\n        sm2.oMC.appendChild(oMovie);\r\n\r\n        if (isIE) {\r\n          oEl = sm2.oMC.appendChild(doc.createElement('div'));\r\n          oEl.className = swfCSS.swfBox;\r\n          oEl.innerHTML = movieHTML;\r\n        }\r\n\r\n        appendSuccess = true;\r\n\r\n      }\r\n\r\n    }\r\n\r\n    didAppend = true;\r\n\r\n    initMsg();\r\n\r\n    // sm2._wD(sm + ': Trying to load ' + movieURL + (!overHTTP && sm2.altURL ? ' (alternate URL)' : ''), 1);\r\n\r\n    return true;\r\n\r\n  };\r\n\r\n  initMovie = function() {\r\n\r\n    if (sm2.html5Only) {\r\n      createMovie();\r\n      return false;\r\n    }\r\n\r\n    // attempt to get, or create, movie (may already exist)\r\n    if (flash) return false;\r\n\r\n    if (!sm2.url) {\r\n\r\n      /**\r\n       * Something isn't right - we've reached init, but the soundManager url property has not been set.\r\n       * User has not called setup({url: ...}), or has not set soundManager.url (legacy use case) directly before init time.\r\n       * Notify and exit. If user calls setup() with a url: property, init will be restarted as in the deferred loading case.\r\n       */\r\n\r\n       _wDS('noURL');\r\n       return false;\r\n\r\n    }\r\n\r\n    // inline markup case\r\n    flash = sm2.getMovie(sm2.id);\r\n\r\n    if (!flash) {\r\n\r\n      if (!oRemoved) {\r\n\r\n        // try to create\r\n        createMovie(sm2.id, sm2.url);\r\n\r\n      } else {\r\n\r\n        // try to re-append removed movie after reboot()\r\n        if (!isIE) {\r\n          sm2.oMC.appendChild(oRemoved);\r\n        } else {\r\n          sm2.oMC.innerHTML = oRemovedHTML;\r\n        }\r\n\r\n        oRemoved = null;\r\n        didAppend = true;\r\n\r\n      }\r\n\r\n      flash = sm2.getMovie(sm2.id);\r\n\r\n    }\r\n\r\n    if (typeof sm2.oninitmovie === 'function') {\r\n      setTimeout(sm2.oninitmovie, 1);\r\n    }\r\n\r\n    // <d>\r\n    flushMessages();\r\n    // </d>\r\n\r\n    return true;\r\n\r\n  };\r\n\r\n  delayWaitForEI = function() {\r\n\r\n    setTimeout(waitForEI, 1000);\r\n\r\n  };\r\n\r\n  rebootIntoHTML5 = function() {\r\n\r\n    // special case: try for a reboot with preferFlash: false, if 100% HTML5 mode is possible and useFlashBlock is not enabled.\r\n\r\n    window.setTimeout(function() {\r\n\r\n      complain(smc + 'useFlashBlock is false, 100% HTML5 mode is possible. Rebooting with preferFlash: false...');\r\n\r\n      sm2.setup({\r\n        preferFlash: false\r\n      }).reboot();\r\n\r\n      // if for some reason you want to detect this case, use an ontimeout() callback and look for html5Only and didFlashBlock == true.\r\n      sm2.didFlashBlock = true;\r\n\r\n      sm2.beginDelayedInit();\r\n\r\n    }, 1);\r\n\r\n  };\r\n\r\n  waitForEI = function() {\r\n\r\n    var p,\r\n        loadIncomplete = false;\r\n\r\n    if (!sm2.url) {\r\n      // No SWF url to load (noURL case) - exit for now. Will be retried when url is set.\r\n      return;\r\n    }\r\n\r\n    if (waitingForEI) {\r\n      return;\r\n    }\r\n\r\n    waitingForEI = true;\r\n    event.remove(window, 'load', delayWaitForEI);\r\n\r\n    if (hasFlash && tryInitOnFocus && !isFocused) {\r\n      // Safari won't load flash in background tabs, only when focused.\r\n      _wDS('waitFocus');\r\n      return;\r\n    }\r\n\r\n    if (!didInit) {\r\n      p = sm2.getMoviePercent();\r\n      if (p > 0 && p < 100) {\r\n        loadIncomplete = true;\r\n      }\r\n    }\r\n\r\n    setTimeout(function() {\r\n\r\n      p = sm2.getMoviePercent();\r\n\r\n      if (loadIncomplete) {\r\n        // special case: if movie *partially* loaded, retry until it's 100% before assuming failure.\r\n        waitingForEI = false;\r\n        sm2._wD(str('waitSWF'));\r\n        window.setTimeout(delayWaitForEI, 1);\r\n        return;\r\n      }\r\n\r\n      // <d>\r\n      if (!didInit) {\r\n\r\n        sm2._wD(sm + ': No Flash response within expected time. Likely causes: ' + (p === 0 ? 'SWF load failed, ' : '') + 'Flash blocked or JS-Flash security error.' + (sm2.debugFlash ? ' ' + str('checkSWF') : ''), 2);\r\n\r\n        if (!overHTTP && p) {\r\n\r\n          _wDS('localFail', 2);\r\n\r\n          if (!sm2.debugFlash) {\r\n            _wDS('tryDebug', 2);\r\n          }\r\n\r\n        }\r\n\r\n        if (p === 0) {\r\n\r\n          // if 0 (not null), probably a 404.\r\n          sm2._wD(str('swf404', sm2.url), 1);\r\n\r\n        }\r\n\r\n        debugTS('flashtojs', false, ': Timed out' + (overHTTP ? ' (Check flash security or flash blockers)' : ' (No plugin/missing SWF?)'));\r\n\r\n      }\r\n      // </d>\r\n\r\n      // give up / time-out, depending\r\n\r\n      if (!didInit && okToDisable) {\r\n\r\n        if (p === null) {\r\n\r\n          // SWF failed to report load progress. Possibly blocked.\r\n\r\n          if (sm2.useFlashBlock || sm2.flashLoadTimeout === 0) {\r\n\r\n            if (sm2.useFlashBlock) {\r\n\r\n              flashBlockHandler();\r\n\r\n            }\r\n\r\n            _wDS('waitForever');\r\n\r\n          } else if (!sm2.useFlashBlock && canIgnoreFlash) {\r\n\r\n            // no custom flash block handling, but SWF has timed out. Will recover if user unblocks / allows SWF load.\r\n            rebootIntoHTML5();\r\n\r\n          } else {\r\n\r\n            _wDS('waitForever');\r\n\r\n            // fire any regular registered ontimeout() listeners.\r\n            processOnEvents({\r\n              type: 'ontimeout',\r\n              ignoreInit: true,\r\n              error: {\r\n                type: 'INIT_FLASHBLOCK'\r\n              }\r\n            });\r\n\r\n          }\r\n\r\n        } else if (sm2.flashLoadTimeout === 0) {\r\n\r\n          // SWF loaded? Shouldn't be a blocking issue, then.\r\n\r\n          _wDS('waitForever');\r\n\r\n        } else if (!sm2.useFlashBlock && canIgnoreFlash) {\r\n\r\n          rebootIntoHTML5();\r\n\r\n        } else {\r\n\r\n          failSafely(true);\r\n\r\n        }\r\n\r\n      }\r\n\r\n    }, sm2.flashLoadTimeout);\r\n\r\n  };\r\n\r\n  handleFocus = function() {\r\n\r\n    function cleanup() {\r\n      event.remove(window, 'focus', handleFocus);\r\n    }\r\n\r\n    if (isFocused || !tryInitOnFocus) {\r\n      // already focused, or not special Safari background tab case\r\n      cleanup();\r\n      return true;\r\n    }\r\n\r\n    okToDisable = true;\r\n    isFocused = true;\r\n    _wDS('gotFocus');\r\n\r\n    // allow init to restart\r\n    waitingForEI = false;\r\n\r\n    // kick off ExternalInterface timeout, now that the SWF has started\r\n    delayWaitForEI();\r\n\r\n    cleanup();\r\n    return true;\r\n\r\n  };\r\n\r\n  flushMessages = function() {\r\n\r\n    // <d>\r\n\r\n    // SM2 pre-init debug messages\r\n    if (messages.length) {\r\n      sm2._wD('SoundManager 2: ' + messages.join(' '), 1);\r\n      messages = [];\r\n    }\r\n\r\n    // </d>\r\n\r\n  };\r\n\r\n  showSupport = function() {\r\n\r\n    // <d>\r\n\r\n    flushMessages();\r\n\r\n    var item, tests = [];\r\n\r\n    if (sm2.useHTML5Audio && sm2.hasHTML5) {\r\n      for (item in sm2.audioFormats) {\r\n        if (sm2.audioFormats.hasOwnProperty(item)) {\r\n          tests.push(item + ' = ' + sm2.html5[item] + (!sm2.html5[item] && needsFlash && sm2.flash[item] ? ' (using flash)' : (sm2.preferFlash && sm2.flash[item] && needsFlash ? ' (preferring flash)' : (!sm2.html5[item] ? ' (' + (sm2.audioFormats[item].required ? 'required, ' : '') + 'and no flash support)' : ''))));\r\n        }\r\n      }\r\n      sm2._wD('SoundManager 2 HTML5 support: ' + tests.join(', '), 1);\r\n    }\r\n\r\n    // </d>\r\n\r\n  };\r\n\r\n  initComplete = function(bNoDisable) {\r\n\r\n    if (didInit) return false;\r\n\r\n    if (sm2.html5Only) {\r\n      // all good.\r\n      _wDS('sm2Loaded', 1);\r\n      didInit = true;\r\n      initUserOnload();\r\n      debugTS('onload', true);\r\n      return true;\r\n    }\r\n\r\n    var wasTimeout = (sm2.useFlashBlock && sm2.flashLoadTimeout && !sm2.getMoviePercent()),\r\n        result = true,\r\n        error;\r\n\r\n    if (!wasTimeout) {\r\n      didInit = true;\r\n    }\r\n\r\n    error = {\r\n      type: (!hasFlash && needsFlash ? 'NO_FLASH' : 'INIT_TIMEOUT')\r\n    };\r\n\r\n    sm2._wD('SoundManager 2 ' + (disabled ? 'failed to load' : 'loaded') + ' (' + (disabled ? 'Flash security/load error' : 'OK') + ') ' + String.fromCharCode(disabled ? 10006 : 10003), disabled ? 2 : 1);\r\n\r\n    if (disabled || bNoDisable) {\r\n\r\n      if (sm2.useFlashBlock && sm2.oMC) {\r\n        sm2.oMC.className = getSWFCSS() + ' ' + (sm2.getMoviePercent() === null ? swfCSS.swfTimedout : swfCSS.swfError);\r\n      }\r\n\r\n      processOnEvents({\r\n        type: 'ontimeout',\r\n        error: error,\r\n        ignoreInit: true\r\n      });\r\n\r\n      debugTS('onload', false);\r\n      catchError(error);\r\n\r\n      result = false;\r\n\r\n    } else {\r\n\r\n      debugTS('onload', true);\r\n\r\n    }\r\n\r\n    if (!disabled) {\r\n\r\n      if (sm2.waitForWindowLoad && !windowLoaded) {\r\n\r\n        _wDS('waitOnload');\r\n        event.add(window, 'load', initUserOnload);\r\n\r\n      } else {\r\n\r\n        // <d>\r\n        if (sm2.waitForWindowLoad && windowLoaded) {\r\n          _wDS('docLoaded');\r\n        }\r\n        // </d>\r\n\r\n        initUserOnload();\r\n\r\n      }\r\n\r\n    }\r\n\r\n    return result;\r\n\r\n  };\r\n\r\n  /**\r\n   * apply top-level setupOptions object as local properties, eg., this.setupOptions.flashVersion -> this.flashVersion (soundManager.flashVersion)\r\n   * this maintains backward compatibility, and allows properties to be defined separately for use by soundManager.setup().\r\n   */\r\n\r\n  setProperties = function() {\r\n\r\n    var i,\r\n        o = sm2.setupOptions;\r\n\r\n    for (i in o) {\r\n\r\n      if (o.hasOwnProperty(i)) {\r\n\r\n        // assign local property if not already defined\r\n\r\n        if (sm2[i] === _undefined) {\r\n\r\n          sm2[i] = o[i];\r\n\r\n        } else if (sm2[i] !== o[i]) {\r\n\r\n          // legacy support: write manually-assigned property (eg., soundManager.url) back to setupOptions to keep things in sync\r\n          sm2.setupOptions[i] = sm2[i];\r\n\r\n        }\r\n\r\n      }\r\n\r\n    }\r\n\r\n  };\r\n\r\n\r\n  init = function() {\r\n\r\n    // called after onload()\r\n\r\n    if (didInit) {\r\n      _wDS('didInit');\r\n      return false;\r\n    }\r\n\r\n    function cleanup() {\r\n      event.remove(window, 'load', sm2.beginDelayedInit);\r\n    }\r\n\r\n    if (sm2.html5Only) {\r\n\r\n      if (!didInit) {\r\n        // we don't need no steenking flash!\r\n        cleanup();\r\n        sm2.enabled = true;\r\n        initComplete();\r\n      }\r\n\r\n      return true;\r\n\r\n    }\r\n\r\n    // flash path\r\n    initMovie();\r\n\r\n    try {\r\n\r\n      // attempt to talk to Flash\r\n      flash._externalInterfaceTest(false);\r\n\r\n      /**\r\n       * Apply user-specified polling interval, OR, if \"high performance\" set, faster vs. default polling\r\n       * (determines frequency of whileloading/whileplaying callbacks, effectively driving UI framerates)\r\n       */\r\n      setPolling(true, (sm2.flashPollingInterval || (sm2.useHighPerformance ? 10 : 50)));\r\n\r\n      if (!sm2.debugMode) {\r\n        // stop the SWF from making debug output calls to JS\r\n        flash._disableDebug();\r\n      }\r\n\r\n      sm2.enabled = true;\r\n      debugTS('jstoflash', true);\r\n\r\n      if (!sm2.html5Only) {\r\n        // prevent browser from showing cached page state (or rather, restoring \"suspended\" page state) via back button, because flash may be dead\r\n        // http://www.webkit.org/blog/516/webkit-page-cache-ii-the-unload-event/\r\n        event.add(window, 'unload', doNothing);\r\n      }\r\n\r\n    } catch(e) {\r\n\r\n      sm2._wD('js/flash exception: ' + e.toString());\r\n\r\n      debugTS('jstoflash', false);\r\n\r\n      catchError({\r\n        type: 'JS_TO_FLASH_EXCEPTION',\r\n        fatal: true\r\n      });\r\n\r\n      // don't disable, for reboot()\r\n      failSafely(true);\r\n\r\n      initComplete();\r\n\r\n      return false;\r\n\r\n    }\r\n\r\n    initComplete();\r\n\r\n    // disconnect events\r\n    cleanup();\r\n\r\n    return true;\r\n\r\n  };\r\n\r\n  domContentLoaded = function() {\r\n\r\n    if (didDCLoaded) return false;\r\n\r\n    didDCLoaded = true;\r\n\r\n    // assign top-level soundManager properties eg. soundManager.url\r\n    setProperties();\r\n\r\n    initDebug();\r\n\r\n    if (!hasFlash && sm2.hasHTML5) {\r\n\r\n      sm2._wD('SoundManager 2: No Flash detected' + (!sm2.useHTML5Audio ? ', enabling HTML5.' : '. Trying HTML5-only mode.'), 1);\r\n\r\n      sm2.setup({\r\n        useHTML5Audio: true,\r\n        // make sure we aren't preferring flash, either\r\n        // TODO: preferFlash should not matter if flash is not installed. Currently, stuff breaks without the below tweak.\r\n        preferFlash: false\r\n      });\r\n\r\n    }\r\n\r\n    testHTML5();\r\n\r\n    if (!hasFlash && needsFlash) {\r\n\r\n      messages.push(strings.needFlash);\r\n\r\n      // TODO: Fatal here vs. timeout approach, etc.\r\n      // hack: fail sooner.\r\n      sm2.setup({\r\n        flashLoadTimeout: 1\r\n      });\r\n\r\n    }\r\n\r\n    if (doc.removeEventListener) {\r\n      doc.removeEventListener('DOMContentLoaded', domContentLoaded, false);\r\n    }\r\n\r\n    initMovie();\r\n\r\n    return true;\r\n\r\n  };\r\n\r\n  domContentLoadedIE = function() {\r\n\r\n    if (doc.readyState === 'complete') {\r\n      domContentLoaded();\r\n      doc.detachEvent('onreadystatechange', domContentLoadedIE);\r\n    }\r\n\r\n    return true;\r\n\r\n  };\r\n\r\n  winOnLoad = function() {\r\n\r\n    // catch edge case of initComplete() firing after window.load()\r\n    windowLoaded = true;\r\n\r\n    // catch case where DOMContentLoaded has been sent, but we're still in doc.readyState = 'interactive'\r\n    domContentLoaded();\r\n\r\n    event.remove(window, 'load', winOnLoad);\r\n\r\n  };\r\n\r\n  // sniff up-front\r\n  detectFlash();\r\n\r\n  // focus and window load, init (primarily flash-driven)\r\n  event.add(window, 'focus', handleFocus);\r\n  event.add(window, 'load', delayWaitForEI);\r\n  event.add(window, 'load', winOnLoad);\r\n\r\n  if (doc.addEventListener) {\r\n\r\n    doc.addEventListener('DOMContentLoaded', domContentLoaded, false);\r\n\r\n  } else if (doc.attachEvent) {\r\n\r\n    doc.attachEvent('onreadystatechange', domContentLoadedIE);\r\n\r\n  } else {\r\n\r\n    // no add/attachevent support - safe to assume no JS -> Flash either\r\n    debugTS('onload', false);\r\n    catchError({\r\n      type: 'NO_DOM2_EVENTS',\r\n      fatal: true\r\n    });\r\n\r\n  }\r\n\r\n} // SoundManager()\r\n\r\n// SM2_DEFER details: http://www.schillmania.com/projects/soundmanager2/doc/getstarted/#lazy-loading\r\n\r\nif (window.SM2_DEFER === _undefined || !SM2_DEFER) {\r\n  soundManager = new SoundManager();\r\n}\r\n\r\n/**\r\n * SoundManager public interfaces\r\n * ------------------------------\r\n */\r\n\r\nif (typeof module === 'object' && module && typeof module.exports === 'object') {\r\n\r\n  /**\r\n   * commonJS module\r\n   */\r\n\r\n  module.exports.SoundManager = SoundManager;\r\n  module.exports.soundManager = soundManager;\r\n\r\n} else if (typeof define === 'function' && define.amd) {\r\n\r\n  /**\r\n   * AMD - requireJS\r\n   * basic usage:\r\n   * require([\"/path/to/soundmanager2.js\"], function(SoundManager) {\r\n   *   SoundManager.getInstance().setup({\r\n   *     url: '/swf/',\r\n   *     onready: function() { ... }\r\n   *   })\r\n   * });\r\n   *\r\n   * SM2_DEFER usage:\r\n   * window.SM2_DEFER = true;\r\n   * require([\"/path/to/soundmanager2.js\"], function(SoundManager) {\r\n   *   SoundManager.getInstance(function() {\r\n   *     var soundManager = new SoundManager.constructor();\r\n   *     soundManager.setup({\r\n   *       url: '/swf/',\r\n   *       ...\r\n   *     });\r\n   *     ...\r\n   *     soundManager.beginDelayedInit();\r\n   *     return soundManager;\r\n   *   })\r\n   * });\r\n   */\r\n\r\n  define(function() {\r\n    /**\r\n     * Retrieve the global instance of SoundManager.\r\n     * If a global instance does not exist it can be created using a callback.\r\n     *\r\n     * @param {Function} smBuilder Optional: Callback used to create a new SoundManager instance\r\n     * @return {SoundManager} The global SoundManager instance\r\n     */\r\n    function getInstance(smBuilder) {\r\n      if (!window.soundManager && smBuilder instanceof Function) {\r\n        var instance = smBuilder(SoundManager);\r\n        if (instance instanceof SoundManager) {\r\n          window.soundManager = instance;\r\n        }\r\n      }\r\n      return window.soundManager;\r\n    }\r\n    return {\r\n      constructor: SoundManager,\r\n      getInstance: getInstance\r\n    };\r\n  });\r\n\r\n}\r\n\r\n// standard browser case\r\n\r\n// constructor\r\nwindow.SoundManager = SoundManager;\r\n\r\n/**\r\n * note: SM2 requires a window global due to Flash, which makes calls to window.soundManager.\r\n * Flash may not always be needed, but this is not known until async init and SM2 may even \"reboot\" into Flash mode.\r\n */\r\n\r\n// public API, flash callbacks etc.\r\nwindow.soundManager = soundManager;\r\n\r\n}(window));\r\n","'use strict';\n\nexports.__esModule = true;\nexports.removeCookie = exports.setRawCookie = exports.getRawCookie = exports.setCookie = exports.getAllCookies = exports.getCookie = exports.isCookieEnabled = exports.remove = exports.setRaw = exports.getRaw = exports.set = exports.getAll = exports.get = exports.isEnabled = undefined;\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar _util = require('./util');\n\n// Check if the browser cookie is enabled.\nfunction isEnabled() {\n  var key = '@key@';\n  var value = '1';\n  var re = new RegExp('(?:^|; )' + key + '=' + value + '(?:;|$)');\n\n  document.cookie = key + '=' + value;\n\n  var enabled = re.test(document.cookie);\n\n  if (enabled) {\n    // eslint-disable-next-line\n    remove(key);\n  }\n\n  return enabled;\n}\n\n// Get the cookie value by key.\nfunction get(key) {\n  var decoder = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : decodeURIComponent;\n\n  if (typeof key !== 'string' || !key) {\n    return null;\n  }\n\n  var reKey = new RegExp('(?:^|; )' + (0, _util.escapeRe)(key) + '(?:=([^;]*))?(?:;|$)');\n  var match = reKey.exec(document.cookie);\n\n  if (match === null) {\n    return null;\n  }\n\n  return typeof decoder === 'function' ? decoder(match[1]) : match[1];\n}\n\n// The all cookies\nfunction getAll() {\n  var decoder = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : decodeURIComponent;\n\n  var reKey = /(?:^|; )([^=]+?)(?:=([^;]*))?(?:;|$)/g;\n  var cookies = {};\n  var match = void 0;\n\n  /* eslint-disable no-cond-assign */\n  while (match = reKey.exec(document.cookie)) {\n    reKey.lastIndex = match.index + match.length - 1;\n    cookies[match[1]] = typeof decoder === 'function' ? decoder(match[2]) : match[2];\n  }\n\n  return cookies;\n}\n\n// Set a cookie.\nfunction set(key, value) {\n  var encoder = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : encodeURIComponent;\n  var attrs = arguments[3];\n\n  if ((typeof encoder === 'undefined' ? 'undefined' : _typeof(encoder)) === 'object' && encoder !== null) {\n    /* eslint-disable no-param-reassign */\n    attrs = encoder;\n    encoder = encodeURIComponent;\n    /* eslint-enable no-param-reassign */\n  }\n  var attrsStr = (0, _util.convert)(attrs || {});\n  var valueStr = typeof encoder === 'function' ? encoder(value) : value;\n  var newCookie = key + '=' + valueStr + attrsStr;\n  document.cookie = newCookie;\n}\n\n// Remove a cookie by the specified key.\nfunction remove(key, options) {\n  var opts = { expires: -1 };\n\n  if (options && options.domain) {\n    opts.domain = options.domain;\n  }\n\n  return set(key, 'a', opts);\n}\n\n// Get the cookie's value without decoding.\nfunction getRaw(key) {\n  return get(key, null);\n}\n\n// Set a cookie without encoding the value.\nfunction setRaw(key, value, opts) {\n  return set(key, value, null, opts);\n}\n\nexports.isEnabled = isEnabled;\nexports.get = get;\nexports.getAll = getAll;\nexports.set = set;\nexports.getRaw = getRaw;\nexports.setRaw = setRaw;\nexports.remove = remove;\nexports.isCookieEnabled = isEnabled;\nexports.getCookie = get;\nexports.getAllCookies = getAll;\nexports.setCookie = set;\nexports.getRawCookie = getRaw;\nexports.setRawCookie = setRaw;\nexports.removeCookie = remove;","'use strict';\n\nexports.__esModule = true;\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nfunction hasOwn(obj, key) {\n  return Object.prototype.hasOwnProperty.call(obj, key);\n}\n\n// Escape special characters.\nfunction escapeRe(str) {\n  return str.replace(/[.*+?^$|[\\](){}\\\\-]/g, '\\\\$&');\n}\n\n// Return a future date by the given string.\nfunction computeExpires(str) {\n  var lastCh = str.charAt(str.length - 1);\n  var value = parseInt(str, 10);\n  var expires = new Date();\n\n  switch (lastCh) {\n    case 'Y':\n      expires.setFullYear(expires.getFullYear() + value);break;\n    case 'M':\n      expires.setMonth(expires.getMonth() + value);break;\n    case 'D':\n      expires.setDate(expires.getDate() + value);break;\n    case 'h':\n      expires.setHours(expires.getHours() + value);break;\n    case 'm':\n      expires.setMinutes(expires.getMinutes() + value);break;\n    case 's':\n      expires.setSeconds(expires.getSeconds() + value);break;\n    default:\n      expires = new Date(str);\n  }\n\n  return expires;\n}\n\n// Convert an object to a cookie option string.\nfunction convert(opts) {\n  var res = '';\n\n  // eslint-disable-next-line\n  for (var key in opts) {\n    if (hasOwn(opts, key)) {\n      if (/^expires$/i.test(key)) {\n        var expires = opts[key];\n\n        if ((typeof expires === 'undefined' ? 'undefined' : _typeof(expires)) !== 'object') {\n          expires += typeof expires === 'number' ? 'D' : '';\n          expires = computeExpires(expires);\n        }\n        res += ';' + key + '=' + expires.toUTCString();\n      } else if (/^secure$/.test(key)) {\n        if (opts[key]) {\n          res += ';' + key;\n        }\n      } else {\n        res += ';' + key + '=' + opts[key];\n      }\n    }\n  }\n\n  if (!hasOwn(opts, 'path')) {\n    res += ';path=/';\n  }\n\n  return res;\n}\n\nexports.hasOwn = hasOwn;\nexports.escapeRe = escapeRe;\nexports.computeExpires = computeExpires;\nexports.convert = convert;","/*global module:false */\n\n/*\n *  Events mixin from Backbone \n *\n *  Backbone.js 1.0.0\n *\n *  (c) 2010-2013 Jeremy Ashkenas, DocumentCloud Inc.\n *  Backbone may be freely distributed under the MIT license.\n *  For all details and documentation:\n *  http:*backbonejs.org\n *\n *  A module that can be mixed in to *any object* in order to provide it with\n *  custom events. You may bind with `on` or remove with `off` callback functions\n *  to an event; trigger`-ing an event fires all callbacks in succession.\n *\n *  var object = {};\n *  _.extend(object, Backbone.Events);\n *  object.on('expand', function(){ alert('expanded'); });\n *  object.trigger('expand');\n */\n\nvar _ = (typeof window !== \"undefined\" ? window['_'] : typeof global !== \"undefined\" ? global['_'] : null);\n\nvar slice = Array.prototype.slice;\n\nvar Events = {\n\n  // Bind an event to a `callback` function. Passing `\"all\"` will bind\n  // the callback to all events fired.\n  on: function(name, callback, context) {\n    if (!eventsApi(this, 'on', name, [callback, context]) || !callback) { return this; }\n    if (!this._events) { this._events = {}; }\n    var events = this._events[name] || (this._events[name] = []);\n    events.push({callback: callback, context: context, ctx: context || this});\n    return this;\n  },\n\n  // Bind an event to only be triggered a single time. After the first time\n  // the callback is invoked, it will be removed.\n  once: function(name, callback, context) {\n    if (!eventsApi(this, 'once', name, [callback, context]) || !callback) { return this; }\n    var self = this;\n    var once = _.once(function() {\n      self.off(name, once);\n      callback.apply(this, arguments);\n    });\n    once._callback = callback;\n    return this.on(name, once, context);\n  },\n\n  // Remove one or many callbacks. If `context` is null, removes all\n  // callbacks with that function. If `callback` is null, removes all\n  // callbacks for the event. If `name` is null, removes all bound\n  // callbacks for all events.\n  off: function(name, callback, context) {\n    var retain, ev, events, names, i, l, j, k;\n    if (!this._events || !eventsApi(this, 'off', name, [callback, context])) { return this; }\n    if (!name && !callback && !context) {\n      this._events = {};\n      return this;\n    }\n\n    names = name ? [name] : _.keys(this._events);\n    for (i = 0, l = names.length; i < l; i++) {\n      name = names[i];\n      if (events = this._events[name]) {\n        this._events[name] = retain = [];\n        if (callback || context) {\n          for (j = 0, k = events.length; j < k; j++) {\n            ev = events[j];\n            if ((callback && callback !== ev.callback && callback !== ev.callback._callback) ||\n                (context && context !== ev.context)) {\n              retain.push(ev);\n            }\n          }\n        }\n        if (!retain.length) { delete this._events[name]; }\n      }\n    }\n\n    return this;\n  },\n\n  // Trigger one or many events, firing all bound callbacks. Callbacks are\n  // passed the same arguments as `trigger` is, apart from the event name\n  // (unless you're listening on `\"all\"`, which will cause your callback to\n  // receive the true name of the event as the first argument).\n  trigger: function(name) {\n    if (!this._events) { return this; }\n    var args = slice.call(arguments, 1);\n    if (!eventsApi(this, 'trigger', name, args)) { return this; }\n    var events = this._events[name];\n    var allEvents = this._events.all;\n    if (events) { triggerEvents(events, args); }\n    if (allEvents) { triggerEvents(allEvents, arguments); }\n    return this;\n  },\n\n  // Tell this object to stop listening to either specific events ... or\n  // to every object it's currently listening to.\n  stopListening: function(obj, name, callback) {\n    var listeners = this._listeners;\n    if (!listeners) { return this; }\n    var deleteListener = !name && !callback;\n    if (typeof name === 'object') { callback = this; }\n    if (obj) { (listeners = {})[obj._listenerId] = obj; }\n    /*jshint forin:false */\n    for (var id in listeners) {\n      listeners[id].off(name, callback, this);\n      if (deleteListener) { delete this._listeners[id]; }\n    }\n    return this;\n  }\n\n};\n\n// Regular expression used to split event strings.\nvar eventSplitter = /\\s+/;\n\n// Implement fancy features of the Events API such as multiple event\n// names `\"change blur\"` and jQuery-style event maps `{change: action}`\n// in terms of the existing API.\nvar eventsApi = function(obj, action, name, rest) {\n  if (!name) { return true; }\n\n  // Handle event maps.\n  if (typeof name === 'object') {\n    /*jshint forin:false */\n    for (var key in name) {\n      obj[action].apply(obj, [key, name[key]].concat(rest));\n    }\n    return false;\n  }\n\n  // Handle space separated event names.\n  if (eventSplitter.test(name)) {\n    var names = name.split(eventSplitter);\n    for (var i = 0, l = names.length; i < l; i++) {\n      obj[action].apply(obj, [names[i]].concat(rest));\n    }\n    return false;\n  }\n\n  return true;\n};\n\n// A difficult-to-believe, but optimized internal dispatch function for\n// triggering events. Tries to keep the usual cases speedy (most internal\n// Backbone events have 3 arguments).\nvar triggerEvents = function(events, args) {\n  var ev, i = -1, l = events.length, a1 = args[0], a2 = args[1], a3 = args[2];\n  switch (args.length) {\n    case 0: while (++i < l) { (ev = events[i]).callback.call(ev.ctx); } return;\n    case 1: while (++i < l) { (ev = events[i]).callback.call(ev.ctx, a1); } return;\n    case 2: while (++i < l) { (ev = events[i]).callback.call(ev.ctx, a1, a2); } return;\n    case 3: while (++i < l) { (ev = events[i]).callback.call(ev.ctx, a1, a2, a3); } return;\n    default: while (++i < l) { (ev = events[i]).callback.apply(ev.ctx, args); }\n  }\n};\n\nvar listenMethods = {listenTo: 'on', listenToOnce: 'once'};\n\n// Inversion-of-control versions of `on` and `once`. Tell *this* object to\n// listen to an event in another object ... keeping track of what it's\n// listening to.\n_.each(listenMethods, function(implementation, method) {\n  Events[method] = function(obj, name, callback) {\n    var listeners = this._listeners || (this._listeners = {});\n    var id = obj._listenerId || (obj._listenerId = _.uniqueId('l'));\n    listeners[id] = obj;\n    if (typeof name === 'object') { callback = this; }\n    obj[implementation](name, callback, this);\n    return this;\n  };\n});\n\nmodule.exports = Events;\n","/*global module:false */\n\nmodule.exports = function() { };\n\n","/*global module:false */\n/*jshint camelcase:false */\n\n/*\n *  Feed Media Player View\n *\n *  This class will respond to events from an instance of Feed.Player\n *  and pass on user requests to the instance.\n *\n *  Create this with:\n *\n *    player = new Feed.Player(token, secret);\n *    playerView = new Feed.PlayerView(id, player);\n *\n *  Where 'id' is the ID of the DOM element containing the player.\n *  The player should have the following elements in it:\n *\n *  <div id='player-view'>\n *    <div>\n *      <div class='position'><div class='progress'></div></div> \n *      <span class='status'>\n *        <span class='track'>track</span> by <span class='artist'>artist</span> on <span class='release'>release</span>\n *      </span>\n *    </div>\n *    <div class='elapsed'></div>\n *    <div class='duration'></div>\n *    <button class='play-button button-enabled'>Play</button>\n *\n *    <button class='pause-button button-disabled'>Pause</button>\n *    <button class='skip-button button-disabled'>Skip</button>\n *    <button class='like-button button-disabled'>Like</button>\n *    <button class='dislike-button button-disabled'>Dislike</button>\n *  </div>\n *\n *  The buttons should all be 'button-disabled' except for the play\n *  button. As the player changes state, it will change the\n *  'button-disabled' classes to 'button-enabled'.\n *\n *  Note that the 'play-button' is visible before any playback starts,\n *  and while playback is paused. If you want a button that is only visible\n *  before any playback has started, then create a 'start-button'. If you\n *  want a button that is only visible when playback is paused, then\n *  create a 'resume-button'.\n *\n *  The 'like' button has an additional 'liked' class that is added to\n *  it when the current song has been liked. Likewise, the 'dislike' button\n *  has a 'disliked' class added to it when the current song has been\n *  disliked.\n *\n *  The 'status' section will display the current song and the 'position'\n *  section will display the elapsed time played and duration of the\n *  song while it is playing. Additionally, error messages (like 'out of\n *  music' or 'can't skip') will be displayed for a few seconds in the\n *  status section as well.\n *\n *  The rendering of the status can be changed by overriding\n *  the renderStatus(statusText) method, and the rendering of the position\n *  can be changed by overriding the renderPosition(positionInMillis, durationInMillis)\n *  methods. If you just want to override how the title of a song is\n *  rendered, then the formatPlay(play) method should be overridden.\n *\n *  The top level player element will have one of four classes set at\n *  all times: 'state-playing', 'state-idle', 'state-paused', or 'state-suspended'\n *\n */\n\nvar _ = (typeof window !== \"undefined\" ? window['_'] : typeof global !== \"undefined\" ? global['_'] : null);\nvar $ = (typeof window !== \"undefined\" ? window['jQuery'] : typeof global !== \"undefined\" ? global['jQuery'] : null);\n\nvar PlayerView = function(id, player) {\n  this.id = id;\n  this.alertId = null;\n  this.durationId = null;\n  this.startedPlayback = false;\n\n  this.$el = $('#' + id);\n  this.player = player;\n\n  this.player.on('placement', this._onPlacement, this);\n  this.player.on('play-started', this._onPlayStarted, this);\n  this.player.on('play-paused', this._onPlayPaused, this);\n  this.player.on('play-resumed', this._onPlayResumed, this);\n  this.player.on('play-completed', this._onPlayCompleted, this);\n  this.player.on('play-liked', this._onPlayLiked, this);\n  this.player.on('play-unliked', this._onPlayUnliked, this);\n  this.player.on('play-disliked', this._onPlayDisliked, this);\n  this.player.on('plays-exhausted', this._onPlaysExhausted, this);\n  this.player.on('skip-denied', this._onSkipDenied, this);\n  this.player.on('suspend', this._onSuspend, this);\n\n  this._enableButtonsBasedOnState();\n  this.displayText = this.originalDisplayText = this.$('.status').html();\n  this.renderStatus();\n\n  this.$el.on('click', '.status', _.bind(this._onStatusClick, this));\n  this.$el.on('click', '.play-button, .start-button, .resume-button', _.bind(this._onPlayButtonClick, this));\n  this.$el.on('click', '.pause-button', _.bind(this._onPauseButtonClick, this));\n  this.$el.on('click', '.skip-button', _.bind(this._onSkipButtonClick, this));\n  this.$el.on('click', '.like-button', _.bind(this._onLikeButtonClick, this));\n  this.$el.on('click', '.dislike-button', _.bind(this._onDislikeButtonClick, this));\n};\n\nPlayerView.prototype._onStatusClick = function() {\n  var state = this.player.getCurrentState();\n\n  if (state === 'playing') {\n    this._onPauseButtonClick();\n\n  } else {\n    this._onPlayButtonClick();\n\n  }\n};\n\nPlayerView.prototype._onPlayButtonClick = function() {\n  this.player.play();\n};\n\nPlayerView.prototype._onPauseButtonClick = function() {\n  this.player.pause();\n};\n\nPlayerView.prototype._onSkipButtonClick = function() {\n  this.player.skip();\n};\n\nPlayerView.prototype._onLikeButtonClick = function(e) {\n  if ($(e.target).closest('.like-button').is('.liked')) {\n    this.player.unlike();\n\n  } else {\n    this.player.like();\n\n  }\n};\n\nPlayerView.prototype._onDislikeButtonClick = function() {\n  this.player.dislike();\n};\n\nPlayerView.prototype.$ = function(arg) {\n  return this.$el.find(arg);\n};\n\nPlayerView.prototype._onPlacement = function(placement) {\n  if (!this.originalDisplayText) {\n    this.originalDisplayText = this.formatPlacement(placement);\n\n    this.renderStatus(this.originalDisplayText);\n  }\n};\n\nPlayerView.prototype.formatPlacement = function(placement) {\n  return 'Tune in to <em class=\\'placement\\'>' + placement.name + '</em>';\n};\n\nPlayerView.prototype._onPlayStarted = function(play) {\n  this.startedPlayback = true;\n\n  this.renderStatus(this.formatPlay(play));\n  this._enableButtonsBasedOnState();\n  this._setLikeStatus(play.liked);\n  this._enablePositionTracker();\n};\n\nPlayerView.prototype._enablePositionTracker = function() {\n  var playerView = this;\n\n  if (!this.durationId) {\n    this.durationId = window.setInterval(function() {\n      playerView.renderPosition(playerView.player.getPosition(), playerView.player.getDuration());\n    }, 500);\n  }\n};\n\nPlayerView.prototype._setLikeStatus = function(liked) {\n  if (liked === true) {\n    // highlight the like button\n    this.$('.like-button').addClass('liked');\n    this.$('.dislike-button').removeClass('disliked');\n\n  } else if (liked === false) {\n    // highlight the dislike button\n    this.$('.like-button').removeClass('liked');\n    this.$('.dislike-button').addClass('disliked');\n\n  } else {\n    // nobody gets highlighted\n    this.$('.like-button').removeClass('liked');\n    this.$('.dislike-button').removeClass('disliked');\n\n  }\n};\n\nPlayerView.prototype._disablePositionTracker = function() {\n  if (this.durationId) {\n    window.clearInterval(this.durationId);\n    this.durationId = null;\n  }\n};\n\nPlayerView.prototype._onPlayResumed = function() {\n  this._enablePositionTracker();\n  \n  this._enableButtonsBasedOnState();\n};\n\nPlayerView.prototype._onPlayPaused = function() {\n  this._disablePositionTracker();\n\n  this._enableButtonsBasedOnState();\n};\n\nPlayerView.prototype._onPlayCompleted = function() {\n  this.renderPosition(0, 0);\n  this._enableButtonsBasedOnState();\n};\n\nPlayerView.prototype._onPlaysExhausted = function() {\n  this.renderStatus(this.originalDisplayText);\n  this.renderAlert('There is no more music to play in this station!');\n\n  this._enableButtonsBasedOnState();\n};\n\nPlayerView.prototype._onPlayLiked = function() {\n  this._setLikeStatus(true);\n};\n\nPlayerView.prototype._onPlayDisliked = function() {\n  this._setLikeStatus(false);\n};\n\nPlayerView.prototype._onPlayUnliked = function() {\n  this._setLikeStatus();\n};\n\nPlayerView.prototype._onSkipDenied = function() {\n  this.renderAlert('Sorry you\\'ve temporarily run out of skips!');\n};\n\nPlayerView.prototype.formatPlay = function(play) {\n  return '<span class=\\'track\\'>' + play.audio_file.track.title +\n     '</span> by <span class=\\'artist\\'>' + play.audio_file.artist.name +\n     '</span> on <span class=\\'release\\'>' + play.audio_file.release.title + '</span>';\n};\n\nPlayerView.prototype.renderStatus = function(displayText) {\n  if (displayText !== undefined) {\n    this.displayText = displayText;\n  }\n\n  if (!this.alertId) {\n    this.$('.status').html(this.displayText).removeClass('alert');\n  }\n};\n\nPlayerView.prototype.renderPosition = function(position, duration) {\n  this.$('.elapsed').html(formatTime(position));\n  this.$('.duration').html(formatTime(duration));\n\n  if (duration === 0) {\n    this.$('.progress').css('width', '0');\n  } else {\n    var elapsed = Math.round((position + 1000) / duration * 100);\n    elapsed = (elapsed > 100) ? 100 : elapsed;\n    this.$('.progress').css('width', elapsed + '%');\n  }\n};\n\nfunction formatTime(millis) {\n  var asSeconds = Math.floor(millis / 1000),\n      secondsPart = (asSeconds % 60),\n      minutesPart = Math.floor(asSeconds / 60);\n\n  if (secondsPart < 10) {\n    secondsPart = '0' + secondsPart;\n  }\n\n  return minutesPart + ':' + secondsPart;\n}\n\nPlayerView.prototype.renderAlert = function(alertText) {\n  if (this.alertId) {\n    window.clearTimeout(this.alertId);\n  }\n\n  this.$('.status').html(alertText).addClass('alert');\n\n  var playerView = this;\n  this.alertId = window.setTimeout(function() {\n    playerView.alertId = null;\n    playerView.renderStatus();\n  }, 3000);\n};\n\nPlayerView.prototype._onSuspend = function() {\n  this._enableButtonsBasedOnState();\n};\n\nPlayerView.prototype._enableButtonsBasedOnState = function() {\n  var state = this.player.getCurrentState(),\n      toEnable,\n      toDisable;\n\n  switch (state) {\n    case 'playing':\n      toEnable = '.pause-button, .like-button, .dislike-button';\n      toDisable = '.play-button, .start-button, .resume-button';\n\n      if (this.player.maybeCanSkip()) {\n        toEnable += ', .skip-button';\n      } else {\n        toDisable += ', .skip-button';\n      }\n      break;\n\n    case 'paused':\n      toEnable = '.play-button, .resume-button, .like-button, .dislike-button';\n      toDisable = '.pause-button, .start-button';\n\n      if (this.player.maybeCanSkip()) {\n        toEnable += ', .skip-button';\n      } else {\n        toDisable += ', .skip-button';\n      }\n      break;\n\n    case 'suspended':\n      toEnable = '';\n      toDisable = '.play-button, .resume-button, .like-button, .dislike-button, .pause-button, .start-button, .skip-button';\n\n      break;\n\n\n    /* case 'idle': */\n    default:\n      toEnable = '.play-button, .start-button';\n      toDisable = '.resume-button, .pause-button, .like-button, .dislike-button, .skip-button';\n      break;\n  }\n\n  this.$(toDisable)\n    .removeClass('button-enabled')\n    .addClass('button-disabled')\n    .attr('disabled', 'true');\n\n  if (toEnable) {\n    this.$(toEnable)\n      .removeClass('button-disabled')\n      .addClass('button-enabled')\n      .removeAttr('disabled');\n  }\n\n  this.$el\n    .removeClass('state-playing state-paused state-idle state-suspended')\n    .addClass('state-' + state);\n\n};\n\nmodule.exports = PlayerView;\n\n\n","/*global module:false */\n/*jshint camelcase:false */\n\n/*\n *  Feed Media Player\n *\n *  This class requests and plays audio files from the feed servers. It\n *  makes use of the Session class to communicate with the server. There\n *  should technically only ever be one instance of this class in a page.\n *  This class does no UI - that should be handled by Feed.PlayerView \n *  or similar.\n *\n *  Create this with:\n *    player = new Feed.Player(token, secret[, options])\n *\n *  'options' may be any option that 'Feed.Session' and 'Feed.Speaker' accept\n *\n *  Then set the optional placement and station that we're pulling\n *  from:\n *\n *    player.setPlacementId(xxx);\n *      set placement on session, which should stop any current plays\n *    player.setStationId(xxx);\n *      set station on session, which should stop any current plays\n *\n *  Then control playback with:\n *\n *    tune() - load up information about the current placement, but\n *      don't actually start playing it.\n *    play() - start playing the current placement/station or resume the current song\n *    pause() - pause playback of the current song, if any\n *    like() - tell the server we like this song\n *    unlike() - tell the server to remove the 'like' for this song\n *    dislike() - tell the server we dislike this song, and skip to the next one\n *    skip() - request to skip the current song\n *\n *  player has a current state that can be queried with 'getCurrentState()':\n *    playing - if session.hasActivePlayStarted() and we're not paused\n *    paused -  if session.hasActivePlayStarted() and we're paused\n *    idle - if !session.hasActivePlayStarted()\n *    suspended - if player.suspend() has been called (ie - the player has\n *      been popped out into a new window)\n *\n *  session events are proxied via the play object:\n *    not-in-us - user isn't located in the US and can't play music\n *    placement - information about the placement we just tuned to\n *    play-active - this play is queued up and ready for playback\n *    play-started - this play has begun playback\n *    play-completed  - this play has completed playback\n *    plays-exhausted - there are no more plays available from this placement/station combo\n *    skip-denied - the given song could not be skipped due to DMCA rules\n *  \n *  and the play object adds some new events:\n *    play-paused - the currently playing song was paused\n *    play-resumed - the currently playing song was resumed\n *    play-liked - the currently playing song was liked\n *    play-unliked - the currently playing song had it's 'like' status removed\n *    play-disliked - the currently playing song was disliked\n *    suspend - player.suspend() was called, and the player should stop playback\n *\n *  Some misc methods:\n *\n *    setMuted(muted)\n *    suspend - this returns the state of the player a an object that can be passed\n *      to the unsuspend() call.\n *    unsuspend(state, [startPlay]) - this call takes the state of a previously suspended player\n *      instance and makes this player match that one. These calls allow you to suspend\n *      the player, open up a new window, create a new player instance, and resume playback\n *      where you left off. This call should be made in place of a tune() or play() call.\n *\n */\n\nvar _ = (typeof window !== \"undefined\" ? window['_'] : typeof global !== \"undefined\" ? global['_'] : null);\nvar $ = (typeof window !== \"undefined\" ? window['jQuery'] : typeof global !== \"undefined\" ? global['jQuery'] : null);\nvar log = require('./nolog');\nvar getSpeaker = require('./speaker');\nvar Events = require('./events');\nvar Session = require('./session');\n\nfunction supports_html5_storage() {\n  try {\n    return 'localStorage' in window && window['localStorage'] !== null && (window.localStorage['feed-test'] = true);\n  } catch (e) {\n    return false;\n  }\n}\n\nvar Player = function(token, secret, options) {\n  this.state = {\n    paused: true,\n    suspended: false\n    // activePlay\n  };\n\n  options = options || {};\n\n  this.skipPlayDelay = !!options.skipPlayDelay;\n\n  _.extend(this, Events);\n\n  var session = this.session = new Session(token, secret, options);\n  this.session.on('play-active', this._onPlayActive, this);\n  this.session.on('play-started', this._onPlayStarted, this);\n  this.session.on('play-completed', this._onPlayCompleted, this);\n  this.session.on('plays-exhausted', this._onPlaysExhausted, this);\n\n  this.session.on('all', function() {\n    // propagate all events out to everybody else\n    this.trigger.apply(this, Array.prototype.slice.call(arguments, 0));\n  }, this);\n\n  // create 'speakerInitialized' promise so we can delay things until\n  // the audio subsystem is set up.\n  var initializeSpeaker = this.initializeSpeaker = $.Deferred();\n\n  this.speaker = getSpeaker(options, function(supportedFormats) {\n    if (options.formats) {\n      var reqFormatList = options.formats.split(','),\n          suppFormatList = supportedFormats.split(','),\n          reqAndSuppFormatList = _.intersection(reqFormatList, suppFormatList),\n          reqAndSuppFormats = reqAndSuppFormatList.join(',');\n\n      if (reqAndSuppFormatList.length === 0) {\n        reqAndSuppFormats = supportedFormats;\n      }\n\n      session.setFormats(reqAndSuppFormats);\n\n    } else {\n      session.setFormats(supportedFormats);\n    }\n    initializeSpeaker.resolve();\n  });\n\n  this.setMuted(this.isMuted());\n};\n\nPlayer.prototype.setPlacementId = function(placementId) {\n  this.session.setPlacementId(placementId);\n};\n\nPlayer.prototype.setStationId = function(stationId) {\n  this.session.setStationId(stationId);\n};\n\nPlayer.prototype.setBaseUrl = function(baseUrl) {\n  this.session.setBaseUrl(baseUrl);\n};\n\nPlayer.prototype._onPlayActive = function(play) {\n  // create a new sound object\n  var options = {\n    play: _.bind(this._onSoundPlay, this, play.id),\n    pause: _.bind(this._onSoundPause, this, play.id),\n    finish:  _.bind(this._onSoundFinish, this, play.id),\n    elapse: _.bind(this._onSoundElapse, this, play.id),\n    gain: (play.audio_file.replaygain_track_gain || 0) + (play.station.pre_gain || 0)\n  };\n\n  if (play.startPosition) {\n    options.startPosition = play.startPosition;\n  }\n\n  var sound = this.speaker.create(play.audio_file.url, options);\n\n  this.state.activePlay = {\n    id: play.id,\n    sound: sound,\n    startReportedToServer: false, // wether we got a 'play-started' event from session\n    soundCompleted: false,        // wether the sound object told us it finished playback\n    playStarted: false,           // wether playback started on the sound object yet\n    previousPosition: 0           // last time we got an 'elapse' callback\n  };\n\n  // if we're not paused, then start it\n  if (!this.state.paused) {\n    var s = this.state.activePlay.sound;\n\n    s.play();\n  }\n};\n\nPlayer.prototype._onSoundPlay = function(playId) {\n  // sound started playing\n  if (!this.state.activePlay || (this.state.activePlay.id !== playId)) {\n    log('received sound play, but active play does not match', this.state.activePlay, playId);\n    return;\n  }\n  \n  this.state.paused = false;\n  this.state.activePlay.playStarted = true;\n\n  // on the first play, tell the server we're good to go\n  if (!this.state.activePlay.startReportedToServer) {\n    return this.session.reportPlayStarted();\n  }\n\n  // subsequent plays are considered 'resumed' events\n  this.trigger('play-resumed', this.session.getActivePlay());\n};\n\nPlayer.prototype.getActivePlay = function() {\n  return this.session.getActivePlay();\n};\n\nPlayer.prototype.hasActivePlayStarted = function() {\n  return this.session.hasActivePlayStarted();\n};\n\nPlayer.prototype.getActivePlacement = function() {\n  return this.session.getActivePlacement();\n};\n\nPlayer.prototype._onSoundPause = function(playId) {\n  // sound paused playback\n  if (!this.state.activePlay || (this.state.activePlay.id !== playId)) {\n    log('received sound pause, but active play does not match', this.state.activePlay, playId);\n    return;\n  }\n  \n  this.state.paused = true;\n\n  this.trigger('play-paused', this.session.getActivePlay());\n};\n\nPlayer.prototype._onSoundFinish = function(playId, withError) {\n  if (!this.state.activePlay || (this.state.activePlay.id !== playId)) {\n    log('received sound finish, but active play does not match', this.state.activePlay, playId);\n    return;\n  }\n\n  this.state.activePlay.soundCompleted = true;\n  if (withError) {\n    this.state.activePlay.soundCompletedWithError = true;\n  }\n\n  if (!this.state.activePlay.playStarted) {\n    // never reported this as started...  mark it as invalidated so\n    // we can advance.\n    this.session.requestInvalidate();\n\n    return;\n  }\n\n  if (!this.state.activePlay.startReportedToServer) {\n    // if the song failed before we recieved start response, wait\n    // until word from the server that we started before we say\n    // that we completed the song\n    return;\n  }\n\n  if (withError) {\n    log('song completed with error - marking as invalid');\n    this.session.requestInvalidate();\n\n  } else {\n    this.session.reportPlayCompleted();\n  }\n};\n\nPlayer.prototype._onSoundElapse = function(playId) {\n  if (!this.state.activePlay || (this.state.activePlay.id !== playId)) {\n    log('received sound elapse, but active play does not match', this.state.activePlay, playId);\n    return;\n  }\n\n  var sound = this.state.activePlay.sound,\n      position = sound.position(),\n      interval = 30 * 1000,  // ping server every 30 seconds\n      previousCount = Math.floor(this.state.activePlay.previousPosition / interval),\n      currentCount = Math.floor(position / interval);\n\n  this.state.activePlay.previousPosition = position;\n\n  if (currentCount !== previousCount) {\n    this.session.reportPlayElapsed(Math.floor(position / 1000));\n  }\n};\n\nPlayer.prototype._onPlayStarted = function(play) {\n  var session = this.session;\n\n  if (!this.state.activePlay || (this.state.activePlay.id !== play.id)) {\n    log('received play started, but it does not match active play', play, this.state.activePlay);\n    return;\n  }\n\n  this.state.activePlay.startReportedToServer = true;\n\n  if (this.state.activePlay.soundCompleted) {\n    // the audio completed playback before the session announced the play started\n    log('sound completed before we finished reporting start', this.state.activePlay);\n\n    // In the normal case we'd just quit here, but since the audio completed playback\n    // already, we've got to make sure a 'session.reportPlayCompleted()' gets kicked\n    // off to record the completion of this song.\n    // Defer the reporting so other 'play-started' handlers can complete as normal\n    // before a 'play-completed' gets triggered\n\n    if (this.state.activePlay.soundCompletedWithError) {\n      _.defer(function() {\n        session.requestInvalidate();\n      });\n\n    } else {\n      _.defer(function() {\n        session.reportPlayCompleted();\n      });\n    }\n  }\n};\n\nPlayer.prototype._onPlayCompleted = function(play) {\n  if (!this.state.activePlay || (this.state.activePlay.id !== play.id)) {\n    log('received play completed, but it does not match active play', play, this.state.activePlay);\n    return;\n  }\n\n  this.state.activePlay.sound.destroy();\n  delete this.state.activePlay;\n\n  // Force us into play mode in case we were paused and hit\n  // skip to complete the current song.\n  this.state.paused = false;\n};\n\nPlayer.prototype._onPlaysExhausted = function() {\n  this.state.paused = false;\n};\n\nPlayer.prototype.isPaused = function() {\n  return this.session.isTuned() && this.state.paused;\n};\n\nPlayer.prototype.getStationInformation = function(stationInformationCallback) {\n  return this.session.getStationInformation(stationInformationCallback);\n};\n\nPlayer.prototype.tune = function() {\n  var player = this;\n\n  this.initializeSpeaker.then(function() {\n    if (!player.session.isTuned()) {\n      player.session.tune();\n    }\n  });\n};\n\nPlayer.prototype.play = function() {\n  var player = this;\n\n  this.initializeSpeaker.then(function() {\n    player.speaker.initializeForMobile();\n\n    if (!player.session.isTuned()) {\n      // not currently playing music\n      player.state.paused = false;\n\n      return player.session.tune();\n\n    } else if (player.session.getActivePlay() && player.state.activePlay && player.state.paused) {\n      // resume playback of song\n      if (player.state.activePlay.playStarted) {\n        player.state.activePlay.sound.resume();\n\n      } else {\n        player.state.activePlay.sound.play();\n      }\n    }\n  });\n};\n\nPlayer.prototype.pause = function() {\n  if (!this.session.hasActivePlayStarted() || \n      !this.state.activePlay ||\n      this.state.paused) {\n    return;\n  }\n\n  // pause current song\n  this.state.activePlay.sound.pause();\n};\n\nPlayer.prototype.like = function() {\n  if (!this.session.hasActivePlayStarted()) {\n    return;\n  }\n\n  this.session.likePlay(this.state.activePlay.id);\n\n  this.trigger('play-liked');\n};\n\nPlayer.prototype.unlike = function() {\n  if (!this.session.hasActivePlayStarted()) {\n    return;\n  }\n\n  this.session.unlikePlay(this.state.activePlay.id);\n\n  this.trigger('play-unliked');\n};\n\nPlayer.prototype.dislike = function() {\n  if (!this.session.hasActivePlayStarted()) {\n    return;\n  }\n\n  this.session.dislikePlay(this.state.activePlay.id);\n\n  this.trigger('play-disliked');\n\n  this.skip();\n};\n\nPlayer.prototype.skip = function() {\n  if (!this.session.hasActivePlayStarted()) {\n    // can't skip non-playing song\n    return;\n  }\n\n  this.session.requestSkip();\n};\n\nPlayer.prototype.destroy = function() {\n  this.session = null;\n\n  if (this.state.activePlay && this.state.activePlay.sound) {\n    this.state.activePlay.sound.destroy();\n  }\n};\n\nPlayer.prototype.getCurrentState = function() {\n  if (this.state.suspended) {\n    return 'suspended';\n\n  } else if (!this.session.hasActivePlayStarted()) {\n    // nothing started, so we're idle\n    return 'idle';\n\n  } else {\n    if (this.state.paused) {\n      return 'paused';\n\n    } else {\n      return 'playing';\n    }\n  }\n};\n\nPlayer.prototype.getPosition = function() {\n  if (this.state.activePlay && this.state.activePlay.sound) {\n    return this.state.activePlay.sound.position();\n\n  } else {\n    return 0;\n  }\n};\n\nPlayer.prototype.getDuration = function() {\n  if (this.state.activePlay && this.state.activePlay.sound) {\n    return this.state.activePlay.sound.duration();\n\n  } else {\n    return 0;\n  }\n};\n\nPlayer.prototype.maybeCanSkip = function() {\n  return this.session.maybeCanSkip();\n};\n\nvar mutedKey = 'muted';\nPlayer.prototype.isMuted = function() {\n  if (supports_html5_storage()) {\n    if (mutedKey in localStorage) {\n      return localStorage[mutedKey] === 'true';\n    }\n  }\n\n  return false;\n};\n\nPlayer.prototype.setMuted = function(isMuted) {\n  if (isMuted) {\n    this.speaker.setVolume(0);\n    \n    if (supports_html5_storage()) {\n      localStorage[mutedKey] = true;\n    }\n\n    this.trigger('muted');\n\n  } else {\n    this.speaker.setVolume(100);\n\n    if (supports_html5_storage()) {\n      localStorage[mutedKey] = false;\n    }\n\n    this.trigger('unmuted');\n  }\n};\n\nPlayer.prototype.suspend = function() {\n  var playing = (this.state.activePlay && this.state.activePlay.sound),\n      state = this.session.suspend(playing ? this.state.activePlay.sound.position() : 0);\n\n  this.pause();\n\n  this.state.suspended = true;\n  this.trigger('suspend');\n\n  return state;\n};\n\nPlayer.prototype.unsuspend = function(state, startPlayback) {\n  this.session.unsuspend(state);\n\n  if (startPlayback) {\n    this.play();\n  }\n};\n\nmodule.exports = Player;\n\n\n","/*global module:false */\n/*jshint camelcase:false, latedef:false */\n\n/*\n *  Feed Media Session API\n *\n *  This manages all communication with the server and is the single point\n *  of truth for a client to manage what is actively being played. It\n *  should be created with:\n *\n *  var session = new Feed.Session(token, secret[, options]);\n *\n *  Then you attach event listeners to the session:\n *\n *  session.on('play-active', someHandler);\n *\n *  Then you can optionally set a placement and a station:\n *\n *  session.setPlacementId(placementId);\n *  session.setStationId(stationId);\n *\n *  If any of the above calls are made while we're actively tuning (we've\n *  got an active song or a pending song), then any currently active song\n *  will be marked as 'completed' and a new song will be requested from\n *  the server.\n *\n *  Then you tell the session to start maintaining a queue of \n *  music to play:\n *\n *  session.tune();\n *\n *  The session will now emit the following events:\n *\n *  not-in-us: if feed can't determine that the user is in the US, then\n *    the user won't be allowed to play any music. This check is made\n *    every time we try to retrieve a song. Once you get this event, you\n *    should assume nothing further will work.\n *  invalid-credentials: the token and secret passed to this function\n *    are not valid.\n *  placement: after we tune in to a placement or station,\n *    this passes on information about the placement we\n *    tuned in to.\n *  stations: after tuning to a specific placement, the server returns a\n *    list of available stations. This is that list.\n *  station-changed: emitted after a 'setStation' call, and passed the\n *    ID of the station\n *  placement-changed: emitted after a 'setPlacement' call, and passed the\n *    ID of the placement\n *  play-active: when the session has a play ready for playback\n *  play-started: when the active play has started playback (as\n *    a result of a call to reportPlayStarted)\n *  play-completed: when the session has successfully told the server\n *    that the current play has completed, been skipped (after a \n *    call to reportPlayCompleted), or been invalidated\n *  skip-denied: when the session has been told by the server that the\n *    skip cannot be performed (after a call to requestSkip)\n *  plays-exhausted: when the server can find no more music in the\n *    current station that satisfies DMCA constraints (this will\n *    be either the first event after a 'tune' call, or after a\n *    play-completed event). The client must make another call to\n *    tune() to begin pulling in more music.\n *\n *  Clients that use the session object should tell the session about\n *  the status of the current play as it progresses:\n *\n *  session.reportPlayStarted(): tell the server we have begun playback of the\n *    current song to the end user.\n *  session.reportPlayElapsed(seconds): tell the server how many elapsed seconds\n *    of the song have been played since it started.\n *  session.reportPlayCompleted(): tell the server that we have completed \n *    playing the current song. This will cause the session object\n *    to emit a 'play-completed' event followed by a 'play-active' when\n *    the next song is ready for playback\n *\n *  session.requestSkip(): ask the server if we can skip playback of the current\n *    song. If the skip is denied, a 'skip-denied' event will be triggered,\n *    otherwise a 'play-completed' will be triggered.\n *  session.requestInvalidate(): tell the server that we're unable to play the\n *    current song for some reason, and the server should stop playback\n *    of the song (if started) and give us a new song. The session will\n *    trigger a 'play-completed' event after this call.\n *\n *  Data held by the session can be retrieved with:\n *\n *  session.getActivePlay(): returns the currently active play, if any, or null\n *  session.isTuned(): true if the session has active plays available or is awaiting\n *    plays from the server\n *  session.hasActivePlayStarted(): returns true if the active play is playing now\n *  session.maybeCanSkip(): returns true if there is a song being played now and \n *    we believe we can skip it (this might not hold true, and the server can\n *    override this)\n *\n *  Other misc calls:\n *  \n *  session.likePlay(), session.unlikePlay(), session.dislikePlay(): like handling\n *  session.setFormats(formats): comma separated list of audio formats to \n *                               request, i.e.: 'mp3', 'aac', 'aac,mp3'. Defaults to\n *                               'mp3,aac'\n *\n *  The optional 'options' argument passed to the constructor can have the following\n *  attributes:\n *\n *    baseUrl: defines the base host that responds to API calls - defaults\n *       to '//feed.fm'. Really only used with local testing.\n */\n\nvar _ = (typeof window !== \"undefined\" ? window['_'] : typeof global !== \"undefined\" ? global['_'] : null);\nvar $ = (typeof window !== \"undefined\" ? window['jQuery'] : typeof global !== \"undefined\" ? global['jQuery'] : null);\nvar log = require('./nolog');\nvar Events = require('./events');\nvar util = require('./util');\nvar Base64 = require('js-base64').Base64;\nvar Cookie = require('tiny-cookie');\nvar version = require('./version');\n\nvar Session = function(token, secret, options) {\n  options = options || { };\n\n  this.config = {\n    // token\n    // secret\n    // placementId\n    // placement\n    // stationId\n    // stations\n    // clientId\n    baseUrl: util.addProtocol(options.baseUrl || '//feed.fm', true),\n    formats: 'mp3,aac',\n    maxBitrate: 128,\n    timeOffset: 0,\n\n    // Represent the active 'play' or null if there is no active play. This should\n    // only be null before the first tune() call or after the server tells us there\n    // is no more music available.\n    current: null, /* {\n                        play:  play object we're currently playing\n                        started: defaults to false\n                        canSkip: defaults to false\n                        retryCount: number of times we've tried to tell server we started this\n                       }, */\n\n    // Details of any 'POST /play' request we're awaiting a response for. If this\n    // is null, then we're not waiting for the server to give us a play\n    pendingRequest: null, /* {\n                               ajax:       form data we sent to request a play, copied\n                                           here so we can retry it if it fails\n                               retryCount: number of times we've retried \n                             }, */\n    \n    // Once a play has been created and then started, the server will let us\n    // create a new play. This holds a reference to the next play that will\n    // be active on completion of the current play\n    pendingPlay: null // play object we'll start upon completion of current\n                      //   sound \n  };\n\n  _.extend(this, Events);\n\n  if (token && secret) {\n    this.setCredentials(token, secret);\n  }\n};\n\nSession.prototype.setBaseUrl = function(baseUrl) {\n  this.config.baseUrl = util.addProtocol(baseUrl);\n};\n\nSession.prototype.setCredentials = function(token, secret) {\n  this.config.token = token;\n  this.config.secret = secret;\n};\n\nSession.prototype.setPlacementId = function(placementId) {\n  this.config.placementId = placementId;\n  this.trigger('placement-changed', placementId);\n\n  this._retune();\n};\n\nSession.prototype.setStationId = function(stationId) {\n  if (this.config.stationId != stationId) {\n    this.config.stationId = stationId;\n    this.trigger('station-changed', stationId);\n\n    this._retune();\n  }\n};\n\nSession.prototype.setFormats = function(formats) {\n  this.config.formats = formats;\n\n  this._retune();\n};\n\nSession.prototype.setMaxBitrate = function(maxBitrate) {\n  this.config.maxBitrate = maxBitrate;\n};\n\n// tune\nSession.prototype.tune = function() {\n  if (!this.config.token) {\n    throw new Error('no token set with setCredentials()');\n  }\n\n  if (!this.config.secret) {\n    throw new Error('no secret set with setCredentials()');\n  }\n\n  // abort any pending requests or plays\n  this.config.pendingRequest = null;\n  this.config.pendingPlay = null;\n\n  // stop playback of any current song, and set\n  // the status to waiting\n  this._assignCurrentPlay(null, true);\n\n  // pull information in about the placement, followed by\n  // a request for the next play\n  this._getDefaultPlacementInformation();\n};\n\n// _getDefaultPlacementInformation\nSession.prototype._getDefaultPlacementInformation = function(delay) {\n  var self = this;\n\n  if (this.config.placementId && this.config.placement && (this.config.placement.id === this.config.placementId)) {\n    // already have placement info\n    return;\n  }\n\n  var ajax = { \n    url: self.config.baseUrl + '/api/v2/placement',\n    type: 'GET',\n    data: {\n      client_id: self.config.clientId\n    },\n    dataType: 'json',\n    timeout: 6000\n  };\n\n  // request placement info from server\n  log('requesting default placement information from server');\n  self._signedAjax(ajax)\n    .done(_.bind(self._receiveDefaultPlacementInformation, self))\n    .fail(_.bind(self._failedDefaultPlacementInformation, self, delay));\n};\n\nSession.prototype._receiveDefaultPlacementInformation = function(placementInformation) {\n  if (placementInformation && placementInformation.success && placementInformation.placement) {\n    this.config.placement = placementInformation.placement;\n    this.config.stations = placementInformation.stations;\n\n    this.config.placementId = placementInformation.placement.id;\n    this.trigger('placement-changed', this.config.placementId);\n\n    this.trigger('placement', placementInformation.placement);\n\n    if (!('stationId' in this.config) && (placementInformation.stations.length > 0)) {\n      this.config.stationId = placementInformation.stations[0].id;\n      this.trigger('station-changed', this.config.stationId);\n    }\n\n    this.trigger('stations', placementInformation.stations);\n\n    // kick off request for next play\n    this._requestNextPlay();\n  }\n};\n\nSession.prototype._failedDefaultPlacementInformation = function(delay, response) {\n  if (response.status === 401) {\n    try {\n      var fullResponse = $.parseJSON(response.responseText);\n      if (fullResponse.error && fullResponse.error.code === 5) {\n        this.trigger('invalid-credentials');\n        return;\n      }\n    } catch (e) {\n      // ignore\n    }\n  }\n\n  // otherwise, try again in a bit\n  delay = delay ? (delay * 2) : 500;\n  _.delay(_.bind(this._getDefaultPlacementInformation, this, delay), delay);\n};\n\nSession.prototype.getActivePlacement = function() {\n  if (this.config.placement) {\n    return this.config.placement;\n  } else {\n    return null;\n  }\n};\n\nSession.prototype.getActivePlay = function() { \n  if (this.config.current) {\n    return this.config.current.play;\n  } else {\n    return null;\n  }\n};\n\nSession.prototype.isTuned = function() {\n  return this.config.current || this.config.pendingRequest;\n};\n\nSession.prototype.hasActivePlayStarted = function() {\n  return this.config.current && this.config.current.started;\n};\n\n// re-tune\nSession.prototype._retune = function() {\n  // if we're not actively playing anything, nothing needs to be sent\n  if (!this.isTuned()) {\n    return;\n  }\n\n  this.tune();\n};\n\nSession.prototype.reportPlayStarted = function() {\n  if (!this.config.current) {\n    throw new Error('attempt to report a play started, but there is no active play');\n  }\n\n  this._startPlay(this.config.current.play);\n};\n\nSession.prototype.reportPlayElapsed = function(seconds) {\n  if (!this.config.current) {\n    throw new Error('attempt to report elapsed play time, but the play hasn\\'t started');\n  }\n\n  this._signedAjax({\n    url: this.config.baseUrl + '/api/v2/play/' + this.config.current.play.id + '/elapse', \n    type: 'POST',\n    data: {\n      seconds: seconds\n    }\n  });\n};\n\nSession.prototype.reportPlayCompleted = function() {\n  var self = this;\n\n  if (this.config.current && (this.config.current.started)) {\n    this._signedAjax({\n      url: this.config.baseUrl + '/api/v2/play/' + this.config.current.play.id + '/complete',\n      type: 'POST'\n\n    }).always(_.bind(self._receivePlayCompleted, self));\n\n  } else {\n    log('finish on non-active or playing song');\n    throw new Error('no active or playing song');\n  }\n};\n\nSession.prototype._receivePlayCompleted = function() {\n  if (!this.config.pendingRequest) {\n    log('song finished, and no outstanding request, so playing pendingPlay');\n    // if we're not waiting for an incoming request, then we must\n    // have the next play queued up, so play it:\n    var pendingPlay = this.config.pendingPlay;\n    this.config.pendingPlay = null;\n\n    this._assignCurrentPlay(pendingPlay);\n\n  } else {\n    log('song finished, but we\\'re still waiting for next one to return');\n\n    // we're waiting for a request to come in, so kill the current\n    // song and announce that we're waiting\n    this._assignCurrentPlay(null, true);\n  }\n};\n\nSession.prototype.requestSkip = function() {\n  if (!this.config.current) {\n    throw new Error('No song being played');\n  }\n\n  if (!this.config.current.started) {\n    throw new Error('No song has been started');\n  }\n\n  if (!this.config.current.canSkip) {\n    this.trigger('skip-denied');\n    return;\n  }\n\n  this._signedAjax({\n    url: this.config.baseUrl + '/api/v2/play/' + this.config.current.play.id + '/skip',\n    type: 'POST'\n  })\n    .done(_.bind(this._receiveSkip, this, this.config.current.play))\n    .fail(_.bind(this._failSkip, this, this.config.current.play));\n};\n\nSession.prototype.requestInvalidate = function() {\n  if (!this.config.current) {\n    throw new Error('No active song to invalidate!');\n  }\n\n  this._sendInvalidate(this.config.current.play);\n};\n\nSession.prototype._sendInvalidate = function(play, delay) {\n  this._signedAjax({\n    url: this.config.baseUrl + '/api/v2/play/' + play.id + '/invalidate',\n    type: 'POST'\n  })\n    .done(_.bind(this._receiveInvalidate, this, play))\n    .fail(_.bind(this._failInvalidate, this, delay, play));\n};\n\nSession.prototype._failInvalidate = function(delay, play, response) {\n  var self = this;\n\n  delay = (delay ? delay * 2 : 200);\n\n  if (delay < 3000) {\n    _.delay(function() {\n      self._sendInvalidate(play);\n    }, delay);\n\n  } else {\n    log('gave up trying to invalidate play', response);\n\n  }\n};\n\nSession.prototype._receiveInvalidate = function(play, response) {\n  if (!this.config.current || (this.config.current.play !== play)) {\n    // not holding this song any more - just ignore it\n    return;\n  }\n\n  if (!response.success) {\n    log('failed invalidate! - technically this is impossible');\n    return;\n  }\n\n  if (this.config.pendingPlay) {\n    log('invalidating to song already queued up');\n    // skip to play already queued up\n    var pendingPlay = this.config.pendingPlay;\n    this.config.pendingPlay = null;\n    this._assignCurrentPlay(pendingPlay);\n\n  } else {\n    log('invalidating current song');\n    this._assignCurrentPlay(null, true);\n  \n    if (!this.config.pendingRequest) {\n      log('queueing up new song');\n      this._requestNextPlay();\n\n    }\n  }\n};\n\nSession.prototype._failSkip = function(play) {\n  if (!this.config.current || (this.config.current.play !== play)) {\n    // not playing this song any more - just ignore it\n    return;\n  }\n  // technically the skip wasn't denied - we just couldn't confirm wether\n  // it was ok, but this is the best we can return at the moment\n  this.trigger('skip-denied');\n};\n\nSession.prototype._receiveSkip = function(play, response) {\n  if (!this.config.current || (this.config.current.play !== play)) {\n    // not playing this song any more - just ignore it\n    return;\n  }\n\n  if (!response.success) {\n    log('failed skip!');\n    this.trigger('skip-denied');\n    return;\n  }\n\n  if (this.config.pendingPlay) {\n    log('skipping to song already queued up');\n    // skip to play already queued up\n    var pendingPlay = this.config.pendingPlay;\n    this.config.pendingPlay = null;\n    this._assignCurrentPlay(pendingPlay);\n\n  } else if (this.config.pendingRequest) {\n    log('skipping to what is queued up');\n    // we're waiting for a request - so just wait for that to show up\n    this._assignCurrentPlay(null, true);\n\n  } else {\n    log('skipping to what is queued up');\n    // nothing queued up and nothing being requested - we're outta music!\n    this._assignCurrentPlay(null);\n\n  }\n};\n\nSession.prototype._startPlay = function(play) {\n  if (this.config.current.retryCount > 2) {\n    // fuck it - let the user hear the song\n    this._receiveStartPlay(play, { success: true, can_skip: true });\n\n  } else {\n    log('telling server we\\'re starting the play', play);\n\n    // tell the server that we're going to start this song\n    this._signedAjax({\n      url: this.config.baseUrl + '/api/v2/play/' + play.id + '/start',\n      type: 'POST',\n      dataType: 'json',\n      timeout: 3000\n    })\n      .done(_.bind(this._receiveStartPlay, this, play))\n      .fail(_.bind(this._failStartPlay, this, play));\n  }\n};\n\nSession.prototype._receiveStartPlay = function(play, response) {\n  if (response.success) {\n\n    if (this.config.current && (this.config.current.play === play)) {\n      this.config.current.canSkip = response.can_skip;\n      this.config.current.started = true;\n\n      this.trigger('play-started', play);\n\n      // since we're ok to start this song, we can start looking for the\n      // next song\n      this._requestNextPlay();\n\n    } else {\n      log('received start play, but not waiting any more');\n    }\n\n  } else {\n    log('received failed start success');\n  }\n};\n\nSession.prototype._failStartPlay = function(play, response) {\n  // only process if we're still actually waiting for this\n  if (this.config.current && (this.config.current.play === play)) {\n\n    if (response.status === 403) {\n      try {\n        var fullResponse = $.parseJSON(response.responseText);\n\n        if (fullResponse.error && fullResponse.error.code === 20) {\n          // we seem to have missed the response to the original start, so\n          // let's assume the start was good and the song is skippable\n          return this._receiveStartPlay(play, { success: true, can_skip: true });\n        }\n      } catch (e) {\n        // ignore\n        log('unable to parse start play response', e.message);\n      }\n    }\n\n    log('request failed - trying again in 1 second', response.status);\n\n    this.config.current.retryCount++;\n\n    // wait a second and try again\n    _.delay(_.bind(this._startPlay, this, play), 1000);\n\n  } else {\n    log('startPlay failed, but we don\\'t care any more');\n  }\n};\n\n// start playing the given song\nSession.prototype._assignCurrentPlay = function(play, waitingIfEmpty) {\n  // remove any existing play\n  if (this.config.current) {\n    this.trigger('play-completed', this.config.current.play);\n    this.config.current = null;\n  }\n  if (play === null) {\n    // nothing to play right now\n\n    if (waitingIfEmpty) {\n      //this.config.status = 'waiting';\n      log('nothing to play... waiting');\n\n    } else {\n      //this.config.status = 'idle';\n      log('nothing to play from the current station');\n      this.trigger('plays-exhausted');\n    }\n\n  } else {\n    // we're starting this song, so note that\n    this.config.current = {\n      play: play,\n      canSkip: false,\n      started: false,\n      retryCount: 0\n    };\n\n    //this.config.status = 'active';\n\n    log('activated new song');\n    this.trigger('play-active', play);\n\n  }\n};\n\nSession.prototype._requestNextPlay = function(delay) {\n  var self = this;\n\n  this._getClientId().then(function() {\n    if (self.config.pendingRequest) {\n      if (!delay) {\n        log('already waiting for a request to finish');\n        return;\n\n      } else if (delay > 60000) {\n        log('giving up on retrieving next play');\n\n        // we already retried this - let's give up\n        self.config.pendingRequest = null;\n\n        if (self.config.current == null) {\n          // we're not playing anything, so we're waiting. \n          // set assign play to null again to trigger empty/idle\n          self._assignCurrentPlay(null);\n        }\n        return;\n\n      } else {\n        log('retrying pending request');\n\n        // retry the request\n        self.config.pendingRequest.retryCount++;\n\n        self._signedAjax(self.config.pendingRequest.ajax)\n          .done(_.bind(self._receiveNextPlay, self, self.config.pendingRequest.ajax))\n          .fail(_.bind(self._failedNextPlay, self, delay, self.config.pendingRequest.ajax));\n        return;\n      }\n      \n    } else {\n      // create a new request\n\n      var ajax = { \n        url: self.config.baseUrl + '/api/v2/play',\n        type: 'POST',\n        dataType: 'json',\n        timeout: 6000,\n        data: {\n          formats: self.config.formats,\n          client_id: self.config.clientId,\n          max_bitrate: self.config.maxBitrate,\n          secure: true\n        }\n      };\n\n      if (self.config.placementId) {\n        ajax.data.placement_id = self.config.placementId;\n      }\n\n      if (self.config.stationId) {\n        ajax.data.station_id = self.config.stationId;\n      }\n\n      self.config.pendingRequest = {\n        ajax: ajax,\n        retryCount: 0\n      };\n\n      // request new play from server\n      log('requesting new play from server', ajax);\n      self._signedAjax(ajax)\n        .done(_.bind(self._receiveNextPlay, self, ajax))\n        .fail(_.bind(self._failedNextPlay, self, delay, ajax));\n    }\n  });\n};\n\n// we received a song to play from the server\nSession.prototype._receiveNextPlay = function(ajax, response) {\n  // only process if we're still actually waiting for this\n  if (this.config.pendingRequest && (this.config.pendingRequest.ajax === ajax)) {\n    // this isn't pending any more\n    this.config.pendingRequest = null;\n\n    if (response.success) {\n      if (this.config.current) {\n        log('received play, but we\\'re already playing, so queueing up', response.play);\n\n        // play this when the current song is complete\n        this.config.pendingPlay = response.play;\n\n      } else {\n        log('received play and no current song, so playing now', response.play);\n\n        // start playing this right now, since nothing else is playing\n        this._assignCurrentPlay(response.play);\n\n      }\n\n    } else if (response.error && response.error.code === 9) {\n      if (this.config.current) {\n        log('ran out of music to play, but we\\'re already playing');\n\n        this.config.pendingPlay = null;\n\n      } else {\n        log('ran out of music, and nothing playing now');\n\n        this.trigger('plays-exhausted');\n      }\n\n    } else {\n      log('unsuccessful response', response);\n    }\n\n  } else {\n    log('nextPlay succeeded, but we don\\'t care');\n  }\n};\n\n// server returned an error when we requested the next song\nSession.prototype._failedNextPlay = function(delay, ajax, response) {\n  // only process if we're still actually waiting for this\n  if (this.config.pendingRequest && (this.config.pendingRequest.ajax === ajax)) {\n\n    if (response.status === 403) {\n      try {\n        var fullResponse = $.parseJSON(response.responseText);\n\n        if (fullResponse.error && fullResponse.error.code === 19) {\n          // user isn't in the US any more, so let the call fail\n          this.trigger('not-in-us', fullResponse.error.message);\n          return;\n        }\n      } catch (e) {\n        // some other response - fall through and try again\n        log('problem parsing 403 response', e.message);\n      }\n    }\n\n    log('request failed - trying again', response.status);\n\n    delay = delay ? (delay * 2) : 500;\n    _.delay(_.bind(this._requestNextPlay, this, delay), delay);\n\n  } else {\n    log('nextPlay failed, but we don\\'t care');\n  }\n};\n\nSession.prototype._getClientId = function() {\n  if (this.clientPromise) {\n    return this.clientPromise;\n  }\n  var clientDeferred = new $.Deferred();\n  this.clientPromise = clientDeferred.promise();\n\n  var self = this;\n\n  this._requestClientId(function(clientId) {\n    // once we've got a clientId, stick it in the config\n    self.config.clientId = clientId;\n\n    self._setStoredCid(self.config.clientId);\n\n    clientDeferred.resolve(clientId);\n  });\n\n  return this.clientPromise;\n};\n\n// hit the server up for a client id and return it via the passed in deferred\nSession.prototype._requestClientId = function(saveClientId, delay) {\n  // see if we've got a cookie\n  var clientId = this._getStoredCid();\n\n  if (clientId) {\n    return saveClientId(clientId);\n\n  } else {\n    var self = this;\n\n    this._signedAjax({\n      url: self.config.baseUrl + '/api/v2/client',\n      type: 'POST'\n\n    }).done(function(response) {\n      if (response.success) {\n        saveClientId(response.client_id);\n\n      } else {\n        repeatAfter(delay, 2000, function(newDelay) { \n          // retry until the end of time\n          self._requestClientId(saveClientId, newDelay);\n        });\n      }\n\n    }).fail(function(response) {\n      if (response.status === 403) {\n        try {\n          var fullResponse = $.parseJSON(response.responseText);\n\n          if (fullResponse.error && fullResponse.error.code === 19) {\n            // user isn't in the US any more, so let the call fail\n            self.trigger('not-in-us', fullResponse.error.message);\n            return;\n          }\n        } catch (e) {\n          // some other response - fall through and try again\n          log('unknown response for client id request', e.message);\n        }\n\n      } else {\n        log('unknown client id response status', response.status);\n      }\n\n      repeatAfter(delay, 2000, function(newDelay) { \n        // retry until the end of time\n        self._requestClientId(saveClientId, newDelay);\n      });\n    });\n  }\n};\n\nfunction repeatAfter(delay, max, cb) {\n  delay = delay ? (2 * delay) : 200;\n\n  if (delay > max) {\n    delay = max;\n  }\n\n  setTimeout(function() {\n    cb(delay);\n  }, delay);\n\n}\n\nSession.prototype.maybeCanSkip = function() {\n  return this.config.current && this.config.current.started && this.config.current.canSkip;\n};\n\nSession.prototype.likePlay = function(playId) {\n  this._signedAjax({\n    url: this.config.baseUrl + '/api/v2/play/' + playId + '/like',\n    type: 'POST'\n  });\n\n  if (this.config.current && (this.config.current.play.id === playId)) {\n    this.config.current.play.liked = true;\n  }\n};\n\nSession.prototype.unlikePlay = function(playId) {\n  this._signedAjax({\n    url: this.config.baseUrl + '/api/v2/play/' + playId + '/like',\n    type: 'DELETE'\n  });\n\n  if (this.config.current && (this.config.current.play.id === playId)) {\n    delete this.config.current.play['liked'];\n  }\n};\n\nSession.prototype.dislikePlay = function(playId) {\n  this._signedAjax({\n    url: this.config.baseUrl + '/api/v2/play/' + playId + '/dislike',\n    type: 'POST'\n  });\n\n  if (this.config.current && (this.config.current.play.id === playId)) {\n    this.config.current.play.liked = false;\n  }\n};\n\n/*\n * Save the current state of the session, so we can recreate\n * our current state in the future. The object returned\n * is what should be passed to 'unsuspend'. The 'startPosition'\n * should be the current playback offset for the active play, \n * in milliseconds.\n */\n\nSession.prototype.suspend = function(startPosition) {\n  var saved = { };\n\n  if (this.config.placementId) {\n    saved.placementId = this.config.placementId;\n  }\n\n  if (this.config.stationId) {\n    saved.stationId = this.config.stationId;\n  }\n\n  if (this.config.current && this.config.current.started) {\n    // only save the active play if we've actually started\n    // playing it (otherwise the next call to create a play\n    // will return the same data)\n    saved.placement = this.config.placement;\n    saved.stations = this.config.stations;\n    saved.play = _.clone(this.config.current.play);\n    saved.play.startPosition = startPosition;\n    saved.canSkip = this.config.current.canSkip;\n  }\n\n  return saved;\n};\n\n/*\n * Use the saved session passed in to restore the player to\n * the state it was in previously. This method will make sure\n * all the necessary events are triggered so that any\n * object observing events from this session will believe a\n * 'session.tune()' call was made.\n */\n\nSession.prototype.unsuspend = function(saved) {\n  if (this.getActivePlay()) {\n    throw new Error('You cannot unsuspend after running tune()');\n  }\n\n  if ('placementId' in saved) {\n    this.config.placementId = saved.placementId;\n    this.trigger('placement-changed', this.config.placementId);\n  }\n\n  if ('stationId' in saved) {\n    this.config.stationId = saved.stationId;\n    this.trigger('station-changed', this.config.stationId);\n  }\n\n  if ('play' in saved) {\n    this.config.placement = saved.placement;\n    this.config.stations = saved.stations;\n\n    this.trigger('placement', this.config.placement);\n    this.trigger('stations', this.config.stations);\n\n    // emit the 'play-active' event\n    this._assignCurrentPlay(saved.play);\n\n    // make a fake start response from the server, emit\n    // a 'play-start' event, and then start queueing\n    // up the next song to play\n    this._receiveStartPlay(saved.play, { success: true, can_skip: saved.canSkip });\n\n    return saved.play;\n\n  } else {\n    this.tune();\n\n    return null;\n  }\n};\n\nfunction supports_html5_storage() {\n  try {\n    return 'localStorage' in window && window['localStorage'] !== null && (window.localStorage['feed-test'] = true);\n  } catch (e) {\n    log('browser does not support html5 localstorage', e.message);\n    return false;\n  }\n}\n\nvar cookieName = 'cid';\nSession.prototype._getStoredCid = function() {\n  if (supports_html5_storage()) {\n    return localStorage[cookieName];\n  } else {\n    return Cookie.get(cookieName);\n  }\n};\n\nSession.prototype._setStoredCid = function(value) {\n  if (supports_html5_storage()) {\n    localStorage[cookieName] = value;\n  } else {\n    Cookie.set(cookieName, value, { expires: 3650, path: '/' });\n  }\n};\n\nSession.prototype._deleteStoredCid = function() {\n  if (supports_html5_storage()) {\n    localStorage.removeItem(cookieName);\n  } else {\n    $.removeCookie(cookieName, { path: '/' });\n  }\n};\n\nSession.prototype._sign = function(request) {\n  var authorization;\n\n  // use Basic auth for HTTPS\n  authorization = 'Basic ' + Base64.encode(this.config.token + ':' + this.config.secret);\n\n  request.headers = {\n    Authorization: authorization\n  };\n\n  request.headers[\"X-Feed-SDK\"] = version;\n\n  return request;\n};\n\nSession.prototype._signedAjax = function(request) {\n  var self = this;\n\n  return self._ajax(self._sign(request));\n};\n\nSession.prototype._ajax = function(request) {\n  return $.ajax(request);\n};\n\nmodule.exports = Session;\n\n","/*global module:false */\n\n/*\n * The speaker object encapsulates the SoundManager2 code and boils it down\n * to the following api:\n *\n *    speaker().initializeForMobile: mobile clients can only start using\n *      speaker when handling an 'onClick' event. This call should be made \n *      at that time to get sound initialized while waiting for details\n *      of what to play from the server. \n *\n *    speaker().setVolume(value): set the volume from 0 (mute) - 100 (full volume)\n *\n *    var sound = speaker().create(url, optionsAndEvents): create a new sound from the\n *       given url and return a 'song' object that can be used to pause/play/\n *       destroy the song and receive trigger events as the song plays/stops. \n *\n *       The 'optionsAndEvents' is an object that lets you specify event\n *       handlers and options:\n *\n *          startPosition:  specifies the time offset (in milliseconds) that the\n *                          sound should begin playback at when we begin playback.\n *          play:           event handler for 'play' event\n *          pause:          event handler for 'pause' event\n *          finish:         event handler for 'finish' event\n *\n *       The returned object emits the following events:\n *         play: the song has started playing or resumed playing after pause\n *         pause: the song has paused playback\n *         finish: the song has completed playback and the song object\n *           is no longer usable and should be destroyed\n *\n *       The events should be received in this order only:\n *         ( play -> ( pause | play )* -> )? finish\n *\n *       Note that I represent play failures as a 'finish' call, so if\n *       we can't load a song, it will just get a 'finish' and no 'play'.\n *       The 'finish' event will have a 'true' argument passed to it on\n *       some kind of error, so you can treat those differently.\n *\n *       The returned song object has this following api:\n *         play: start playback (at the 'startPosition', if specified)\n *         pause: pause playback\n *         resume: resume playback\n *         destroy: stop playback, prevent any future playback, and free up memory\n *\n * This module returns a function that returns a speaker singleton so everybody\n * is using the same instance.\n *\n * Proper usage looks like this:\n *\n *   require([ 'feed/speaker' ], function(speaker) {\n *     var mySpeaker = speaker(options, onReady);\n *   });\n *\n * That will make sure that all code uses the same speaker instance. 'options'\n * is optional, and is an object with any of the following keys:\n *\n *   swfBase: URL pointing to directory containing 'soundmanager2.swf' file \n *            for flash fallback\n *   preferFlash: if true, opt to use the flash plugin rather than the\n *                browser's 'audio' tag\n *   debug: if true, emit debug information to the console\n *   silence: URL to an mp3 with no sound, for initializing mobile clients.\n *            defaults to swfBase + '/silence.mp3'\n *\n * 'onReady' is also optional, and is a callback that will be called as\n * soon as the sond system is initialized (or immediately if it was already\n * initialized) and it will be given a string that lists supported\n * audio formats, suitable for passing to Feed.Session.setFormats().\n *\n * The first function call to 'speaker()' is what configures and defines the\n * speaker - and subsequent calls just return the already-created instance.\n * I think this is a poor interface, but I don't have a better one at the\n * moment.\n *\n * This code uses the wonderful SoundManager2 api and falls back to\n * the soundmanager2 flash plugin if HTML5 audio isn't available. \n *\n */\n\nvar _ = (typeof window !== \"undefined\" ? window['_'] : typeof global !== \"undefined\" ? global['_'] : null);\nvar $ = (typeof window !== \"undefined\" ? window['jQuery'] : typeof global !== \"undefined\" ? global['jQuery'] : null);\nvar log = require('./nolog');\nvar Events = require('./events');\nvar util = require('./util');\nvar SoundManager = require('soundmanager2');\n\n// fake console to redirect soundmanager2 to the feed logger\nvar feedConsole = {\n  log: log,\n  info: log,\n  warn: log,\n  error: log\n};\n\nvar Sound = function(options) { \n  var obj = _.extend(this, Events);\n\n  if (options) {\n    if ('startPosition' in options) {\n      this.startPosition = options.startPosition;\n    }\n\n    _.each(['play', 'pause', 'finish', 'elapse'], function(ev) {\n      if (ev in options) {\n        obj.on(ev, options[ev]);\n      }\n    });\n\n    this.gain = options.gain || 0;\n\n  } else {\n    this.gain = 0;\n\n  }\n\n  return obj;\n};\n\nSound.prototype = {\n  play: function() {\n    var sound = this;\n\n    if (this.sm2Sound) {\n      if (!this.sm2Sound.fake && this.startPosition) {\n        var startPosition = this.startPosition;\n\n        this.sm2Sound.load({\n          whileloading: function() {\n            if ((this.playState === 0) && (this.duration > startPosition)) {\n              // start playback as soon as we can\n              this.setPosition(startPosition);\n              this.play();\n            }\n          }\n        });\n      } else if (this.sm2Sound.isHTML5) {\n        this.sm2Sound.play();\n      } else {\n        // deal with Flash callback issues\n        setTimeout(function() {\n          sound.sm2Sound.play();\n        }, 1);\n      }\n    }\n  },\n\n  // pause playback of the current sound clip\n  pause: function() {\n    if (this.sm2Sound) {\n      this.sm2Sound.pause();\n    }\n  },\n\n  // resume playback of the current sound clip\n  resume: function() {\n    if (this.sm2Sound) {\n      this.sm2Sound.resume();\n    }\n  },\n\n  // elapsed number of milliseconds played\n  position: function() {\n    if (this.sm2Sound) {\n      return this.sm2Sound.position;\n    } else {\n      return 0;\n    }\n  },\n\n  // duration in milliseconds of the song\n  // (this may change until the song is full loaded)\n  duration: function() {\n    if (this.sm2Sound) {\n      var d = this.sm2Sound.duration;\n      return d ? d : 1;\n    } else {\n      return 1;\n    }\n  },\n\n  // stop playing the given sound clip, unload it, and disable events\n  destroy: function() {\n    log('destroy triggered for', this.id);\n\n    if (this.sm2Sound) {\n      delete speaker.outstandingPlays[this.id];\n      this.sm2Sound.destruct();\n      this.sm2Sound = null;\n    }\n\n    this.off();\n  },\n\n  _nonRepeatTrigger: function(event) {\n    if (this.lastTrigger !== event) {\n      this.lastTrigger = event;\n      this.trigger.apply(this, Array.prototype.slice.call(arguments, 0));\n    }\n  },\n\n  gainAdjustedVolume: function(volume) {\n    if (!this.gain) {\n      log('no volume adjustment');\n      return volume;\n    }\n\n    var adjusted = Math.max(Math.min((volume / 100) * (50 * Math.pow(10, this.gain / 20)), 100), 0);\n\n    log('gain adjustment is ' + this.gain + ', and final adjusted volume is ' + adjusted);\n\n    return adjusted;\n  }\n\n};\n\nvar Speaker = function(options) {\n  var speaker = this;\n\n  options = _.extend({ swfBase: '//feed.fm/js/latest/' }, options);\n\n  this.onReadyPromise = $.Deferred();\n\n  var config = {\n    wmode: 'transparent',\n    useHighPerformance: true,\n    flashPollingInterval: 500,\n    html5PollingInterval: 500,\n    debugMode: options.debug || false,\n    useConsole: options.debug ? true : false, // feedConsole : null,\n    debugFlash: options.debug || false,\n    preferFlash: options.preferFlash || false,\n    url: util.addProtocol(options.swfBase, true),\n    onready: function() {\n      var preferred;\n\n      if (window.soundManager.canPlayMIME('audio/aac')) {\n        // some clients play aac, and we prefer that\n        preferred = 'aac,mp3';\n      } else {\n        // every client plays mp3\n        preferred = 'mp3';\n      }\n\n      speaker.onReadyPromise.resolve(preferred);\n    }\n  };\n\n  // The SoundManager library likes to watch for the onpageload\n  // event and initialize itself as soon as the page loads. This\n  // causes problems when SoundManager is loaded up lazily by requirejs\n  // vs packaged with all the Feed SDK. When packaging things up,\n  // we prefix all the code with 'window.SM2_DEFER = true;' to prevent\n  // the code from initializing on load, but then the SoundManager\n  // code doesn't make the 'window.soundManager' singleton, so we do that\n  // here\n  if (!window.soundManager) {\n    window.soundManager = new SoundManager();\n  }\n  \n  window.soundManager.setup(config);\n\n  var s = options.silence;\n  if (!s) {\n    s = options.swfBase;\n    if (s[s.length - 1] !== '/') {\n      s += '/';\n    }\n    s += '5seconds.mp3';\n  }\n\n  this.silence = util.addProtocol(s, options.secure);\n};\n\nSpeaker.prototype = {\n  vol: 100,\n  outstandingPlays: { },\n  mobileInitialized: false,\n  onReadyPromise: null,\n\n  initializeForMobile: function() {\n    if (!this.mobileInitialized) {\n      // Just play a blank mp3 file that we know the location of, presumably\n      // while we ping the server for the song we want\n      var sound = this._createSM2Sound({\n        id: 'silence',\n        url: this.silence,\n        volume: 1,\n        autoPlay: true,\n        type: 'audio/mp3'\n      });\n\n      this.mobileInitialized = !sound.fake;\n    }\n  },\n\n  // start playing the given clip and return sound object\n  create: function(url, callbacks) {\n    var sound = new Sound(callbacks);\n    sound.id = _.uniqueId('play');\n    sound.url = url;\n\n    this.outstandingPlays[sound.id] = sound;\n\n    this._createAndAssignSM2Sound(sound);\n\n    return sound;\n  },\n\n  _createSM2Sound: function(options) { \n    return window.soundManager.createSound(options);\n  },\n\n  _createAndAssignSM2Sound: function(sound) {\n    var speaker = this;\n\n    sound.sm2Sound = this._createSM2Sound({\n      id: sound.id,\n      url: sound.url,\n      volume: sound.gainAdjustedVolume(speaker.vol),\n      autoPlay: false,\n      type: 'audio/mp3',\n      onfinish: function() {\n        log(sound.id + ': onfinish');\n        this.destruct();\n        delete speaker.outstandingPlays[sound.id];\n        sound._nonRepeatTrigger('finish');\n      },\n      onid3: function() {\n        log(sound.id + ': onid3');\n      },\n      onstop: function() {\n        log(sound.id + ': onstop');\n      },\n      onsuspend: function() {\n        log(sound.id + ': suspend');\n      },\n      onresume: function() {\n        log(sound.id + ': onresume');\n        sound._nonRepeatTrigger('play');\n      },\n      onplay: function() {\n        log(sound.id + ': onplay');\n        sound._nonRepeatTrigger('play');\n      },\n      onpause: function() {\n        log(sound.id + ': pause');\n        sound._nonRepeatTrigger('pause');\n      },\n      onload: function(success) {\n        log(sound.id + ': onload', success);\n        if (!success) {\n         log(sound.id + ' failure!');\n          sound._nonRepeatTrigger('finish', true);\n          // consider this a failure\n          log('destroying after onload failure');\n          sound.destroy();\n        }\n      },\n      ondataerror: function() {\n        log(sound.id + ': ondataerror');\n        sound._nonRepeatTrigger('finish', true);\n        log('destroying after ondataerr');\n        sound.destroy();\n      },\n      onconnect: function() {\n        log(sound.id + ': onconnect' );\n      },\n      onbufferchange: function() {\n        log(sound.id + ': onbufferchange');\n      },\n      whileplaying: function() {\n        sound.trigger('elapse');\n      }\n    });\n\n    return sound;\n  },\n\n  // set or get the volume (0-100)\n  setVolume: function(value) {\n    if (typeof value !== 'undefined') {\n      this.vol = value;\n\n      _.each(this.outstandingPlays, function(song) {\n        song.sm2Sound.setVolume(song.gainAdjustedVolume(value));\n      });\n\n      this.trigger('volume', value);\n    }\n\n    return this.vol;\n  }\n\n};\n\n// add events to speaker class\n_.extend(Speaker.prototype, Events);\n\nvar speaker = null;\n\n// there should only ever be a single instance of 'Speaker'\nmodule.exports = function(options, onReady) {\n  if (speaker === null) {\n    speaker = new Speaker(options);\n  }\n\n  if (onReady) {\n    speaker.onReadyPromise.then(function(formats) {\n      onReady(formats);\n    });\n  }\n\n  return speaker;\n};\n\n","/*global module:false */\n\nvar util = { };\n\nutil.addProtocol = function(url, secure) {\n  // handle '//somewhere.com/' url's\n  if (url.slice(0, 2) === '//') {\n    if (secure === true) {\n      url = 'https:' + url;\n\n    } else if (secure === false) {\n      url = 'http:' + url;\n    \n    } else if (window.location.protocol.substr(0, 4) === 'http') {\n      url = window.location.protocol + url;\n\n    } else {\n      url = 'http';\n    }\n  }\n  \n  return url;\n};\n\nmodule.exports = util;\n\n","module.exports=\"1.9.0\"\n"]}