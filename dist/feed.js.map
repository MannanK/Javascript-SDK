{"version":3,"sources":["../node_modules/browser-pack/_prelude.js","../node_modules/base64-js/lib/b64.js","feed.js","../node_modules/buffer/index.js","../node_modules/buffer/node_modules/isarray/index.js","../node_modules/ieee754/index.js","../node_modules/js-base64/base64.js","../node_modules/soundmanager2/script/soundmanager2.js","../node_modules/tiny-cookie/tiny-cookie.js","events.js","log.js","player-view.js","player.js","session.js","speaker.js","util.js"],"names":["f","exports","module","define","amd","g","window","global","self","this","Feed","e","t","n","r","s","o","u","a","require","i","Error","code","l","call","length",1,"init","len","lookup","revLookup","charCodeAt","toByteArray","b64","j","tmp","placeHolders","arr","Arr","L","tripletToBase64","num","encodeChunk","uint8","start","end","output","push","join","fromByteArray","extraBytes","parts","maxChunkLength","len2","Uint8Array","Array",2,"typedArraySupport","foo","subarray","byteLength","kMaxLength","Buffer","TYPED_ARRAY_SUPPORT","arg","parent","undefined","fromNumber","fromString","arguments","fromObject","that","allocate","checked","string","encoding","write","object","isBuffer","fromBuffer","isArray","fromArray","TypeError","ArrayBuffer","buffer","fromTypedArray","fromArrayBuffer","fromArrayLike","fromJsonObject","copy","array","__proto__","prototype","type","data","fromPool","poolSize","rootParent","RangeError","toString","SlowBuffer","subject","buf","loweredCase","utf8ToBytes","base64ToBytes","toLowerCase","slowToString","Infinity","hexSlice","utf8Slice","asciiSlice","binarySlice","base64Slice","utf16leSlice","hexWrite","offset","Number","remaining","strLen","parsed","parseInt","substr","isNaN","utf8Write","blitBuffer","asciiWrite","asciiToBytes","binaryWrite","base64Write","ucs2Write","utf16leToBytes","base64","slice","Math","min","res","firstByte","codePoint","bytesPerSequence","secondByte","thirdByte","fourthByte","tempCodePoint","decodeCodePointsArray","codePoints","MAX_ARGUMENTS_LENGTH","String","fromCharCode","apply","ret","out","toHex","bytes","checkOffset","ext","checkInt","value","max","objectWriteUInt16","littleEndian","objectWriteUInt32","checkIEEE754","writeFloat","noAssert","ieee754","writeDouble","base64clean","str","stringtrim","replace","INVALID_BASE64_RE","trim","units","leadSurrogate","byteArray","c","hi","lo","src","dst","INSPECT_MAX_BYTES","_augment","Symbol","species","Object","defineProperty","configurable","b","_isBuffer","compare","x","y","isEncoding","concat","list","pos","item","equals","inspect","match","indexOf","val","byteOffset","arrayIndexOf","foundIndex","isFinite","swap","toJSON","_arr","newBuf","sliceLen","readUIntLE","mul","readUIntBE","readUInt8","readUInt16LE","readUInt16BE","readUInt32LE","readUInt32BE","readIntLE","pow","readIntBE","readInt8","readInt16LE","readInt16BE","readInt32LE","readInt32BE","readFloatLE","read","readFloatBE","readDoubleLE","readDoubleBE","writeUIntLE","writeUIntBE","writeUInt8","floor","writeUInt16LE","writeUInt16BE","writeUInt32LE","writeUInt32BE","writeIntLE","limit","sub","writeIntBE","writeInt8","writeInt16LE","writeInt16BE","writeInt32LE","writeInt32BE","writeFloatLE","writeFloatBE","writeDoubleLE","writeDoubleBE","target","targetStart","set","fill","base64-js","isarray",3,4,"isLE","mLen","nBytes","m","eLen","eMax","eBias","nBits","d","NaN","rt","abs","log","LN2",5,"_Base64","Base64","version","err","b64chars","b64tab","bin","charAt","cb_utob","cc","re_utob","utob","cb_encode","ccc","padlen","ord","chars","btoa","_encode","constructor","encode","urisafe","m0","encodeURI","re_btou","RegExp","cb_btou","cccc","cp","btou","cb_decode","atob","_decode","decode","noConflict","VERSION","fromBase64","toBase64","noEnum","v","enumerable","writable","extendString",6,"_undefined","SoundManager","smURL","smID","preferFlashCheck","kind","sm2","preferFlash","hasFlash","ignoreFlash","flash","html5_event","oFn","result","_s","_a","id","_wD","h5","setupOptions","url","flashVersion","debugMode","debugFlash","useConsole","consoleOnly","waitForWindowLoad","bgColor","useHighPerformance","flashPollingInterval","html5PollingInterval","flashLoadTimeout","wmode","allowScriptAccess","useFlashBlock","useHTML5Audio","forceUseGlobalHTML5Audio","ignoreMobileRestrictions","html5Test","noSWFCache","idPrefix","defaultOptions","autoLoad","autoPlay","from","loops","onid3","onload","whileloading","onplay","onpause","onresume","whileplaying","onposition","onstop","onfailure","onfinish","multiShot","multiShotEvents","position","pan","stream","to","usePolicyFile","volume","flash9Options","isMovieStar","usePeakData","useWaveformData","useEQData","onbufferchange","ondataerror","movieStarOptions","bufferTime","serverURL","onconnect","duration","audioFormats","mp3","required","mp4","related","ogg","opus","wav","movieID","debugID","debugURLParam","versionNumber","movieURL","altURL","swfLoaded","enabled","oMC","sounds","soundIDs","muted","didFlashBlock","filePattern","filePatterns","flash8","flash9","features","buffering","peakData","waveformData","eqData","movieStar","sandbox","types","remote","localWithFile","localWithNetwork","localTrusted","description","noRemote","noLocal","html5","usingFlash","html5Only","SMSound","doNothing","setProperties","fV","debugTS","_wDS","initComplete","mixin","assign","extraOptions","addOnEvent","processOnEvents","initUserOnload","delayWaitForEI","waitForEI","rebootIntoHTML5","setVersionInfo","handleFocus","strings","initMovie","domContentLoaded","winOnLoad","didDCLoaded","getDocument","createMovie","catchError","setPolling","initDebug","disableObject","failSafely","normalizeMovieURL","flashBlockHandler","getSWFCSS","swfCSS","toggleDebug","loopFix","policyFix","complain","idCheck","startTimer","stopTimer","timerExecute","parseURL","canIgnoreFlash","featureCheck","html5OK","html5CanPlay","html5Ext","html5Unload","domContentLoadedIE","testHTML5","event","lastGlobalHTML5URL","detectFlash","badSafariFix","html5_events","showSupport","flushMessages","wrapCallback","didSetup","globalHTML5Audio","sm","smc","ua","navigator","userAgent","wl","location","href","doc","document","on_queue","debugOpen","didAppend","appendSuccess","didInit","disabled","windowLoaded","wdCount","debugLevels","defaultFlashVersion","oRemoved","oRemovedHTML","waitingForEI","initPending","h5TimerCount","h5IntervalTimer","messages","needsFlash","useGlobalHTML5Audio","idCounter","msecScale","is_iDevice","isAndroid","isIE","isWebkit","isSafari","isOpera","mobileHTML5","isBadSafari","hasConsole","console","isFocused","hasFocus","tryInitOnFocus","okToDisable","flashMIME","emptyURL","emptyWAV","overHTTP","protocol","http","netStreamMimeTypes","netStreamTypes","netStreamPattern","mimePattern","useAltURL","swfBox","swfDefault","swfError","swfTimedout","swfUnblocked","sm2Debug","highPerf","flashDebug","hasHTML5","Audio","opera","canPlayType","setup","options","noURL","ok","globalHTML5","ignoreMobile","mobileUA","beginDelayedInit","readyState","setTimeout","supported","getMovie","createSound","oOptions","_url","make","cs","cs_string","oSound","_setup_html5","_createSound","connected","load","play","destroySound","sID","_bFromSound","oS","stop","_iO","unload","splice","destruct","onPosition","nPosition","oMethod","oScope","clearOnPosition","overloaded","setPosition","nMsecOffset","stopAll","hasOwnProperty","pause","pauseAll","resume","resumeAll","togglePause","setPan","nPan","setVolume","nVol","mute","muteAll","unmute","unmuteAll","toggleMute","getMemoryUse","ram","_getMemoryUse","disable","bNoDisable","remove","canPlayMIME","sMIME","canPlayURL","sURL","canPlayLink","oLink","getSoundById","_suppressDebug","onready","sType","ontimeout","_writeDebug","sText","sTypeOrObject","oItem","sDID","createElement","className","appendChild","createTextNode","style","fontWeight","color","insertBefore","firstChild","alert","_debug","reboot","resetEvents","excludeInit","k","innerHTML","parentNode","removeChild","fired","reset","getMoviePercent","PercentLoaded","resetProperties","add_html5_events","remove_html5_events","stop_html5_timer","start_html5_timer","attachOnPosition","detachOnPosition","applyFromTo","lastHTML5State","urlOmitted","onplay_called","onPositionItems","onPositionFired","lastURL","time","instanceOptions","isHTML5","id3","loaded","playState","_called_load","_html5_canplay","autobuffer","preload","_load","fatal","_unload","_bFromSM","_destroySound","_updatePlayState","fN","allowMulti","audioClone","onended","oncanplay","startOK","exit","getAutoPlay","setAutoPlay","paused","lastIndexOf","instanceCount","_oncanplay","_onfinish","currentTime","add","_start","onplayerror","bAll","originalPosition","_onbufferchange","_resetOnPosition","_onTimer","_stop","_setAutoPlay","position1K","message","_setPosition","_bCallFlash","_pause","bInstanceOnly","_setPan","_bInstanceOnly","_setVolume","hasIO","method","scope","_processOnPosition","op","retainPosition","_hasTimer","bytesLoaded","bytesTotal","durationEstimate","buffered","left","right","failures","isBuffering","metadata","bForce","isNew","_get_html5_duration","_whileplaying","_apply_loop","nLoops","loop","sameURL","dURL","decodeURI","oEvt","bCapture","addEventListener","_added_events","removeEventListener","_onload","nSuccess","loadOK","nIsBuffering","_onsuspend","onsuspend","_onfailure","msg","level","_onwarning","onwarning","io_onfinish","_whileloading","nBytesLoaded","nBytesTotal","nDuration","nBufferLength","bufferLength","oPeakData","oWaveformDataLeft","oWaveformDataRight","oEQData","eqLeft","leftPeak","rightPeak","split","leftEQ","rightEQ","_oncaptiondata","oData","captiondata","oncaptiondata","_onmetadata","oMDProps","oMDData","onmetadata","_onid3","oID3Props","oID3Data","_onconnect","bSuccess","_ondataerror","sError","body","getElementsByTagName","getElementById","oMain","oAdd","o2","o1","callback","oParent","hasParent","bonusOptions","Function","getArgs","oArgs","args","old","pop","element","shift","evt","abort","canplay","ee","canplaythrough","durationchange","ended","error","loadeddata","_loaded","loadedmetadata","loadstart","playing","progress","progStr","isProgress","ranges","total","ratechange","suspend","stalled","timeupdate","waiting","iO","oAudio","_called_unload","fileExt","mime","aF","canPlay","isOK","support","notReady","notOK","domError","spcWmode","swf404","tryDebug","checkSWF","localFail","waitFocus","waitForever","waitSWF","needFunction","badID","currentObj","waitOnload","docLoaded","onloadOK","secNote","badRemove","shutdown","queue","smError","fbTimeout","fbLoaded","fbHandler","manURL","onURL","badFV","as2loop","noNSLoop","needfl9","mfTimeout","needFlash","gotFocus","policy","setupError","setupUndef","setupLate","sm2Loaded","sstr","sOpt","sPre","sMsg","warn","oProp","urlParams","Date","getTime","isDebug","bPolling","bHighPerformance","_setPolling","test","oD","oDebug","oTarget","oToggle","bottom","width","height","lineHeight","margin","textAlign","border","cursor","background","zIndex","onclick","title","display","e2","errorLevel","oT","sEventType","sMessage","sm2Debugger","handleEvent","css","name","p","ignoreInit","status","success","srcQueue","canRetry","obj","hasPlugin","nP","plugins","AX","ActiveXObject","mimeTypes","enabledPlugin","flashNeeded","formats","isSpecial","urlResult","setInterval","clearInterval","onerror","_setSandboxType","sandboxType","sb","_externalInterfaceOK","swfVersion","initMsg","delimiter","param","oEmbed","oMovie","movieHTML","oEl","sClass","remoteURL","localURL","swfTitle","extraClass","isRTL","html","dir","platform","quality","bgcolor","pluginspage","hasPriority","FlashVars","setAttribute","overflow","top","oninitmovie","loadIncomplete","cleanup","tests","wasTimeout","_externalInterfaceTest","_disableDebug","detachEvent","attachEvent","soundManager","SM2_DEFER","getInstance","smBuilder","instance",7,"root","factory","Cookie","key","opts","get","escapeRe","convert","expires","computeExpires","toUTCString","lastCh","setFullYear","getFullYear","setMonth","getMonth","setDate","getDate","setHours","getHours","setMinutes","getMinutes","setSeconds","getSeconds","cookie","raw","reKey","exec","decodeURIComponent","getRaw","encodeURIComponent","setRaw",8,"_","Events","on","context","eventsApi","_events","events","ctx","once","off","_callback","retain","ev","names","keys","trigger","allEvents","all","triggerEvents","stopListening","listeners","_listeners","deleteListener","_listenerId","eventSplitter","action","rest","a1","a2","a3","listenMethods","listenTo","listenToOnce","each","implementation","uniqueId",9,"Session","PlayerView","Player","getSpeaker","_getSpeaker","./log","./player","./player-view","./session","./speaker",10,"bind","fields","history","script","feedLogger",11,"formatTime","millis","asSeconds","secondsPart","minutesPart","$","player","alertId","durationId","startedPlayback","$el","_onPlacement","_onPlayStarted","_onPlayPaused","_onPlayResumed","_onPlayCompleted","_onPlayLiked","_onPlayUnliked","_onPlayDisliked","_onPlaysExhausted","_onSkipDenied","_onSuspend","_enableButtonsBasedOnState","displayText","originalDisplayText","renderStatus","_onStatusClick","_onPlayButtonClick","_onPauseButtonClick","_onSkipButtonClick","_onLikeButtonClick","_onDislikeButtonClick","state","getCurrentState","skip","closest","is","unlike","like","dislike","find","placement","formatPlacement","formatPlay","_setLikeStatus","liked","_enablePositionTracker","playerView","renderPosition","getPosition","getDuration","addClass","removeClass","_disablePositionTracker","renderAlert","audio_file","track","artist","release","elapsed","round","alertText","clearTimeout","toEnable","toDisable","maybeCanSkip","attr","removeAttr",12,"supports_html5_storage","token","secret","suspended","skipPlayDelay","extend","session","_onPlayActive","initializeSpeaker","Deferred","speaker","supportedFormats","reqFormatList","suppFormatList","reqAndSuppFormatList","intersection","reqAndSuppFormats","setFormats","resolve","setMuted","isMuted","setPlacementId","placementId","setStationId","stationId","setBaseUrl","baseUrl","_onSoundPlay","_onSoundPause","finish","_onSoundFinish","elapse","_onSoundElapse","startPosition","sound","create","activePlay","startReportedToServer","soundCompleted","playStarted","previousPosition","playId","getActivePlay","reportPlayStarted","hasActivePlayStarted","getActivePlacement","withError","soundCompletedWithError","requestInvalidate","reportPlayCompleted","interval","previousCount","currentCount","reportPlayElapsed","defer","destroy","isPaused","isTuned","getStationInformation","stationInformationCallback","tune","then","initializeForMobile","likePlay","unlikePlay","dislikePlay","requestSkip","mutedKey","localStorage","unsuspend","startPlayback","./events",13,"repeatAfter","delay","cb","util","config","addProtocol","secure","maxBitrate","timeOffset","current","pendingRequest","pendingPlay","setCredentials","_retune","setMaxBitrate","_assignCurrentPlay","_getPlacementInformation","_getDefaultPlacementInformation","ajax","client_id","clientId","dataType","timeout","_signedAjax","done","_receiveDefaultPlacementInformation","fail","_failedDefaultPlacementInformation","placementInformation","stations","_requestNextPlay","response","fullResponse","parseJSON","responseText","_receivePlacementInformation","_failedPlacementInformation","started","_startPlay","seconds","always","_receivePlayCompleted","canSkip","_receiveSkip","_failSkip","_sendInvalidate","_receiveInvalidate","_failInvalidate","retryCount","_receiveStartPlay","can_skip","_failStartPlay","waitingIfEmpty","_getClientId","_receiveNextPlay","_failedNextPlay","max_bitrate","placement_id","station_id","clientPromise","clientDeferred","promise","_requestClientId","_setStoredCid","saveClientId","_getStoredCid","newDelay","saved","clone","cookieName","path","_deleteStoredCid","removeItem","removeCookie","_sign","request","authorization","headers","Authorization","_ajax","./util","js-base64","tiny-cookie",14,"Sound","sm2Sound","fake","outstandingPlays","_nonRepeatTrigger","lastTrigger","Speaker","swfBase","onReadyPromise","debug","preferred","silence","vol","mobileInitialized","_createSM2Sound","callbacks","_createAndAssignSM2Sound","song","onReady","soundmanager2",15],"mappings":"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","file":"feed.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","'use strict'\n\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nfunction init () {\n  var i\n  var code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\n  var len = code.length\n\n  for (i = 0; i < len; i++) {\n    lookup[i] = code[i]\n  }\n\n  for (i = 0; i < len; ++i) {\n    revLookup[code.charCodeAt(i)] = i\n  }\n  revLookup['-'.charCodeAt(0)] = 62\n  revLookup['_'.charCodeAt(0)] = 63\n}\n\ninit()\n\nfunction toByteArray (b64) {\n  var i, j, l, tmp, placeHolders, arr\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // the number of equal signs (place holders)\n  // if there are two placeholders, than the two characters before it\n  // represent one byte\n  // if there is only one, then the three characters before it represent 2 bytes\n  // this is just a cheap hack to not do indexOf twice\n  placeHolders = b64[len - 2] === '=' ? 2 : b64[len - 1] === '=' ? 1 : 0\n\n  // base64 is 4/3 + up to two characters of the original data\n  arr = new Arr(len * 3 / 4 - placeHolders)\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  l = placeHolders > 0 ? len - 4 : len\n\n  var L = 0\n\n  for (i = 0, j = 0; i < l; i += 4, j += 3) {\n    tmp = (revLookup[b64.charCodeAt(i)] << 18) | (revLookup[b64.charCodeAt(i + 1)] << 12) | (revLookup[b64.charCodeAt(i + 2)] << 6) | revLookup[b64.charCodeAt(i + 3)]\n    arr[L++] = (tmp & 0xFF0000) >> 16\n    arr[L++] = (tmp & 0xFF00) >> 8\n    arr[L++] = tmp & 0xFF\n  }\n\n  if (placeHolders === 2) {\n    tmp = (revLookup[b64.charCodeAt(i)] << 2) | (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[L++] = tmp & 0xFF\n  } else if (placeHolders === 1) {\n    tmp = (revLookup[b64.charCodeAt(i)] << 10) | (revLookup[b64.charCodeAt(i + 1)] << 4) | (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[L++] = (tmp >> 8) & 0xFF\n    arr[L++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] + lookup[num >> 12 & 0x3F] + lookup[num >> 6 & 0x3F] + lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp = (uint8[i] << 16) + (uint8[i + 1] << 8) + (uint8[i + 2])\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var output = ''\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    output += lookup[tmp >> 2]\n    output += lookup[(tmp << 4) & 0x3F]\n    output += '=='\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + (uint8[len - 1])\n    output += lookup[tmp >> 10]\n    output += lookup[(tmp >> 4) & 0x3F]\n    output += lookup[(tmp << 2) & 0x3F]\n    output += '='\n  }\n\n  parts.push(output)\n\n  return parts.join('')\n}\n","/*global module:false */\n\n/*! A Feed.fm joint: github.com/fuzz-radio/Javascript-SDK */\n\n/*\n * This is the object we export as 'Feed' when everything is bundled up.\n */\n\nvar Session = require('./session');\nvar log = require('./log');\nvar PlayerView = require('./player-view');\nvar Player = require('./player');\nvar getSpeaker = require('./speaker');\n\nmodule.exports = {\n  Session: Session,\n  Player: Player,\n  PlayerView: PlayerView,\n  log: log,\n\n  _getSpeaker: getSpeaker\n};\n\n","/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nvar base64 = require('base64-js')\nvar ieee754 = require('ieee754')\nvar isArray = require('isarray')\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\nBuffer.poolSize = 8192 // not used by this implementation\n\nvar rootParent = {}\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Use Object implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * Due to various browser bugs, sometimes the Object implementation will be used even\n * when the browser supports typed arrays.\n *\n * Note:\n *\n *   - Firefox 4-29 lacks support for adding new properties to `Uint8Array` instances,\n *     See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.\n *\n *   - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.\n *\n *   - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of\n *     incorrect length in some situations.\n\n * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they\n * get the Object implementation, which is slower but behaves correctly.\n */\nBuffer.TYPED_ARRAY_SUPPORT = global.TYPED_ARRAY_SUPPORT !== undefined\n  ? global.TYPED_ARRAY_SUPPORT\n  : typedArraySupport()\n\nfunction typedArraySupport () {\n  try {\n    var arr = new Uint8Array(1)\n    arr.foo = function () { return 42 }\n    return arr.foo() === 42 && // typed array instances can be augmented\n        typeof arr.subarray === 'function' && // chrome 9-10 lack `subarray`\n        arr.subarray(1, 1).byteLength === 0 // ie10 has broken `subarray`\n  } catch (e) {\n    return false\n  }\n}\n\nfunction kMaxLength () {\n  return Buffer.TYPED_ARRAY_SUPPORT\n    ? 0x7fffffff\n    : 0x3fffffff\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\nfunction Buffer (arg) {\n  if (!(this instanceof Buffer)) {\n    // Avoid going through an ArgumentsAdaptorTrampoline in the common case.\n    if (arguments.length > 1) return new Buffer(arg, arguments[1])\n    return new Buffer(arg)\n  }\n\n  if (!Buffer.TYPED_ARRAY_SUPPORT) {\n    this.length = 0\n    this.parent = undefined\n  }\n\n  // Common case.\n  if (typeof arg === 'number') {\n    return fromNumber(this, arg)\n  }\n\n  // Slightly less common case.\n  if (typeof arg === 'string') {\n    return fromString(this, arg, arguments.length > 1 ? arguments[1] : 'utf8')\n  }\n\n  // Unusual.\n  return fromObject(this, arg)\n}\n\n// TODO: Legacy, not needed anymore. Remove in next major version.\nBuffer._augment = function (arr) {\n  arr.__proto__ = Buffer.prototype\n  return arr\n}\n\nfunction fromNumber (that, length) {\n  that = allocate(that, length < 0 ? 0 : checked(length) | 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) {\n    for (var i = 0; i < length; i++) {\n      that[i] = 0\n    }\n  }\n  return that\n}\n\nfunction fromString (that, string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') encoding = 'utf8'\n\n  // Assumption: byteLength() return value is always < kMaxLength.\n  var length = byteLength(string, encoding) | 0\n  that = allocate(that, length)\n\n  that.write(string, encoding)\n  return that\n}\n\nfunction fromObject (that, object) {\n  if (Buffer.isBuffer(object)) return fromBuffer(that, object)\n\n  if (isArray(object)) return fromArray(that, object)\n\n  if (object == null) {\n    throw new TypeError('must start with number, buffer, array or string')\n  }\n\n  if (typeof ArrayBuffer !== 'undefined') {\n    if (object.buffer instanceof ArrayBuffer) {\n      return fromTypedArray(that, object)\n    }\n    if (object instanceof ArrayBuffer) {\n      return fromArrayBuffer(that, object)\n    }\n  }\n\n  if (object.length) return fromArrayLike(that, object)\n\n  return fromJsonObject(that, object)\n}\n\nfunction fromBuffer (that, buffer) {\n  var length = checked(buffer.length) | 0\n  that = allocate(that, length)\n  buffer.copy(that, 0, 0, length)\n  return that\n}\n\nfunction fromArray (that, array) {\n  var length = checked(array.length) | 0\n  that = allocate(that, length)\n  for (var i = 0; i < length; i += 1) {\n    that[i] = array[i] & 255\n  }\n  return that\n}\n\n// Duplicate of fromArray() to keep fromArray() monomorphic.\nfunction fromTypedArray (that, array) {\n  var length = checked(array.length) | 0\n  that = allocate(that, length)\n  // Truncating the elements is probably not what people expect from typed\n  // arrays with BYTES_PER_ELEMENT > 1 but it's compatible with the behavior\n  // of the old Buffer constructor.\n  for (var i = 0; i < length; i += 1) {\n    that[i] = array[i] & 255\n  }\n  return that\n}\n\nfunction fromArrayBuffer (that, array) {\n  array.byteLength // this throws if `array` is not a valid ArrayBuffer\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = new Uint8Array(array)\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    that = fromTypedArray(that, new Uint8Array(array))\n  }\n  return that\n}\n\nfunction fromArrayLike (that, array) {\n  var length = checked(array.length) | 0\n  that = allocate(that, length)\n  for (var i = 0; i < length; i += 1) {\n    that[i] = array[i] & 255\n  }\n  return that\n}\n\n// Deserialize { type: 'Buffer', data: [1,2,3,...] } into a Buffer object.\n// Returns a zero-length buffer for inputs that don't conform to the spec.\nfunction fromJsonObject (that, object) {\n  var array\n  var length = 0\n\n  if (object.type === 'Buffer' && isArray(object.data)) {\n    array = object.data\n    length = checked(array.length) | 0\n  }\n  that = allocate(that, length)\n\n  for (var i = 0; i < length; i += 1) {\n    that[i] = array[i] & 255\n  }\n  return that\n}\n\nif (Buffer.TYPED_ARRAY_SUPPORT) {\n  Buffer.prototype.__proto__ = Uint8Array.prototype\n  Buffer.__proto__ = Uint8Array\n  if (typeof Symbol !== 'undefined' && Symbol.species &&\n      Buffer[Symbol.species] === Buffer) {\n    // Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97\n    Object.defineProperty(Buffer, Symbol.species, {\n      value: null,\n      configurable: true\n    })\n  }\n} else {\n  // pre-set for values that may exist in the future\n  Buffer.prototype.length = undefined\n  Buffer.prototype.parent = undefined\n}\n\nfunction allocate (that, length) {\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = new Uint8Array(length)\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    that.length = length\n  }\n\n  var fromPool = length !== 0 && length <= Buffer.poolSize >>> 1\n  if (fromPool) that.parent = rootParent\n\n  return that\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < kMaxLength` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= kMaxLength()) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + kMaxLength().toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (subject, encoding) {\n  if (!(this instanceof SlowBuffer)) return new SlowBuffer(subject, encoding)\n\n  var buf = new Buffer(subject, encoding)\n  delete buf.parent\n  return buf\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return !!(b != null && b._isBuffer)\n}\n\nBuffer.compare = function compare (a, b) {\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError('Arguments must be Buffers')\n  }\n\n  if (a === b) return 0\n\n  var x = a.length\n  var y = b.length\n\n  var i = 0\n  var len = Math.min(x, y)\n  while (i < len) {\n    if (a[i] !== b[i]) break\n\n    ++i\n  }\n\n  if (i !== len) {\n    x = a[i]\n    y = b[i]\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'binary':\n    case 'base64':\n    case 'raw':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!isArray(list)) throw new TypeError('list argument must be an Array of Buffers.')\n\n  if (list.length === 0) {\n    return new Buffer(0)\n  }\n\n  var i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; i++) {\n      length += list[i].length\n    }\n  }\n\n  var buf = new Buffer(length)\n  var pos = 0\n  for (i = 0; i < list.length; i++) {\n    var item = list[i]\n    item.copy(buf, pos)\n    pos += item.length\n  }\n  return buf\n}\n\nfunction byteLength (string, encoding) {\n  if (typeof string !== 'string') string = '' + string\n\n  var len = string.length\n  if (len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'binary':\n      // Deprecated\n      case 'raw':\n      case 'raws':\n        return len\n      case 'utf8':\n      case 'utf-8':\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) return utf8ToBytes(string).length // assume utf8\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  var loweredCase = false\n\n  start = start | 0\n  end = end === undefined || end === Infinity ? this.length : end | 0\n\n  if (!encoding) encoding = 'utf8'\n  if (start < 0) start = 0\n  if (end > this.length) end = this.length\n  if (end <= start) return ''\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'binary':\n        return binarySlice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// The property is used by `Buffer.isBuffer` and `is-buffer` (in Safari 5-7) to detect\n// Buffer instances.\nBuffer.prototype._isBuffer = true\n\nBuffer.prototype.toString = function toString () {\n  var length = this.length | 0\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  var str = ''\n  var max = exports.INSPECT_MAX_BYTES\n  if (this.length > 0) {\n    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ')\n    if (this.length > max) str += ' ... '\n  }\n  return '<Buffer ' + str + '>'\n}\n\nBuffer.prototype.compare = function compare (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return 0\n  return Buffer.compare(this, b)\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset) {\n  if (byteOffset > 0x7fffffff) byteOffset = 0x7fffffff\n  else if (byteOffset < -0x80000000) byteOffset = -0x80000000\n  byteOffset >>= 0\n\n  if (this.length === 0) return -1\n  if (byteOffset >= this.length) return -1\n\n  // Negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = Math.max(this.length + byteOffset, 0)\n\n  if (typeof val === 'string') {\n    if (val.length === 0) return -1 // special case: looking for empty string always fails\n    return String.prototype.indexOf.call(this, val, byteOffset)\n  }\n  if (Buffer.isBuffer(val)) {\n    return arrayIndexOf(this, val, byteOffset)\n  }\n  if (typeof val === 'number') {\n    if (Buffer.TYPED_ARRAY_SUPPORT && Uint8Array.prototype.indexOf === 'function') {\n      return Uint8Array.prototype.indexOf.call(this, val, byteOffset)\n    }\n    return arrayIndexOf(this, [ val ], byteOffset)\n  }\n\n  function arrayIndexOf (arr, val, byteOffset) {\n    var foundIndex = -1\n    for (var i = 0; byteOffset + i < arr.length; i++) {\n      if (arr[byteOffset + i] === val[foundIndex === -1 ? 0 : i - foundIndex]) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === val.length) return byteOffset + foundIndex\n      } else {\n        foundIndex = -1\n      }\n    }\n    return -1\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  var remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  // must be an even number of digits\n  var strLen = string.length\n  if (strLen % 2 !== 0) throw new Error('Invalid hex string')\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  for (var i = 0; i < length; i++) {\n    var parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (isNaN(parsed)) throw new Error('Invalid hex string')\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction binaryWrite (buf, string, offset, length) {\n  return asciiWrite(buf, string, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset | 0\n    if (isFinite(length)) {\n      length = length | 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  // legacy write(string, encoding, offset, length) - remove in v0.13\n  } else {\n    var swap = encoding\n    encoding = offset\n    offset = length | 0\n    length = swap\n  }\n\n  var remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n        return asciiWrite(this, string, offset, length)\n\n      case 'binary':\n        return binaryWrite(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  var res = []\n\n  var i = start\n  while (i < end) {\n    var firstByte = buf[i]\n    var codePoint = null\n    var bytesPerSequence = (firstByte > 0xEF) ? 4\n      : (firstByte > 0xDF) ? 3\n      : (firstByte > 0xBF) ? 2\n      : 1\n\n    if (i + bytesPerSequence <= end) {\n      var secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nvar MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  var len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  var res = ''\n  var i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; i++) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction binarySlice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; i++) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  var len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  var out = ''\n  for (var i = start; i < end; i++) {\n    out += toHex(buf[i])\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  var bytes = buf.slice(start, end)\n  var res = ''\n  for (var i = 0; i < bytes.length; i += 2) {\n    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256)\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  var len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  var newBuf\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    newBuf = this.subarray(start, end)\n    newBuf.__proto__ = Buffer.prototype\n  } else {\n    var sliceLen = end - start\n    newBuf = new Buffer(sliceLen, undefined)\n    for (var i = 0; i < sliceLen; i++) {\n      newBuf[i] = this[i + start]\n    }\n  }\n\n  if (newBuf.length) newBuf.parent = this.parent || this\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  var val = this[offset + --byteLength]\n  var mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var i = byteLength\n  var mul = 1\n  var val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('buffer must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('value is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('index out of range')\n}\n\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkInt(this, value, offset, byteLength, Math.pow(2, 8 * byteLength), 0)\n\n  var mul = 1\n  var i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkInt(this, value, offset, byteLength, Math.pow(2, 8 * byteLength), 0)\n\n  var i = byteLength - 1\n  var mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nfunction objectWriteUInt16 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; i++) {\n    buf[offset + i] = (value & (0xff << (8 * (littleEndian ? i : 1 - i)))) >>>\n      (littleEndian ? i : 1 - i) * 8\n  }\n}\n\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nfunction objectWriteUInt32 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffffffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; i++) {\n    buf[offset + i] = (value >>> (littleEndian ? i : 3 - i) * 8) & 0xff\n  }\n}\n\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset + 3] = (value >>> 24)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 1] = (value >>> 8)\n    this[offset] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = 0\n  var mul = 1\n  var sub = value < 0 ? 1 : 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  var sub = value < 0 ? 1 : 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 3] = (value >>> 24)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('index out of range')\n  if (offset < 0) throw new RangeError('index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  var len = end - start\n  var i\n\n  if (this === target && start < targetStart && targetStart < end) {\n    // descending copy from end\n    for (i = len - 1; i >= 0; i--) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {\n    // ascending copy from start\n    for (i = 0; i < len; i++) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, start + len),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// fill(value, start=0, end=buffer.length)\nBuffer.prototype.fill = function fill (value, start, end) {\n  if (!value) value = 0\n  if (!start) start = 0\n  if (!end) end = this.length\n\n  if (end < start) throw new RangeError('end < start')\n\n  // Fill 0 bytes; we're done\n  if (end === start) return\n  if (this.length === 0) return\n\n  if (start < 0 || start >= this.length) throw new RangeError('start out of bounds')\n  if (end < 0 || end > this.length) throw new RangeError('end out of bounds')\n\n  var i\n  if (typeof value === 'number') {\n    for (i = start; i < end; i++) {\n      this[i] = value\n    }\n  } else {\n    var bytes = utf8ToBytes(value.toString())\n    var len = bytes.length\n    for (i = start; i < end; i++) {\n      this[i] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// HELPER FUNCTIONS\n// ================\n\nvar INVALID_BASE64_RE = /[^+\\/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = stringtrim(str).replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction stringtrim (str) {\n  if (str.trim) return str.trim()\n  return str.replace(/^\\s+|\\s+$/g, '')\n}\n\nfunction toHex (n) {\n  if (n < 16) return '0' + n.toString(16)\n  return n.toString(16)\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  var codePoint\n  var length = string.length\n  var leadSurrogate = null\n  var bytes = []\n\n  for (var i = 0; i < length; i++) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  var byteArray = []\n  for (var i = 0; i < str.length; i++) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  var c, hi, lo\n  var byteArray = []\n  for (var i = 0; i < str.length; i++) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  for (var i = 0; i < length; i++) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n","var toString = {}.toString;\n\nmodule.exports = Array.isArray || function (arr) {\n  return toString.call(arr) == '[object Array]';\n};\n","exports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = nBytes * 8 - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = e * 256 + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = m * 256 + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = nBytes * 8 - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = (value * c - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n","/*\n * $Id: base64.js,v 2.15 2014/04/05 12:58:57 dankogai Exp dankogai $\n *\n *  Licensed under the MIT license.\n *    http://opensource.org/licenses/mit-license\n *\n *  References:\n *    http://en.wikipedia.org/wiki/Base64\n */\n\n(function(global) {\n    'use strict';\n    // existing version for noConflict()\n    var _Base64 = global.Base64;\n    var version = \"2.1.9\";\n    // if node.js, we use Buffer\n    var buffer;\n    if (typeof module !== 'undefined' && module.exports) {\n        try {\n            buffer = require('buffer').Buffer;\n        } catch (err) {}\n    }\n    // constants\n    var b64chars\n        = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n    var b64tab = function(bin) {\n        var t = {};\n        for (var i = 0, l = bin.length; i < l; i++) t[bin.charAt(i)] = i;\n        return t;\n    }(b64chars);\n    var fromCharCode = String.fromCharCode;\n    // encoder stuff\n    var cb_utob = function(c) {\n        if (c.length < 2) {\n            var cc = c.charCodeAt(0);\n            return cc < 0x80 ? c\n                : cc < 0x800 ? (fromCharCode(0xc0 | (cc >>> 6))\n                                + fromCharCode(0x80 | (cc & 0x3f)))\n                : (fromCharCode(0xe0 | ((cc >>> 12) & 0x0f))\n                   + fromCharCode(0x80 | ((cc >>>  6) & 0x3f))\n                   + fromCharCode(0x80 | ( cc         & 0x3f)));\n        } else {\n            var cc = 0x10000\n                + (c.charCodeAt(0) - 0xD800) * 0x400\n                + (c.charCodeAt(1) - 0xDC00);\n            return (fromCharCode(0xf0 | ((cc >>> 18) & 0x07))\n                    + fromCharCode(0x80 | ((cc >>> 12) & 0x3f))\n                    + fromCharCode(0x80 | ((cc >>>  6) & 0x3f))\n                    + fromCharCode(0x80 | ( cc         & 0x3f)));\n        }\n    };\n    var re_utob = /[\\uD800-\\uDBFF][\\uDC00-\\uDFFFF]|[^\\x00-\\x7F]/g;\n    var utob = function(u) {\n        return u.replace(re_utob, cb_utob);\n    };\n    var cb_encode = function(ccc) {\n        var padlen = [0, 2, 1][ccc.length % 3],\n        ord = ccc.charCodeAt(0) << 16\n            | ((ccc.length > 1 ? ccc.charCodeAt(1) : 0) << 8)\n            | ((ccc.length > 2 ? ccc.charCodeAt(2) : 0)),\n        chars = [\n            b64chars.charAt( ord >>> 18),\n            b64chars.charAt((ord >>> 12) & 63),\n            padlen >= 2 ? '=' : b64chars.charAt((ord >>> 6) & 63),\n            padlen >= 1 ? '=' : b64chars.charAt(ord & 63)\n        ];\n        return chars.join('');\n    };\n    var btoa = global.btoa ? function(b) {\n        return global.btoa(b);\n    } : function(b) {\n        return b.replace(/[\\s\\S]{1,3}/g, cb_encode);\n    };\n    var _encode = buffer ? function (u) {\n        return (u.constructor === buffer.constructor ? u : new buffer(u))\n        .toString('base64')\n    }\n    : function (u) { return btoa(utob(u)) }\n    ;\n    var encode = function(u, urisafe) {\n        return !urisafe\n            ? _encode(String(u))\n            : _encode(String(u)).replace(/[+\\/]/g, function(m0) {\n                return m0 == '+' ? '-' : '_';\n            }).replace(/=/g, '');\n    };\n    var encodeURI = function(u) { return encode(u, true) };\n    // decoder stuff\n    var re_btou = new RegExp([\n        '[\\xC0-\\xDF][\\x80-\\xBF]',\n        '[\\xE0-\\xEF][\\x80-\\xBF]{2}',\n        '[\\xF0-\\xF7][\\x80-\\xBF]{3}'\n    ].join('|'), 'g');\n    var cb_btou = function(cccc) {\n        switch(cccc.length) {\n        case 4:\n            var cp = ((0x07 & cccc.charCodeAt(0)) << 18)\n                |    ((0x3f & cccc.charCodeAt(1)) << 12)\n                |    ((0x3f & cccc.charCodeAt(2)) <<  6)\n                |     (0x3f & cccc.charCodeAt(3)),\n            offset = cp - 0x10000;\n            return (fromCharCode((offset  >>> 10) + 0xD800)\n                    + fromCharCode((offset & 0x3FF) + 0xDC00));\n        case 3:\n            return fromCharCode(\n                ((0x0f & cccc.charCodeAt(0)) << 12)\n                    | ((0x3f & cccc.charCodeAt(1)) << 6)\n                    |  (0x3f & cccc.charCodeAt(2))\n            );\n        default:\n            return  fromCharCode(\n                ((0x1f & cccc.charCodeAt(0)) << 6)\n                    |  (0x3f & cccc.charCodeAt(1))\n            );\n        }\n    };\n    var btou = function(b) {\n        return b.replace(re_btou, cb_btou);\n    };\n    var cb_decode = function(cccc) {\n        var len = cccc.length,\n        padlen = len % 4,\n        n = (len > 0 ? b64tab[cccc.charAt(0)] << 18 : 0)\n            | (len > 1 ? b64tab[cccc.charAt(1)] << 12 : 0)\n            | (len > 2 ? b64tab[cccc.charAt(2)] <<  6 : 0)\n            | (len > 3 ? b64tab[cccc.charAt(3)]       : 0),\n        chars = [\n            fromCharCode( n >>> 16),\n            fromCharCode((n >>>  8) & 0xff),\n            fromCharCode( n         & 0xff)\n        ];\n        chars.length -= [0, 0, 2, 1][padlen];\n        return chars.join('');\n    };\n    var atob = global.atob ? function(a) {\n        return global.atob(a);\n    } : function(a){\n        return a.replace(/[\\s\\S]{1,4}/g, cb_decode);\n    };\n    var _decode = buffer ? function(a) {\n        return (a.constructor === buffer.constructor\n                ? a : new buffer(a, 'base64')).toString();\n    }\n    : function(a) { return btou(atob(a)) };\n    var decode = function(a){\n        return _decode(\n            String(a).replace(/[-_]/g, function(m0) { return m0 == '-' ? '+' : '/' })\n                .replace(/[^A-Za-z0-9\\+\\/]/g, '')\n        );\n    };\n    var noConflict = function() {\n        var Base64 = global.Base64;\n        global.Base64 = _Base64;\n        return Base64;\n    };\n    // export Base64\n    global.Base64 = {\n        VERSION: version,\n        atob: atob,\n        btoa: btoa,\n        fromBase64: decode,\n        toBase64: encode,\n        utob: utob,\n        encode: encode,\n        encodeURI: encodeURI,\n        btou: btou,\n        decode: decode,\n        noConflict: noConflict\n    };\n    // if ES5 is available, make Base64.extendString() available\n    if (typeof Object.defineProperty === 'function') {\n        var noEnum = function(v){\n            return {value:v,enumerable:false,writable:true,configurable:true};\n        };\n        global.Base64.extendString = function () {\n            Object.defineProperty(\n                String.prototype, 'fromBase64', noEnum(function () {\n                    return decode(this)\n                }));\n            Object.defineProperty(\n                String.prototype, 'toBase64', noEnum(function (urisafe) {\n                    return encode(this, urisafe)\n                }));\n            Object.defineProperty(\n                String.prototype, 'toBase64URI', noEnum(function () {\n                    return encode(this, true)\n                }));\n        };\n    }\n    // that's it!\n    if (global['Meteor']) {\n       Base64 = global.Base64; // for normal export in Meteor.js\n    }\n})(this);\n","/** @license\r\n *\r\n * SoundManager 2: JavaScript Sound for the Web\r\n * ----------------------------------------------\r\n * http://schillmania.com/projects/soundmanager2/\r\n *\r\n * Copyright (c) 2007, Scott Schiller. All rights reserved.\r\n * Code provided under the BSD License:\r\n * http://schillmania.com/projects/soundmanager2/license.txt\r\n *\r\n * V2.97a.20150601\r\n */\r\n\r\n/*global window, SM2_DEFER, sm2Debugger, console, document, navigator, setTimeout, setInterval, clearInterval, Audio, opera, module, define */\r\n/*jslint regexp: true, sloppy: true, white: true, nomen: true, plusplus: true, todo: true */\r\n\r\n/**\r\n * About this file\r\n * -------------------------------------------------------------------------------------\r\n * This is the fully-commented source version of the SoundManager 2 API,\r\n * recommended for use during development and testing.\r\n *\r\n * See soundmanager2-nodebug-jsmin.js for an optimized build (~11KB with gzip.)\r\n * http://schillmania.com/projects/soundmanager2/doc/getstarted/#basic-inclusion\r\n * Alternately, serve this file with gzip for 75% compression savings (~30KB over HTTP.)\r\n *\r\n * You may notice <d> and </d> comments in this source; these are delimiters for\r\n * debug blocks which are removed in the -nodebug builds, further optimizing code size.\r\n *\r\n * Also, as you may note: Whoa, reliable cross-platform/device audio support is hard! ;)\r\n */\r\n\r\n(function(window, _undefined) {\r\n\r\n\"use strict\";\r\n\r\nif (!window || !window.document) {\r\n\r\n  // Don't cross the [environment] streams. SM2 expects to be running in a browser, not under node.js etc.\r\n  // Additionally, if a browser somehow manages to fail this test, as Egon said: \"It would be bad.\"\r\n\r\n  throw new Error('SoundManager requires a browser with window and document objects.');\r\n\r\n}\r\n\r\nvar soundManager = null;\r\n\r\n/**\r\n * The SoundManager constructor.\r\n *\r\n * @constructor\r\n * @param {string} smURL Optional: Path to SWF files\r\n * @param {string} smID Optional: The ID to use for the SWF container element\r\n * @this {SoundManager}\r\n * @return {SoundManager} The new SoundManager instance\r\n */\r\n\r\nfunction SoundManager(smURL, smID) {\r\n\r\n  /**\r\n   * soundManager configuration options list\r\n   * defines top-level configuration properties to be applied to the soundManager instance (eg. soundManager.flashVersion)\r\n   * to set these properties, use the setup() method - eg., soundManager.setup({url: '/swf/', flashVersion: 9})\r\n   */\r\n\r\n  this.setupOptions = {\r\n\r\n    'url': (smURL || null),             // path (directory) where SoundManager 2 SWFs exist, eg., /path/to/swfs/\r\n    'flashVersion': 8,                  // flash build to use (8 or 9.) Some API features require 9.\r\n    'debugMode': true,                  // enable debugging output (console.log() with HTML fallback)\r\n    'debugFlash': false,                // enable debugging output inside SWF, troubleshoot Flash/browser issues\r\n    'useConsole': true,                 // use console.log() if available (otherwise, writes to #soundmanager-debug element)\r\n    'consoleOnly': true,                // if console is being used, do not create/write to #soundmanager-debug\r\n    'waitForWindowLoad': false,         // force SM2 to wait for window.onload() before trying to call soundManager.onload()\r\n    'bgColor': '#ffffff',               // SWF background color. N/A when wmode = 'transparent'\r\n    'useHighPerformance': false,        // position:fixed flash movie can help increase js/flash speed, minimize lag\r\n    'flashPollingInterval': null,       // msec affecting whileplaying/loading callback frequency. If null, default of 50 msec is used.\r\n    'html5PollingInterval': null,       // msec affecting whileplaying() for HTML5 audio, excluding mobile devices. If null, native HTML5 update events are used.\r\n    'flashLoadTimeout': 1000,           // msec to wait for flash movie to load before failing (0 = infinity)\r\n    'wmode': null,                      // flash rendering mode - null, 'transparent', or 'opaque' (last two allow z-index to work)\r\n    'allowScriptAccess': 'always',      // for scripting the SWF (object/embed property), 'always' or 'sameDomain'\r\n    'useFlashBlock': false,             // *requires flashblock.css, see demos* - allow recovery from flash blockers. Wait indefinitely and apply timeout CSS to SWF, if applicable.\r\n    'useHTML5Audio': true,              // use HTML5 Audio() where API is supported (most Safari, Chrome versions), Firefox (MP3/MP4 support varies.) Ideally, transparent vs. Flash API where possible.\r\n    'forceUseGlobalHTML5Audio': false,  // if true, a single Audio() object is used for all sounds - and only one can play at a time.\r\n    'ignoreMobileRestrictions': false,  // if true, SM2 will not apply global HTML5 audio rules to mobile UAs. iOS WebViews purportedly allow multiple Audio() objects, auto-play etc.\r\n    'html5Test': /^(probably|maybe)$/i, // HTML5 Audio() format support test. Use /^probably$/i; if you want to be more conservative.\r\n    'preferFlash': false,               // overrides useHTML5audio, will use Flash for MP3/MP4/AAC if present. Potential option if HTML5 playback with these formats is quirky.\r\n    'noSWFCache': false,                // if true, appends ?ts={date} to break aggressive SWF caching.\r\n    'idPrefix': 'sound'                 // if an id is not provided to createSound(), this prefix is used for generated IDs - 'sound0', 'sound1' etc.\r\n\r\n  };\r\n\r\n  this.defaultOptions = {\r\n\r\n    /**\r\n     * the default configuration for sound objects made with createSound() and related methods\r\n     * eg., volume, auto-load behaviour and so forth\r\n     */\r\n\r\n    'autoLoad': false,        // enable automatic loading (otherwise .load() will be called on demand with .play(), the latter being nicer on bandwidth - if you want to .load yourself, you also can)\r\n    'autoPlay': false,        // enable playing of file as soon as possible (much faster if \"stream\" is true)\r\n    'from': null,             // position to start playback within a sound (msec), default = beginning\r\n    'loops': 1,               // how many times to repeat the sound (position will wrap around to 0, setPosition() will break out of loop when >0)\r\n    'onid3': null,            // callback function for \"ID3 data is added/available\"\r\n    'onload': null,           // callback function for \"load finished\"\r\n    'whileloading': null,     // callback function for \"download progress update\" (X of Y bytes received)\r\n    'onplay': null,           // callback for \"play\" start\r\n    'onpause': null,          // callback for \"pause\"\r\n    'onresume': null,         // callback for \"resume\" (pause toggle)\r\n    'whileplaying': null,     // callback during play (position update)\r\n    'onposition': null,       // object containing times and function callbacks for positions of interest\r\n    'onstop': null,           // callback for \"user stop\"\r\n    'onfailure': null,        // callback function for when playing fails\r\n    'onfinish': null,         // callback function for \"sound finished playing\"\r\n    'multiShot': true,        // let sounds \"restart\" or layer on top of each other when played multiple times, rather than one-shot/one at a time\r\n    'multiShotEvents': false, // fire multiple sound events (currently onfinish() only) when multiShot is enabled\r\n    'position': null,         // offset (milliseconds) to seek to within loaded sound data.\r\n    'pan': 0,                 // \"pan\" settings, left-to-right, -100 to 100\r\n    'stream': true,           // allows playing before entire file has loaded (recommended)\r\n    'to': null,               // position to end playback within a sound (msec), default = end\r\n    'type': null,             // MIME-like hint for file pattern / canPlay() tests, eg. audio/mp3\r\n    'usePolicyFile': false,   // enable crossdomain.xml request for audio on remote domains (for ID3/waveform access)\r\n    'volume': 100             // self-explanatory. 0-100, the latter being the max.\r\n\r\n  };\r\n\r\n  this.flash9Options = {\r\n\r\n    /**\r\n     * flash 9-only options,\r\n     * merged into defaultOptions if flash 9 is being used\r\n     */\r\n\r\n    'isMovieStar': null,      // \"MovieStar\" MPEG4 audio mode. Null (default) = auto detect MP4, AAC etc. based on URL. true = force on, ignore URL\r\n    'usePeakData': false,     // enable left/right channel peak (level) data\r\n    'useWaveformData': false, // enable sound spectrum (raw waveform data) - NOTE: May increase CPU load.\r\n    'useEQData': false,       // enable sound EQ (frequency spectrum data) - NOTE: May increase CPU load.\r\n    'onbufferchange': null,   // callback for \"isBuffering\" property change\r\n    'ondataerror': null       // callback for waveform/eq data access error (flash playing audio in other tabs/domains)\r\n\r\n  };\r\n\r\n  this.movieStarOptions = {\r\n\r\n    /**\r\n     * flash 9.0r115+ MPEG4 audio options,\r\n     * merged into defaultOptions if flash 9+movieStar mode is enabled\r\n     */\r\n\r\n    'bufferTime': 3,          // seconds of data to buffer before playback begins (null = flash default of 0.1 seconds - if AAC playback is gappy, try increasing.)\r\n    'serverURL': null,        // rtmp: FMS or FMIS server to connect to, required when requesting media via RTMP or one of its variants\r\n    'onconnect': null,        // rtmp: callback for connection to flash media server\r\n    'duration': null          // rtmp: song duration (msec)\r\n\r\n  };\r\n\r\n  this.audioFormats = {\r\n\r\n    /**\r\n     * determines HTML5 support + flash requirements.\r\n     * if no support (via flash and/or HTML5) for a \"required\" format, SM2 will fail to start.\r\n     * flash fallback is used for MP3 or MP4 if HTML5 can't play it (or if preferFlash = true)\r\n     */\r\n\r\n    'mp3': {\r\n      'type': ['audio/mpeg; codecs=\"mp3\"', 'audio/mpeg', 'audio/mp3', 'audio/MPA', 'audio/mpa-robust'],\r\n      'required': true\r\n    },\r\n\r\n    'mp4': {\r\n      'related': ['aac','m4a','m4b'], // additional formats under the MP4 container\r\n      'type': ['audio/mp4; codecs=\"mp4a.40.2\"', 'audio/aac', 'audio/x-m4a', 'audio/MP4A-LATM', 'audio/mpeg4-generic'],\r\n      'required': false\r\n    },\r\n\r\n    'ogg': {\r\n      'type': ['audio/ogg; codecs=vorbis'],\r\n      'required': false\r\n    },\r\n\r\n    'opus': {\r\n      'type': ['audio/ogg; codecs=opus', 'audio/opus'],\r\n      'required': false\r\n    },\r\n\r\n    'wav': {\r\n      'type': ['audio/wav; codecs=\"1\"', 'audio/wav', 'audio/wave', 'audio/x-wav'],\r\n      'required': false\r\n    }\r\n\r\n  };\r\n\r\n  // HTML attributes (id + class names) for the SWF container\r\n\r\n  this.movieID = 'sm2-container';\r\n  this.id = (smID || 'sm2movie');\r\n\r\n  this.debugID = 'soundmanager-debug';\r\n  this.debugURLParam = /([#?&])debug=1/i;\r\n\r\n  // dynamic attributes\r\n\r\n  this.versionNumber = 'V2.97a.20150601';\r\n  this.version = null;\r\n  this.movieURL = null;\r\n  this.altURL = null;\r\n  this.swfLoaded = false;\r\n  this.enabled = false;\r\n  this.oMC = null;\r\n  this.sounds = {};\r\n  this.soundIDs = [];\r\n  this.muted = false;\r\n  this.didFlashBlock = false;\r\n  this.filePattern = null;\r\n\r\n  this.filePatterns = {\r\n    'flash8': /\\.mp3(\\?.*)?$/i,\r\n    'flash9': /\\.mp3(\\?.*)?$/i\r\n  };\r\n\r\n  // support indicators, set at init\r\n\r\n  this.features = {\r\n    'buffering': false,\r\n    'peakData': false,\r\n    'waveformData': false,\r\n    'eqData': false,\r\n    'movieStar': false\r\n  };\r\n\r\n  // flash sandbox info, used primarily in troubleshooting\r\n\r\n  this.sandbox = {\r\n    // <d>\r\n    'type': null,\r\n    'types': {\r\n      'remote': 'remote (domain-based) rules',\r\n      'localWithFile': 'local with file access (no internet access)',\r\n      'localWithNetwork': 'local with network (internet access only, no local access)',\r\n      'localTrusted': 'local, trusted (local+internet access)'\r\n    },\r\n    'description': null,\r\n    'noRemote': null,\r\n    'noLocal': null\r\n    // </d>\r\n  };\r\n\r\n  /**\r\n   * format support (html5/flash)\r\n   * stores canPlayType() results based on audioFormats.\r\n   * eg. { mp3: boolean, mp4: boolean }\r\n   * treat as read-only.\r\n   */\r\n\r\n  this.html5 = {\r\n    'usingFlash': null // set if/when flash fallback is needed\r\n  };\r\n\r\n  // file type support hash\r\n  this.flash = {};\r\n\r\n  // determined at init time\r\n  this.html5Only = false;\r\n\r\n  // used for special cases (eg. iPad/iPhone/palm OS?)\r\n  this.ignoreFlash = false;\r\n\r\n  /**\r\n   * a few private internals (OK, a lot. :D)\r\n   */\r\n\r\n  var SMSound,\r\n  sm2 = this, globalHTML5Audio = null, flash = null, sm = 'soundManager', smc = sm + ': ', h5 = 'HTML5::', id, ua = navigator.userAgent, wl = window.location.href.toString(), doc = document, doNothing, setProperties, init, fV, on_queue = [], debugOpen = true, debugTS, didAppend = false, appendSuccess = false, didInit = false, disabled = false, windowLoaded = false, _wDS, wdCount = 0, initComplete, mixin, assign, extraOptions, addOnEvent, processOnEvents, initUserOnload, delayWaitForEI, waitForEI, rebootIntoHTML5, setVersionInfo, handleFocus, strings, initMovie, domContentLoaded, winOnLoad, didDCLoaded, getDocument, createMovie, catchError, setPolling, initDebug, debugLevels = ['log', 'info', 'warn', 'error'], defaultFlashVersion = 8, disableObject, failSafely, normalizeMovieURL, oRemoved = null, oRemovedHTML = null, str, flashBlockHandler, getSWFCSS, swfCSS, toggleDebug, loopFix, policyFix, complain, idCheck, waitingForEI = false, initPending = false, startTimer, stopTimer, timerExecute, h5TimerCount = 0, h5IntervalTimer = null, parseURL, messages = [],\r\n  canIgnoreFlash, needsFlash = null, featureCheck, html5OK, html5CanPlay, html5Ext, html5Unload, domContentLoadedIE, testHTML5, event, slice = Array.prototype.slice, useGlobalHTML5Audio = false, lastGlobalHTML5URL, hasFlash, detectFlash, badSafariFix, html5_events, showSupport, flushMessages, wrapCallback, idCounter = 0, didSetup, msecScale = 1000,\r\n  is_iDevice = ua.match(/(ipad|iphone|ipod)/i), isAndroid = ua.match(/android/i), isIE = ua.match(/msie/i),\r\n  isWebkit = ua.match(/webkit/i),\r\n  isSafari = (ua.match(/safari/i) && !ua.match(/chrome/i)),\r\n  isOpera = (ua.match(/opera/i)),\r\n  mobileHTML5 = (ua.match(/(mobile|pre\\/|xoom)/i) || is_iDevice || isAndroid),\r\n  isBadSafari = (!wl.match(/usehtml5audio/i) && !wl.match(/sm2\\-ignorebadua/i) && isSafari && !ua.match(/silk/i) && ua.match(/OS X 10_6_([3-7])/i)), // Safari 4 and 5 (excluding Kindle Fire, \"Silk\") occasionally fail to load/play HTML5 audio on Snow Leopard 10.6.3 through 10.6.7 due to bug(s) in QuickTime X and/or other underlying frameworks. :/ Confirmed bug. https://bugs.webkit.org/show_bug.cgi?id=32159\r\n  hasConsole = (window.console !== _undefined && console.log !== _undefined),\r\n  isFocused = (doc.hasFocus !== _undefined ? doc.hasFocus() : null),\r\n  tryInitOnFocus = (isSafari && (doc.hasFocus === _undefined || !doc.hasFocus())),\r\n  okToDisable = !tryInitOnFocus,\r\n  flashMIME = /(mp3|mp4|mpa|m4a|m4b)/i,\r\n  emptyURL = 'about:blank', // safe URL to unload, or load nothing from (flash 8 + most HTML5 UAs)\r\n  emptyWAV = 'data:audio/wave;base64,/UklGRiYAAABXQVZFZm10IBAAAAABAAEARKwAAIhYAQACABAAZGF0YQIAAAD//w==', // tiny WAV for HTML5 unloading\r\n  overHTTP = (doc.location ? doc.location.protocol.match(/http/i) : null),\r\n  http = (!overHTTP ? 'http:/'+'/' : ''),\r\n  // mp3, mp4, aac etc.\r\n  netStreamMimeTypes = /^\\s*audio\\/(?:x-)?(?:mpeg4|aac|flv|mov|mp4||m4v|m4a|m4b|mp4v|3gp|3g2)\\s*(?:$|;)/i,\r\n  // Flash v9.0r115+ \"moviestar\" formats\r\n  netStreamTypes = ['mpeg4', 'aac', 'flv', 'mov', 'mp4', 'm4v', 'f4v', 'm4a', 'm4b', 'mp4v', '3gp', '3g2'],\r\n  netStreamPattern = new RegExp('\\\\.(' + netStreamTypes.join('|') + ')(\\\\?.*)?$', 'i');\r\n\r\n  this.mimePattern = /^\\s*audio\\/(?:x-)?(?:mp(?:eg|3))\\s*(?:$|;)/i; // default mp3 set\r\n\r\n  // use altURL if not \"online\"\r\n  this.useAltURL = !overHTTP;\r\n\r\n  swfCSS = {\r\n    'swfBox': 'sm2-object-box',\r\n    'swfDefault': 'movieContainer',\r\n    'swfError': 'swf_error', // SWF loaded, but SM2 couldn't start (other error)\r\n    'swfTimedout': 'swf_timedout',\r\n    'swfLoaded': 'swf_loaded',\r\n    'swfUnblocked': 'swf_unblocked', // or loaded OK\r\n    'sm2Debug': 'sm2_debug',\r\n    'highPerf': 'high_performance',\r\n    'flashDebug': 'flash_debug'\r\n  };\r\n\r\n  /**\r\n   * basic HTML5 Audio() support test\r\n   * try...catch because of IE 9 \"not implemented\" nonsense\r\n   * https://github.com/Modernizr/Modernizr/issues/224\r\n   */\r\n\r\n  this.hasHTML5 = (function() {\r\n    try {\r\n      // new Audio(null) for stupid Opera 9.64 case, which throws not_enough_arguments exception otherwise.\r\n      return (Audio !== _undefined && (isOpera && opera !== _undefined && opera.version() < 10 ? new Audio(null) : new Audio()).canPlayType !== _undefined);\r\n    } catch(e) {\r\n      return false;\r\n    }\r\n  }());\r\n\r\n  /**\r\n   * Public SoundManager API\r\n   * -----------------------\r\n   */\r\n\r\n  /**\r\n   * Configures top-level soundManager properties.\r\n   *\r\n   * @param {object} options Option parameters, eg. { flashVersion: 9, url: '/path/to/swfs/' }\r\n   * onready and ontimeout are also accepted parameters. call soundManager.setup() to see the full list.\r\n   */\r\n\r\n  this.setup = function(options) {\r\n\r\n    var noURL = (!sm2.url);\r\n\r\n    // warn if flash options have already been applied\r\n\r\n    if (options !== _undefined && didInit && needsFlash && sm2.ok() && (options.flashVersion !== _undefined || options.url !== _undefined || options.html5Test !== _undefined)) {\r\n      complain(str('setupLate'));\r\n    }\r\n\r\n    // TODO: defer: true?\r\n\r\n    assign(options);\r\n\r\n    // force the singleton HTML5 pattern?\r\n    if (sm2.setupOptions.useHTML5Audio && !useGlobalHTML5Audio && sm2.setupOptions.forceUseGlobalHTML5Audio) {\r\n      messages.push(strings.globalHTML5);\r\n      useGlobalHTML5Audio = true;\r\n    }\r\n\r\n    // don't apply \r\n    if (!didSetup && mobileHTML5) {\r\n\r\n      if (sm2.setupOptions.ignoreMobileRestrictions) {\r\n        messages.push(strings.ignoreMobile);\r\n      }\r\n\r\n      // prefer HTML5 for mobile + tablet-like devices, probably more reliable vs. flash at this point.\r\n\r\n      // <d>\r\n      if (!sm2.setupOptions.useHTML5Audio || sm2.setupOptions.preferFlash) {\r\n        // notify that defaults are being changed.\r\n        sm2._wD(strings.mobileUA);\r\n      }\r\n      // </d>\r\n\r\n      sm2.setupOptions.useHTML5Audio = true;\r\n      sm2.setupOptions.preferFlash = false;\r\n\r\n      if ((isAndroid && !ua.match(/android\\s2\\.3/i))) {\r\n        \r\n        // iOS and Android devices tend to work better with a single audio instance, specifically for chained playback of sounds in sequence.\r\n        // common use case: exiting sound onfinish() -> createSound() -> play()\r\n\r\n        // <d>\r\n        sm2._wD(strings.globalHTML5);\r\n        // </d>\r\n\r\n        if (is_iDevice) {\r\n          sm2.ignoreFlash = true;\r\n        }\r\n\r\n        useGlobalHTML5Audio = true;\r\n\r\n      }\r\n\r\n    }\r\n\r\n    // special case 1: \"Late setup\". SM2 loaded normally, but user didn't assign flash URL eg., setup({url:...}) before SM2 init. Treat as delayed init.\r\n\r\n    if (options) {\r\n\r\n      if (noURL && didDCLoaded && options.url !== _undefined) {\r\n        sm2.beginDelayedInit();\r\n      }\r\n\r\n      // special case 2: If lazy-loading SM2 (DOMContentLoaded has already happened) and user calls setup() with url: parameter, try to init ASAP.\r\n\r\n      if (!didDCLoaded && options.url !== _undefined && doc.readyState === 'complete') {\r\n        setTimeout(domContentLoaded, 1);\r\n      }\r\n\r\n    }\r\n\r\n    didSetup = true;\r\n\r\n    return sm2;\r\n\r\n  };\r\n\r\n  this.ok = function() {\r\n\r\n    return (needsFlash ? (didInit && !disabled) : (sm2.useHTML5Audio && sm2.hasHTML5));\r\n\r\n  };\r\n\r\n  this.supported = this.ok; // legacy\r\n\r\n  this.getMovie = function(smID) {\r\n\r\n    // safety net: some old browsers differ on SWF references, possibly related to ExternalInterface / flash version\r\n    return id(smID) || doc[smID] || window[smID];\r\n\r\n  };\r\n\r\n  /**\r\n   * Creates a SMSound sound object instance. Can also be overloaded, e.g., createSound('mySound', '/some.mp3');\r\n   *\r\n   * @param {object} oOptions Sound options (at minimum, url parameter is required.)\r\n   * @return {object} SMSound The new SMSound object.\r\n   */\r\n\r\n  this.createSound = function(oOptions, _url) {\r\n\r\n    var cs, cs_string, options, oSound = null;\r\n\r\n    // <d>\r\n    cs = sm + '.createSound(): ';\r\n    cs_string = cs + str(!didInit ? 'notReady' : 'notOK');\r\n    // </d>\r\n\r\n    if (!didInit || !sm2.ok()) {\r\n      complain(cs_string);\r\n      return false;\r\n    }\r\n\r\n    if (_url !== _undefined) {\r\n      // function overloading in JS! :) ... assume simple createSound(id, url) use case.\r\n      oOptions = {\r\n        'id': oOptions,\r\n        'url': _url\r\n      };\r\n    }\r\n\r\n    // inherit from defaultOptions\r\n    options = mixin(oOptions);\r\n\r\n    options.url = parseURL(options.url);\r\n\r\n    // generate an id, if needed.\r\n    if (options.id === _undefined) {\r\n      options.id = sm2.setupOptions.idPrefix + (idCounter++);\r\n    }\r\n\r\n    // <d>\r\n    if (options.id.toString().charAt(0).match(/^[0-9]$/)) {\r\n      sm2._wD(cs + str('badID', options.id), 2);\r\n    }\r\n\r\n    sm2._wD(cs + options.id + (options.url ? ' (' + options.url + ')' : ''), 1);\r\n    // </d>\r\n\r\n    if (idCheck(options.id, true)) {\r\n      sm2._wD(cs + options.id + ' exists', 1);\r\n      return sm2.sounds[options.id];\r\n    }\r\n\r\n    function make() {\r\n\r\n      options = loopFix(options);\r\n      sm2.sounds[options.id] = new SMSound(options);\r\n      sm2.soundIDs.push(options.id);\r\n      return sm2.sounds[options.id];\r\n\r\n    }\r\n\r\n    if (html5OK(options)) {\r\n\r\n      oSound = make();\r\n      // <d>\r\n      if (!sm2.html5Only) {\r\n        sm2._wD(options.id + ': Using HTML5');\r\n      }\r\n      // </d>\r\n      oSound._setup_html5(options);\r\n\r\n    } else {\r\n\r\n      if (sm2.html5Only) {\r\n        sm2._wD(options.id + ': No HTML5 support for this sound, and no Flash. Exiting.');\r\n        return make();\r\n      }\r\n\r\n      // TODO: Move HTML5/flash checks into generic URL parsing/handling function.\r\n\r\n      if (sm2.html5.usingFlash && options.url && options.url.match(/data\\:/i)) {\r\n        // data: URIs not supported by Flash, either.\r\n        sm2._wD(options.id + ': data: URIs not supported via Flash. Exiting.');\r\n        return make();\r\n      }\r\n\r\n      if (fV > 8) {\r\n        if (options.isMovieStar === null) {\r\n          // attempt to detect MPEG-4 formats\r\n          options.isMovieStar = !!(options.serverURL || (options.type ? options.type.match(netStreamMimeTypes) : false) || (options.url && options.url.match(netStreamPattern)));\r\n        }\r\n        // <d>\r\n        if (options.isMovieStar) {\r\n          sm2._wD(cs + 'using MovieStar handling');\r\n          if (options.loops > 1) {\r\n            _wDS('noNSLoop');\r\n          }\r\n        }\r\n        // </d>\r\n      }\r\n\r\n      options = policyFix(options, cs);\r\n      oSound = make();\r\n\r\n      if (fV === 8) {\r\n        flash._createSound(options.id, options.loops || 1, options.usePolicyFile);\r\n      } else {\r\n        flash._createSound(options.id, options.url, options.usePeakData, options.useWaveformData, options.useEQData, options.isMovieStar, (options.isMovieStar ? options.bufferTime : false), options.loops || 1, options.serverURL, options.duration || null, options.autoPlay, true, options.autoLoad, options.usePolicyFile);\r\n        if (!options.serverURL) {\r\n          // We are connected immediately\r\n          oSound.connected = true;\r\n          if (options.onconnect) {\r\n            options.onconnect.apply(oSound);\r\n          }\r\n        }\r\n      }\r\n\r\n      if (!options.serverURL && (options.autoLoad || options.autoPlay)) {\r\n        // call load for non-rtmp streams\r\n        oSound.load(options);\r\n      }\r\n\r\n    }\r\n\r\n    // rtmp will play in onconnect\r\n    if (!options.serverURL && options.autoPlay) {\r\n      oSound.play();\r\n    }\r\n\r\n    return oSound;\r\n\r\n  };\r\n\r\n  /**\r\n   * Destroys a SMSound sound object instance.\r\n   *\r\n   * @param {string} sID The ID of the sound to destroy\r\n   */\r\n\r\n  this.destroySound = function(sID, _bFromSound) {\r\n\r\n    // explicitly destroy a sound before normal page unload, etc.\r\n\r\n    if (!idCheck(sID)) {\r\n      return false;\r\n    }\r\n\r\n    var oS = sm2.sounds[sID], i;\r\n\r\n    oS.stop();\r\n    \r\n    // Disable all callbacks after stop(), when the sound is being destroyed\r\n    oS._iO = {};\r\n    \r\n    oS.unload();\r\n\r\n    for (i = 0; i < sm2.soundIDs.length; i++) {\r\n      if (sm2.soundIDs[i] === sID) {\r\n        sm2.soundIDs.splice(i, 1);\r\n        break;\r\n      }\r\n    }\r\n\r\n    if (!_bFromSound) {\r\n      // ignore if being called from SMSound instance\r\n      oS.destruct(true);\r\n    }\r\n\r\n    oS = null;\r\n    delete sm2.sounds[sID];\r\n\r\n    return true;\r\n\r\n  };\r\n\r\n  /**\r\n   * Calls the load() method of a SMSound object by ID.\r\n   *\r\n   * @param {string} sID The ID of the sound\r\n   * @param {object} oOptions Optional: Sound options\r\n   */\r\n\r\n  this.load = function(sID, oOptions) {\r\n\r\n    if (!idCheck(sID)) {\r\n      return false;\r\n    }\r\n    return sm2.sounds[sID].load(oOptions);\r\n\r\n  };\r\n\r\n  /**\r\n   * Calls the unload() method of a SMSound object by ID.\r\n   *\r\n   * @param {string} sID The ID of the sound\r\n   */\r\n\r\n  this.unload = function(sID) {\r\n\r\n    if (!idCheck(sID)) {\r\n      return false;\r\n    }\r\n    return sm2.sounds[sID].unload();\r\n\r\n  };\r\n\r\n  /**\r\n   * Calls the onPosition() method of a SMSound object by ID.\r\n   *\r\n   * @param {string} sID The ID of the sound\r\n   * @param {number} nPosition The position to watch for\r\n   * @param {function} oMethod The relevant callback to fire\r\n   * @param {object} oScope Optional: The scope to apply the callback to\r\n   * @return {SMSound} The SMSound object\r\n   */\r\n\r\n  this.onPosition = function(sID, nPosition, oMethod, oScope) {\r\n\r\n    if (!idCheck(sID)) {\r\n      return false;\r\n    }\r\n    return sm2.sounds[sID].onposition(nPosition, oMethod, oScope);\r\n\r\n  };\r\n\r\n  // legacy/backwards-compability: lower-case method name\r\n  this.onposition = this.onPosition;\r\n\r\n  /**\r\n   * Calls the clearOnPosition() method of a SMSound object by ID.\r\n   *\r\n   * @param {string} sID The ID of the sound\r\n   * @param {number} nPosition The position to watch for\r\n   * @param {function} oMethod Optional: The relevant callback to fire\r\n   * @return {SMSound} The SMSound object\r\n   */\r\n\r\n  this.clearOnPosition = function(sID, nPosition, oMethod) {\r\n\r\n    if (!idCheck(sID)) {\r\n      return false;\r\n    }\r\n    return sm2.sounds[sID].clearOnPosition(nPosition, oMethod);\r\n\r\n  };\r\n\r\n  /**\r\n   * Calls the play() method of a SMSound object by ID.\r\n   *\r\n   * @param {string} sID The ID of the sound\r\n   * @param {object} oOptions Optional: Sound options\r\n   * @return {SMSound} The SMSound object\r\n   */\r\n\r\n  this.play = function(sID, oOptions) {\r\n\r\n    var result = null,\r\n        // legacy function-overloading use case: play('mySound', '/path/to/some.mp3');\r\n        overloaded = (oOptions && !(oOptions instanceof Object));\r\n\r\n    if (!didInit || !sm2.ok()) {\r\n      complain(sm + '.play(): ' + str(!didInit?'notReady':'notOK'));\r\n      return false;\r\n    }\r\n\r\n    if (!idCheck(sID, overloaded)) {\r\n\r\n      if (!overloaded) {\r\n        // no sound found for the given ID. Bail.\r\n        return false;\r\n      }\r\n\r\n      if (overloaded) {\r\n        oOptions = {\r\n          url: oOptions\r\n        };\r\n      }\r\n\r\n      if (oOptions && oOptions.url) {\r\n        // overloading use case, create+play: .play('someID', {url:'/path/to.mp3'});\r\n        sm2._wD(sm + '.play(): Attempting to create \"' + sID + '\"', 1);\r\n        oOptions.id = sID;\r\n        result = sm2.createSound(oOptions).play();\r\n      }\r\n\r\n    } else if (overloaded) {\r\n\r\n      // existing sound object case\r\n      oOptions = {\r\n        url: oOptions\r\n      };\r\n\r\n    }\r\n\r\n    if (result === null) {\r\n      // default case\r\n      result = sm2.sounds[sID].play(oOptions);\r\n    }\r\n\r\n    return result;\r\n\r\n  };\r\n\r\n  // just for convenience\r\n  this.start = this.play;\r\n\r\n  /**\r\n   * Calls the setPosition() method of a SMSound object by ID.\r\n   *\r\n   * @param {string} sID The ID of the sound\r\n   * @param {number} nMsecOffset Position (milliseconds)\r\n   * @return {SMSound} The SMSound object\r\n   */\r\n\r\n  this.setPosition = function(sID, nMsecOffset) {\r\n\r\n    if (!idCheck(sID)) {\r\n      return false;\r\n    }\r\n    return sm2.sounds[sID].setPosition(nMsecOffset);\r\n\r\n  };\r\n\r\n  /**\r\n   * Calls the stop() method of a SMSound object by ID.\r\n   *\r\n   * @param {string} sID The ID of the sound\r\n   * @return {SMSound} The SMSound object\r\n   */\r\n\r\n  this.stop = function(sID) {\r\n\r\n    if (!idCheck(sID)) {\r\n      return false;\r\n    }\r\n\r\n    sm2._wD(sm + '.stop(' + sID + ')', 1);\r\n    return sm2.sounds[sID].stop();\r\n\r\n  };\r\n\r\n  /**\r\n   * Stops all currently-playing sounds.\r\n   */\r\n\r\n  this.stopAll = function() {\r\n\r\n    var oSound;\r\n    sm2._wD(sm + '.stopAll()', 1);\r\n\r\n    for (oSound in sm2.sounds) {\r\n      if (sm2.sounds.hasOwnProperty(oSound)) {\r\n        // apply only to sound objects\r\n        sm2.sounds[oSound].stop();\r\n      }\r\n    }\r\n\r\n  };\r\n\r\n  /**\r\n   * Calls the pause() method of a SMSound object by ID.\r\n   *\r\n   * @param {string} sID The ID of the sound\r\n   * @return {SMSound} The SMSound object\r\n   */\r\n\r\n  this.pause = function(sID) {\r\n\r\n    if (!idCheck(sID)) {\r\n      return false;\r\n    }\r\n    return sm2.sounds[sID].pause();\r\n\r\n  };\r\n\r\n  /**\r\n   * Pauses all currently-playing sounds.\r\n   */\r\n\r\n  this.pauseAll = function() {\r\n\r\n    var i;\r\n    for (i = sm2.soundIDs.length - 1; i >= 0; i--) {\r\n      sm2.sounds[sm2.soundIDs[i]].pause();\r\n    }\r\n\r\n  };\r\n\r\n  /**\r\n   * Calls the resume() method of a SMSound object by ID.\r\n   *\r\n   * @param {string} sID The ID of the sound\r\n   * @return {SMSound} The SMSound object\r\n   */\r\n\r\n  this.resume = function(sID) {\r\n\r\n    if (!idCheck(sID)) {\r\n      return false;\r\n    }\r\n    return sm2.sounds[sID].resume();\r\n\r\n  };\r\n\r\n  /**\r\n   * Resumes all currently-paused sounds.\r\n   */\r\n\r\n  this.resumeAll = function() {\r\n\r\n    var i;\r\n    for (i = sm2.soundIDs.length- 1 ; i >= 0; i--) {\r\n      sm2.sounds[sm2.soundIDs[i]].resume();\r\n    }\r\n\r\n  };\r\n\r\n  /**\r\n   * Calls the togglePause() method of a SMSound object by ID.\r\n   *\r\n   * @param {string} sID The ID of the sound\r\n   * @return {SMSound} The SMSound object\r\n   */\r\n\r\n  this.togglePause = function(sID) {\r\n\r\n    if (!idCheck(sID)) {\r\n      return false;\r\n    }\r\n    return sm2.sounds[sID].togglePause();\r\n\r\n  };\r\n\r\n  /**\r\n   * Calls the setPan() method of a SMSound object by ID.\r\n   *\r\n   * @param {string} sID The ID of the sound\r\n   * @param {number} nPan The pan value (-100 to 100)\r\n   * @return {SMSound} The SMSound object\r\n   */\r\n\r\n  this.setPan = function(sID, nPan) {\r\n\r\n    if (!idCheck(sID)) {\r\n      return false;\r\n    }\r\n    return sm2.sounds[sID].setPan(nPan);\r\n\r\n  };\r\n\r\n  /**\r\n   * Calls the setVolume() method of a SMSound object by ID\r\n   * Overloaded case: pass only volume argument eg., setVolume(50) to apply to all sounds.\r\n   *\r\n   * @param {string} sID The ID of the sound\r\n   * @param {number} nVol The volume value (0 to 100)\r\n   * @return {SMSound} The SMSound object\r\n   */\r\n\r\n  this.setVolume = function(sID, nVol) {\r\n\r\n    // setVolume(50) function overloading case - apply to all sounds\r\n\r\n    var i, j;\r\n\r\n    if (sID !== _undefined && !isNaN(sID) && nVol === _undefined) {\r\n      for (i = 0, j = sm2.soundIDs.length; i < j; i++) {\r\n        sm2.sounds[sm2.soundIDs[i]].setVolume(sID);\r\n      }\r\n      return;\r\n    }\r\n\r\n    // setVolume('mySound', 50) case\r\n\r\n    if (!idCheck(sID)) {\r\n      return false;\r\n    }\r\n\r\n    return sm2.sounds[sID].setVolume(nVol);\r\n\r\n  };\r\n\r\n  /**\r\n   * Calls the mute() method of either a single SMSound object by ID, or all sound objects.\r\n   *\r\n   * @param {string} sID Optional: The ID of the sound (if omitted, all sounds will be used.)\r\n   */\r\n\r\n  this.mute = function(sID) {\r\n\r\n    var i = 0;\r\n\r\n    if (sID instanceof String) {\r\n      sID = null;\r\n    }\r\n\r\n    if (!sID) {\r\n\r\n      sm2._wD(sm + '.mute(): Muting all sounds');\r\n      for (i = sm2.soundIDs.length - 1; i >= 0; i--) {\r\n        sm2.sounds[sm2.soundIDs[i]].mute();\r\n      }\r\n      sm2.muted = true;\r\n\r\n    } else {\r\n\r\n      if (!idCheck(sID)) {\r\n        return false;\r\n      }\r\n      sm2._wD(sm + '.mute(): Muting \"' + sID + '\"');\r\n      return sm2.sounds[sID].mute();\r\n\r\n    }\r\n\r\n    return true;\r\n\r\n  };\r\n\r\n  /**\r\n   * Mutes all sounds.\r\n   */\r\n\r\n  this.muteAll = function() {\r\n\r\n    sm2.mute();\r\n\r\n  };\r\n\r\n  /**\r\n   * Calls the unmute() method of either a single SMSound object by ID, or all sound objects.\r\n   *\r\n   * @param {string} sID Optional: The ID of the sound (if omitted, all sounds will be used.)\r\n   */\r\n\r\n  this.unmute = function(sID) {\r\n\r\n    var i;\r\n\r\n    if (sID instanceof String) {\r\n      sID = null;\r\n    }\r\n\r\n    if (!sID) {\r\n\r\n      sm2._wD(sm + '.unmute(): Unmuting all sounds');\r\n      for (i = sm2.soundIDs.length - 1; i >= 0; i--) {\r\n        sm2.sounds[sm2.soundIDs[i]].unmute();\r\n      }\r\n      sm2.muted = false;\r\n\r\n    } else {\r\n\r\n      if (!idCheck(sID)) {\r\n        return false;\r\n      }\r\n      sm2._wD(sm + '.unmute(): Unmuting \"' + sID + '\"');\r\n      return sm2.sounds[sID].unmute();\r\n\r\n    }\r\n\r\n    return true;\r\n\r\n  };\r\n\r\n  /**\r\n   * Unmutes all sounds.\r\n   */\r\n\r\n  this.unmuteAll = function() {\r\n\r\n    sm2.unmute();\r\n\r\n  };\r\n\r\n  /**\r\n   * Calls the toggleMute() method of a SMSound object by ID.\r\n   *\r\n   * @param {string} sID The ID of the sound\r\n   * @return {SMSound} The SMSound object\r\n   */\r\n\r\n  this.toggleMute = function(sID) {\r\n\r\n    if (!idCheck(sID)) {\r\n      return false;\r\n    }\r\n    return sm2.sounds[sID].toggleMute();\r\n\r\n  };\r\n\r\n  /**\r\n   * Retrieves the memory used by the flash plugin.\r\n   *\r\n   * @return {number} The amount of memory in use\r\n   */\r\n\r\n  this.getMemoryUse = function() {\r\n\r\n    // flash-only\r\n    var ram = 0;\r\n\r\n    if (flash && fV !== 8) {\r\n      ram = parseInt(flash._getMemoryUse(), 10);\r\n    }\r\n\r\n    return ram;\r\n\r\n  };\r\n\r\n  /**\r\n   * Undocumented: NOPs soundManager and all SMSound objects.\r\n   */\r\n\r\n  this.disable = function(bNoDisable) {\r\n\r\n    // destroy all functions\r\n    var i;\r\n\r\n    if (bNoDisable === _undefined) {\r\n      bNoDisable = false;\r\n    }\r\n\r\n    if (disabled) {\r\n      return false;\r\n    }\r\n\r\n    disabled = true;\r\n    _wDS('shutdown', 1);\r\n\r\n    for (i = sm2.soundIDs.length - 1; i >= 0; i--) {\r\n      disableObject(sm2.sounds[sm2.soundIDs[i]]);\r\n    }\r\n\r\n    // fire \"complete\", despite fail\r\n    initComplete(bNoDisable);\r\n    event.remove(window, 'load', initUserOnload);\r\n\r\n    return true;\r\n\r\n  };\r\n\r\n  /**\r\n   * Determines playability of a MIME type, eg. 'audio/mp3'.\r\n   */\r\n\r\n  this.canPlayMIME = function(sMIME) {\r\n\r\n    var result;\r\n\r\n    if (sm2.hasHTML5) {\r\n      result = html5CanPlay({\r\n        type: sMIME\r\n      });\r\n    }\r\n\r\n    if (!result && needsFlash) {\r\n      // if flash 9, test netStream (movieStar) types as well.\r\n      result = (sMIME && sm2.ok() ? !!((fV > 8 ? sMIME.match(netStreamMimeTypes) : null) || sMIME.match(sm2.mimePattern)) : null); // TODO: make less \"weird\" (per JSLint)\r\n    }\r\n\r\n    return result;\r\n\r\n  };\r\n\r\n  /**\r\n   * Determines playability of a URL based on audio support.\r\n   *\r\n   * @param {string} sURL The URL to test\r\n   * @return {boolean} URL playability\r\n   */\r\n\r\n  this.canPlayURL = function(sURL) {\r\n\r\n    var result;\r\n\r\n    if (sm2.hasHTML5) {\r\n      result = html5CanPlay({\r\n        url: sURL\r\n      });\r\n    }\r\n\r\n    if (!result && needsFlash) {\r\n      result = (sURL && sm2.ok() ? !!(sURL.match(sm2.filePattern)) : null);\r\n    }\r\n\r\n    return result;\r\n\r\n  };\r\n\r\n  /**\r\n   * Determines playability of an HTML DOM &lt;a&gt; object (or similar object literal) based on audio support.\r\n   *\r\n   * @param {object} oLink an HTML DOM &lt;a&gt; object or object literal including href and/or type attributes\r\n   * @return {boolean} URL playability\r\n   */\r\n\r\n  this.canPlayLink = function(oLink) {\r\n\r\n    if (oLink.type !== _undefined && oLink.type) {\r\n      if (sm2.canPlayMIME(oLink.type)) {\r\n        return true;\r\n      }\r\n    }\r\n\r\n    return sm2.canPlayURL(oLink.href);\r\n\r\n  };\r\n\r\n  /**\r\n   * Retrieves a SMSound object by ID.\r\n   *\r\n   * @param {string} sID The ID of the sound\r\n   * @return {SMSound} The SMSound object\r\n   */\r\n\r\n  this.getSoundById = function(sID, _suppressDebug) {\r\n\r\n    if (!sID) {\r\n      return null;\r\n    }\r\n\r\n    var result = sm2.sounds[sID];\r\n\r\n    // <d>\r\n    if (!result && !_suppressDebug) {\r\n      sm2._wD(sm + '.getSoundById(): Sound \"' + sID + '\" not found.', 2);\r\n    }\r\n    // </d>\r\n\r\n    return result;\r\n\r\n  };\r\n\r\n  /**\r\n   * Queues a callback for execution when SoundManager has successfully initialized.\r\n   *\r\n   * @param {function} oMethod The callback method to fire\r\n   * @param {object} oScope Optional: The scope to apply to the callback\r\n   */\r\n\r\n  this.onready = function(oMethod, oScope) {\r\n\r\n    var sType = 'onready',\r\n        result = false;\r\n\r\n    if (typeof oMethod === 'function') {\r\n\r\n      // <d>\r\n      if (didInit) {\r\n        sm2._wD(str('queue', sType));\r\n      }\r\n      // </d>\r\n\r\n      if (!oScope) {\r\n        oScope = window;\r\n      }\r\n\r\n      addOnEvent(sType, oMethod, oScope);\r\n      processOnEvents();\r\n\r\n      result = true;\r\n\r\n    } else {\r\n\r\n      throw str('needFunction', sType);\r\n\r\n    }\r\n\r\n    return result;\r\n\r\n  };\r\n\r\n  /**\r\n   * Queues a callback for execution when SoundManager has failed to initialize.\r\n   *\r\n   * @param {function} oMethod The callback method to fire\r\n   * @param {object} oScope Optional: The scope to apply to the callback\r\n   */\r\n\r\n  this.ontimeout = function(oMethod, oScope) {\r\n\r\n    var sType = 'ontimeout',\r\n        result = false;\r\n\r\n    if (typeof oMethod === 'function') {\r\n\r\n      // <d>\r\n      if (didInit) {\r\n        sm2._wD(str('queue', sType));\r\n      }\r\n      // </d>\r\n\r\n      if (!oScope) {\r\n        oScope = window;\r\n      }\r\n\r\n      addOnEvent(sType, oMethod, oScope);\r\n      processOnEvents({type:sType});\r\n\r\n      result = true;\r\n\r\n    } else {\r\n\r\n      throw str('needFunction', sType);\r\n\r\n    }\r\n\r\n    return result;\r\n\r\n  };\r\n\r\n  /**\r\n   * Writes console.log()-style debug output to a console or in-browser element.\r\n   * Applies when debugMode = true\r\n   *\r\n   * @param {string} sText The console message\r\n   * @param {object} nType Optional log level (number), or object. Number case: Log type/style where 0 = 'info', 1 = 'warn', 2 = 'error'. Object case: Object to be dumped.\r\n   */\r\n\r\n  this._writeDebug = function(sText, sTypeOrObject) {\r\n\r\n    // pseudo-private console.log()-style output\r\n    // <d>\r\n\r\n    var sDID = 'soundmanager-debug', o, oItem;\r\n\r\n    if (!sm2.setupOptions.debugMode) {\r\n      return false;\r\n    }\r\n\r\n    if (hasConsole && sm2.useConsole) {\r\n      if (sTypeOrObject && typeof sTypeOrObject === 'object') {\r\n        // object passed; dump to console.\r\n        console.log(sText, sTypeOrObject);\r\n      } else if (debugLevels[sTypeOrObject] !== _undefined) {\r\n        console[debugLevels[sTypeOrObject]](sText);\r\n      } else {\r\n        console.log(sText);\r\n      }\r\n      if (sm2.consoleOnly) {\r\n        return true;\r\n      }\r\n    }\r\n\r\n    o = id(sDID);\r\n\r\n    if (!o) {\r\n      return false;\r\n    }\r\n\r\n    oItem = doc.createElement('div');\r\n\r\n    if (++wdCount % 2 === 0) {\r\n      oItem.className = 'sm2-alt';\r\n    }\r\n\r\n    if (sTypeOrObject === _undefined) {\r\n      sTypeOrObject = 0;\r\n    } else {\r\n      sTypeOrObject = parseInt(sTypeOrObject, 10);\r\n    }\r\n\r\n    oItem.appendChild(doc.createTextNode(sText));\r\n\r\n    if (sTypeOrObject) {\r\n      if (sTypeOrObject >= 2) {\r\n        oItem.style.fontWeight = 'bold';\r\n      }\r\n      if (sTypeOrObject === 3) {\r\n        oItem.style.color = '#ff3333';\r\n      }\r\n    }\r\n\r\n    // top-to-bottom\r\n    // o.appendChild(oItem);\r\n\r\n    // bottom-to-top\r\n    o.insertBefore(oItem, o.firstChild);\r\n\r\n    o = null;\r\n    // </d>\r\n\r\n    return true;\r\n\r\n  };\r\n\r\n  // <d>\r\n  // last-resort debugging option\r\n  if (wl.indexOf('sm2-debug=alert') !== -1) {\r\n    this._writeDebug = function(sText) {\r\n      window.alert(sText);\r\n    };\r\n  }\r\n  // </d>\r\n\r\n  // alias\r\n  this._wD = this._writeDebug;\r\n\r\n  /**\r\n   * Provides debug / state information on all SMSound objects.\r\n   */\r\n\r\n  this._debug = function() {\r\n\r\n    // <d>\r\n    var i, j;\r\n    _wDS('currentObj', 1);\r\n\r\n    for (i = 0, j = sm2.soundIDs.length; i < j; i++) {\r\n      sm2.sounds[sm2.soundIDs[i]]._debug();\r\n    }\r\n    // </d>\r\n\r\n  };\r\n\r\n  /**\r\n   * Restarts and re-initializes the SoundManager instance.\r\n   *\r\n   * @param {boolean} resetEvents Optional: When true, removes all registered onready and ontimeout event callbacks.\r\n   * @param {boolean} excludeInit Options: When true, does not call beginDelayedInit() (which would restart SM2).\r\n   * @return {object} soundManager The soundManager instance.\r\n   */\r\n\r\n  this.reboot = function(resetEvents, excludeInit) {\r\n\r\n    // reset some (or all) state, and re-init unless otherwise specified.\r\n\r\n    // <d>\r\n    if (sm2.soundIDs.length) {\r\n      sm2._wD('Destroying ' + sm2.soundIDs.length + ' SMSound object' + (sm2.soundIDs.length !== 1 ? 's' : '') + '...');\r\n    }\r\n    // </d>\r\n\r\n    var i, j, k;\r\n\r\n    for (i = sm2.soundIDs.length- 1 ; i >= 0; i--) {\r\n      sm2.sounds[sm2.soundIDs[i]].destruct();\r\n    }\r\n\r\n    // trash ze flash (remove from the DOM)\r\n\r\n    if (flash) {\r\n\r\n      try {\r\n\r\n        if (isIE) {\r\n          oRemovedHTML = flash.innerHTML;\r\n        }\r\n\r\n        oRemoved = flash.parentNode.removeChild(flash);\r\n\r\n      } catch(e) {\r\n\r\n        // Remove failed? May be due to flash blockers silently removing the SWF object/embed node from the DOM. Warn and continue.\r\n\r\n        _wDS('badRemove', 2);\r\n\r\n      }\r\n\r\n    }\r\n\r\n    // actually, force recreate of movie.\r\n\r\n    oRemovedHTML = oRemoved = needsFlash = flash = null;\r\n\r\n    sm2.enabled = didDCLoaded = didInit = waitingForEI = initPending = didAppend = appendSuccess = disabled = useGlobalHTML5Audio = sm2.swfLoaded = false;\r\n\r\n    sm2.soundIDs = [];\r\n    sm2.sounds = {};\r\n\r\n    idCounter = 0;\r\n    didSetup = false;\r\n\r\n    if (!resetEvents) {\r\n      // reset callbacks for onready, ontimeout etc. so that they will fire again on re-init\r\n      for (i in on_queue) {\r\n        if (on_queue.hasOwnProperty(i)) {\r\n          for (j = 0, k = on_queue[i].length; j < k; j++) {\r\n            on_queue[i][j].fired = false;\r\n          }\r\n        }\r\n      }\r\n    } else {\r\n      // remove all callbacks entirely\r\n      on_queue = [];\r\n    }\r\n\r\n    // <d>\r\n    if (!excludeInit) {\r\n      sm2._wD(sm + ': Rebooting...');\r\n    }\r\n    // </d>\r\n\r\n    // reset HTML5 and flash canPlay test results\r\n\r\n    sm2.html5 = {\r\n      'usingFlash': null\r\n    };\r\n\r\n    sm2.flash = {};\r\n\r\n    // reset device-specific HTML/flash mode switches\r\n\r\n    sm2.html5Only = false;\r\n    sm2.ignoreFlash = false;\r\n\r\n    window.setTimeout(function() {\r\n\r\n      // by default, re-init\r\n\r\n      if (!excludeInit) {\r\n        sm2.beginDelayedInit();\r\n      }\r\n\r\n    }, 20);\r\n\r\n    return sm2;\r\n\r\n  };\r\n\r\n  this.reset = function() {\r\n\r\n    /**\r\n     * Shuts down and restores the SoundManager instance to its original loaded state, without an explicit reboot. All onready/ontimeout handlers are removed.\r\n     * After this call, SM2 may be re-initialized via soundManager.beginDelayedInit().\r\n     * @return {object} soundManager The soundManager instance.\r\n     */\r\n\r\n    _wDS('reset');\r\n    return sm2.reboot(true, true);\r\n\r\n  };\r\n\r\n  /**\r\n   * Undocumented: Determines the SM2 flash movie's load progress.\r\n   *\r\n   * @return {number or null} Percent loaded, or if invalid/unsupported, null.\r\n   */\r\n\r\n  this.getMoviePercent = function() {\r\n\r\n    /**\r\n     * Interesting syntax notes...\r\n     * Flash/ExternalInterface (ActiveX/NPAPI) bridge methods are not typeof \"function\" nor instanceof Function, but are still valid.\r\n     * Additionally, JSLint dislikes ('PercentLoaded' in flash)-style syntax and recommends hasOwnProperty(), which does not work in this case.\r\n     * Furthermore, using (flash && flash.PercentLoaded) causes IE to throw \"object doesn't support this property or method\".\r\n     * Thus, 'in' syntax must be used.\r\n     */\r\n\r\n    return (flash && 'PercentLoaded' in flash ? flash.PercentLoaded() : null); // Yes, JSLint. See nearby comment in source for explanation.\r\n\r\n  };\r\n\r\n  /**\r\n   * Additional helper for manually invoking SM2's init process after DOM Ready / window.onload().\r\n   */\r\n\r\n  this.beginDelayedInit = function() {\r\n\r\n    windowLoaded = true;\r\n    domContentLoaded();\r\n\r\n    setTimeout(function() {\r\n\r\n      if (initPending) {\r\n        return false;\r\n      }\r\n\r\n      createMovie();\r\n      initMovie();\r\n      initPending = true;\r\n\r\n      return true;\r\n\r\n    }, 20);\r\n\r\n    delayWaitForEI();\r\n\r\n  };\r\n\r\n  /**\r\n   * Destroys the SoundManager instance and all SMSound instances.\r\n   */\r\n\r\n  this.destruct = function() {\r\n\r\n    sm2._wD(sm + '.destruct()');\r\n    sm2.disable(true);\r\n\r\n  };\r\n\r\n  /**\r\n   * SMSound() (sound object) constructor\r\n   * ------------------------------------\r\n   *\r\n   * @param {object} oOptions Sound options (id and url are required attributes)\r\n   * @return {SMSound} The new SMSound object\r\n   */\r\n\r\n  SMSound = function(oOptions) {\r\n\r\n    var s = this, resetProperties, add_html5_events, remove_html5_events, stop_html5_timer, start_html5_timer, attachOnPosition, onplay_called = false, onPositionItems = [], onPositionFired = 0, detachOnPosition, applyFromTo, lastURL = null, lastHTML5State, urlOmitted;\r\n\r\n    lastHTML5State = {\r\n      // tracks duration + position (time)\r\n      duration: null,\r\n      time: null\r\n    };\r\n\r\n    this.id = oOptions.id;\r\n\r\n    // legacy\r\n    this.sID = this.id;\r\n\r\n    this.url = oOptions.url;\r\n    this.options = mixin(oOptions);\r\n\r\n    // per-play-instance-specific options\r\n    this.instanceOptions = this.options;\r\n\r\n    // short alias\r\n    this._iO = this.instanceOptions;\r\n\r\n    // assign property defaults\r\n    this.pan = this.options.pan;\r\n    this.volume = this.options.volume;\r\n\r\n    // whether or not this object is using HTML5\r\n    this.isHTML5 = false;\r\n\r\n    // internal HTML5 Audio() object reference\r\n    this._a = null;\r\n\r\n    // for flash 8 special-case createSound() without url, followed by load/play with url case\r\n    urlOmitted = (this.url ? false : true);\r\n\r\n    /**\r\n     * SMSound() public methods\r\n     * ------------------------\r\n     */\r\n\r\n    this.id3 = {};\r\n\r\n    /**\r\n     * Writes SMSound object parameters to debug console\r\n     */\r\n\r\n    this._debug = function() {\r\n\r\n      // <d>\r\n      sm2._wD(s.id + ': Merged options:', s.options);\r\n      // </d>\r\n\r\n    };\r\n\r\n    /**\r\n     * Begins loading a sound per its *url*.\r\n     *\r\n     * @param {object} oOptions Optional: Sound options\r\n     * @return {SMSound} The SMSound object\r\n     */\r\n\r\n    this.load = function(oOptions) {\r\n\r\n      var oSound = null, instanceOptions;\r\n\r\n      if (oOptions !== _undefined) {\r\n        s._iO = mixin(oOptions, s.options);\r\n      } else {\r\n        oOptions = s.options;\r\n        s._iO = oOptions;\r\n        if (lastURL && lastURL !== s.url) {\r\n          _wDS('manURL');\r\n          s._iO.url = s.url;\r\n          s.url = null;\r\n        }\r\n      }\r\n\r\n      if (!s._iO.url) {\r\n        s._iO.url = s.url;\r\n      }\r\n\r\n      s._iO.url = parseURL(s._iO.url);\r\n\r\n      // ensure we're in sync\r\n      s.instanceOptions = s._iO;\r\n\r\n      // local shortcut\r\n      instanceOptions = s._iO;\r\n\r\n      sm2._wD(s.id + ': load (' + instanceOptions.url + ')');\r\n\r\n      if (!instanceOptions.url && !s.url) {\r\n        sm2._wD(s.id + ': load(): url is unassigned. Exiting.', 2);\r\n        return s;\r\n      }\r\n\r\n      // <d>\r\n      if (!s.isHTML5 && fV === 8 && !s.url && !instanceOptions.autoPlay) {\r\n        // flash 8 load() -> play() won't work before onload has fired.\r\n        sm2._wD(s.id + ': Flash 8 load() limitation: Wait for onload() before calling play().', 1);\r\n      }\r\n      // </d>\r\n\r\n      if (instanceOptions.url === s.url && s.readyState !== 0 && s.readyState !== 2) {\r\n        _wDS('onURL', 1);\r\n        // if loaded and an onload() exists, fire immediately.\r\n        if (s.readyState === 3 && instanceOptions.onload) {\r\n          // assume success based on truthy duration.\r\n          wrapCallback(s, function() {\r\n            instanceOptions.onload.apply(s, [(!!s.duration)]);\r\n          });\r\n        }\r\n        return s;\r\n      }\r\n\r\n      // reset a few state properties\r\n\r\n      s.loaded = false;\r\n      s.readyState = 1;\r\n      s.playState = 0;\r\n      s.id3 = {};\r\n\r\n      // TODO: If switching from HTML5 -> flash (or vice versa), stop currently-playing audio.\r\n\r\n      if (html5OK(instanceOptions)) {\r\n\r\n        oSound = s._setup_html5(instanceOptions);\r\n\r\n        if (!oSound._called_load) {\r\n\r\n          s._html5_canplay = false;\r\n\r\n          // TODO: review called_load / html5_canplay logic\r\n\r\n          // if url provided directly to load(), assign it here.\r\n\r\n          if (s.url !== instanceOptions.url) {\r\n\r\n            sm2._wD(_wDS('manURL') + ': ' + instanceOptions.url);\r\n\r\n            s._a.src = instanceOptions.url;\r\n\r\n            // TODO: review / re-apply all relevant options (volume, loop, onposition etc.)\r\n\r\n            // reset position for new URL\r\n            s.setPosition(0);\r\n\r\n          }\r\n\r\n          // given explicit load call, try to preload.\r\n\r\n          // early HTML5 implementation (non-standard)\r\n          s._a.autobuffer = 'auto';\r\n\r\n          // standard property, values: none / metadata / auto\r\n          // reference: http://msdn.microsoft.com/en-us/library/ie/ff974759%28v=vs.85%29.aspx\r\n          s._a.preload = 'auto';\r\n\r\n          s._a._called_load = true;\r\n\r\n        } else {\r\n\r\n          sm2._wD(s.id + ': Ignoring request to load again');\r\n\r\n        }\r\n\r\n      } else {\r\n\r\n        if (sm2.html5Only) {\r\n          sm2._wD(s.id + ': No flash support. Exiting.');\r\n          return s;\r\n        }\r\n\r\n        if (s._iO.url && s._iO.url.match(/data\\:/i)) {\r\n          // data: URIs not supported by Flash, either.\r\n          sm2._wD(s.id + ': data: URIs not supported via Flash. Exiting.');\r\n          return s;\r\n        }\r\n\r\n        try {\r\n          s.isHTML5 = false;\r\n          s._iO = policyFix(loopFix(instanceOptions));\r\n          // if we have \"position\", disable auto-play as we'll be seeking to that position at onload().\r\n          if (s._iO.autoPlay && (s._iO.position || s._iO.from)) {\r\n            sm2._wD(s.id + ': Disabling autoPlay because of non-zero offset case');\r\n            s._iO.autoPlay = false;\r\n          }\r\n          // re-assign local shortcut\r\n          instanceOptions = s._iO;\r\n          if (fV === 8) {\r\n            flash._load(s.id, instanceOptions.url, instanceOptions.stream, instanceOptions.autoPlay, instanceOptions.usePolicyFile);\r\n          } else {\r\n            flash._load(s.id, instanceOptions.url, !!(instanceOptions.stream), !!(instanceOptions.autoPlay), instanceOptions.loops || 1, !!(instanceOptions.autoLoad), instanceOptions.usePolicyFile);\r\n          }\r\n        } catch(e) {\r\n          _wDS('smError', 2);\r\n          debugTS('onload', false);\r\n          catchError({\r\n            type: 'SMSOUND_LOAD_JS_EXCEPTION',\r\n            fatal: true\r\n          });\r\n        }\r\n\r\n      }\r\n\r\n      // after all of this, ensure sound url is up to date.\r\n      s.url = instanceOptions.url;\r\n\r\n      return s;\r\n\r\n    };\r\n\r\n    /**\r\n     * Unloads a sound, canceling any open HTTP requests.\r\n     *\r\n     * @return {SMSound} The SMSound object\r\n     */\r\n\r\n    this.unload = function() {\r\n\r\n      // Flash 8/AS2 can't \"close\" a stream - fake it by loading an empty URL\r\n      // Flash 9/AS3: Close stream, preventing further load\r\n      // HTML5: Most UAs will use empty URL\r\n\r\n      if (s.readyState !== 0) {\r\n\r\n        sm2._wD(s.id + ': unload()');\r\n\r\n        if (!s.isHTML5) {\r\n\r\n          if (fV === 8) {\r\n            flash._unload(s.id, emptyURL);\r\n          } else {\r\n            flash._unload(s.id);\r\n          }\r\n\r\n        } else {\r\n\r\n          stop_html5_timer();\r\n\r\n          if (s._a) {\r\n\r\n            s._a.pause();\r\n\r\n            // update empty URL, too\r\n            lastURL = html5Unload(s._a);\r\n\r\n          }\r\n\r\n        }\r\n\r\n        // reset load/status flags\r\n        resetProperties();\r\n\r\n      }\r\n\r\n      return s;\r\n\r\n    };\r\n\r\n    /**\r\n     * Unloads and destroys a sound.\r\n     */\r\n\r\n    this.destruct = function(_bFromSM) {\r\n\r\n      sm2._wD(s.id + ': Destruct');\r\n\r\n      if (!s.isHTML5) {\r\n\r\n        // kill sound within Flash\r\n        // Disable the onfailure handler\r\n        s._iO.onfailure = null;\r\n        flash._destroySound(s.id);\r\n\r\n      } else {\r\n\r\n        stop_html5_timer();\r\n\r\n        if (s._a) {\r\n          s._a.pause();\r\n          html5Unload(s._a);\r\n          if (!useGlobalHTML5Audio) {\r\n            remove_html5_events();\r\n          }\r\n          // break obvious circular reference\r\n          s._a._s = null;\r\n          s._a = null;\r\n        }\r\n\r\n      }\r\n\r\n      if (!_bFromSM) {\r\n        // ensure deletion from controller\r\n        sm2.destroySound(s.id, true);\r\n      }\r\n\r\n    };\r\n\r\n    /**\r\n     * Begins playing a sound.\r\n     *\r\n     * @param {object} oOptions Optional: Sound options\r\n     * @return {SMSound} The SMSound object\r\n     */\r\n\r\n    this.play = function(oOptions, _updatePlayState) {\r\n\r\n      var fN, allowMulti, a, onready,\r\n          audioClone, onended, oncanplay,\r\n          startOK = true,\r\n          exit = null;\r\n\r\n      // <d>\r\n      fN = s.id + ': play(): ';\r\n      // </d>\r\n\r\n      // default to true\r\n      _updatePlayState = (_updatePlayState === _undefined ? true : _updatePlayState);\r\n\r\n      if (!oOptions) {\r\n        oOptions = {};\r\n      }\r\n\r\n      // first, use local URL (if specified)\r\n      if (s.url) {\r\n        s._iO.url = s.url;\r\n      }\r\n\r\n      // mix in any options defined at createSound()\r\n      s._iO = mixin(s._iO, s.options);\r\n\r\n      // mix in any options specific to this method\r\n      s._iO = mixin(oOptions, s._iO);\r\n\r\n      s._iO.url = parseURL(s._iO.url);\r\n\r\n      s.instanceOptions = s._iO;\r\n\r\n      // RTMP-only\r\n      if (!s.isHTML5 && s._iO.serverURL && !s.connected) {\r\n        if (!s.getAutoPlay()) {\r\n          sm2._wD(fN +' Netstream not connected yet - setting autoPlay');\r\n          s.setAutoPlay(true);\r\n        }\r\n        // play will be called in onconnect()\r\n        return s;\r\n      }\r\n\r\n      if (html5OK(s._iO)) {\r\n        s._setup_html5(s._iO);\r\n        start_html5_timer();\r\n      }\r\n\r\n      if (s.playState === 1 && !s.paused) {\r\n\r\n        allowMulti = s._iO.multiShot;\r\n\r\n        if (!allowMulti) {\r\n\r\n          sm2._wD(fN + 'Already playing (one-shot)', 1);\r\n\r\n          if (s.isHTML5) {\r\n            // go back to original position.\r\n            s.setPosition(s._iO.position);\r\n          }\r\n\r\n          exit = s;\r\n\r\n        } else {\r\n          sm2._wD(fN + 'Already playing (multi-shot)', 1);\r\n        }\r\n\r\n      }\r\n\r\n      if (exit !== null) {\r\n        return exit;\r\n      }\r\n\r\n      // edge case: play() with explicit URL parameter\r\n      if (oOptions.url && oOptions.url !== s.url) {\r\n\r\n        // special case for createSound() followed by load() / play() with url; avoid double-load case.\r\n        if (!s.readyState && !s.isHTML5 && fV === 8 && urlOmitted) {\r\n\r\n          urlOmitted = false;\r\n\r\n        } else {\r\n\r\n          // load using merged options\r\n          s.load(s._iO);\r\n\r\n        }\r\n\r\n      }\r\n\r\n      if (!s.loaded) {\r\n\r\n        if (s.readyState === 0) {\r\n\r\n          sm2._wD(fN + 'Attempting to load');\r\n\r\n          // try to get this sound playing ASAP\r\n          if (!s.isHTML5 && !sm2.html5Only) {\r\n\r\n            // flash: assign directly because setAutoPlay() increments the instanceCount\r\n            s._iO.autoPlay = true;\r\n            s.load(s._iO);\r\n\r\n          } else if (s.isHTML5) {\r\n\r\n            // iOS needs this when recycling sounds, loading a new URL on an existing object.\r\n            s.load(s._iO);\r\n\r\n          } else {\r\n\r\n            sm2._wD(fN + 'Unsupported type. Exiting.');\r\n            exit = s;\r\n\r\n          }\r\n\r\n          // HTML5 hack - re-set instanceOptions?\r\n          s.instanceOptions = s._iO;\r\n\r\n        } else if (s.readyState === 2) {\r\n\r\n          sm2._wD(fN + 'Could not load - exiting', 2);\r\n          exit = s;\r\n\r\n        } else {\r\n\r\n          sm2._wD(fN + 'Loading - attempting to play...');\r\n\r\n        }\r\n\r\n      } else {\r\n\r\n        // \"play()\"\r\n        sm2._wD(fN.substr(0, fN.lastIndexOf(':')));\r\n\r\n      }\r\n\r\n      if (exit !== null) {\r\n        return exit;\r\n      }\r\n\r\n      if (!s.isHTML5 && fV === 9 && s.position > 0 && s.position === s.duration) {\r\n        // flash 9 needs a position reset if play() is called while at the end of a sound.\r\n        sm2._wD(fN + 'Sound at end, resetting to position: 0');\r\n        oOptions.position = 0;\r\n      }\r\n\r\n      /**\r\n       * Streams will pause when their buffer is full if they are being loaded.\r\n       * In this case paused is true, but the song hasn't started playing yet.\r\n       * If we just call resume() the onplay() callback will never be called.\r\n       * So only call resume() if the position is > 0.\r\n       * Another reason is because options like volume won't have been applied yet.\r\n       * For normal sounds, just resume.\r\n       */\r\n\r\n      if (s.paused && s.position >= 0 && (!s._iO.serverURL || s.position > 0)) {\r\n\r\n        // https://gist.github.com/37b17df75cc4d7a90bf6\r\n        sm2._wD(fN + 'Resuming from paused state', 1);\r\n        s.resume();\r\n\r\n      } else {\r\n\r\n        s._iO = mixin(oOptions, s._iO);\r\n\r\n        /**\r\n         * Preload in the event of play() with position under Flash,\r\n         * or from/to parameters and non-RTMP case\r\n         */\r\n        if (((!s.isHTML5 && s._iO.position !== null && s._iO.position > 0) || (s._iO.from !== null && s._iO.from > 0) || s._iO.to !== null) && s.instanceCount === 0 && s.playState === 0 && !s._iO.serverURL) {\r\n\r\n          onready = function() {\r\n            // sound \"canplay\" or onload()\r\n            // re-apply position/from/to to instance options, and start playback\r\n            s._iO = mixin(oOptions, s._iO);\r\n            s.play(s._iO);\r\n          };\r\n\r\n          // HTML5 needs to at least have \"canplay\" fired before seeking.\r\n          if (s.isHTML5 && !s._html5_canplay) {\r\n\r\n            // this hasn't been loaded yet. load it first, and then do this again.\r\n            sm2._wD(fN + 'Beginning load for non-zero offset case');\r\n\r\n            s.load({\r\n              // note: custom HTML5-only event added for from/to implementation.\r\n              _oncanplay: onready\r\n            });\r\n\r\n            exit = false;\r\n\r\n          } else if (!s.isHTML5 && !s.loaded && (!s.readyState || s.readyState !== 2)) {\r\n\r\n            // to be safe, preload the whole thing in Flash.\r\n\r\n            sm2._wD(fN + 'Preloading for non-zero offset case');\r\n\r\n            s.load({\r\n              onload: onready\r\n            });\r\n\r\n            exit = false;\r\n\r\n          }\r\n\r\n          if (exit !== null) {\r\n            return exit;\r\n          }\r\n\r\n          // otherwise, we're ready to go. re-apply local options, and continue\r\n\r\n          s._iO = applyFromTo();\r\n\r\n        }\r\n\r\n        // sm2._wD(fN + 'Starting to play');\r\n\r\n        // increment instance counter, where enabled + supported\r\n        if (!s.instanceCount || s._iO.multiShotEvents || (s.isHTML5 && s._iO.multiShot && !useGlobalHTML5Audio) || (!s.isHTML5 && fV > 8 && !s.getAutoPlay())) {\r\n          s.instanceCount++;\r\n        }\r\n\r\n        // if first play and onposition parameters exist, apply them now\r\n        if (s._iO.onposition && s.playState === 0) {\r\n          attachOnPosition(s);\r\n        }\r\n\r\n        s.playState = 1;\r\n        s.paused = false;\r\n\r\n        s.position = (s._iO.position !== _undefined && !isNaN(s._iO.position) ? s._iO.position : 0);\r\n\r\n        if (!s.isHTML5) {\r\n          s._iO = policyFix(loopFix(s._iO));\r\n        }\r\n\r\n        if (s._iO.onplay && _updatePlayState) {\r\n          s._iO.onplay.apply(s);\r\n          onplay_called = true;\r\n        }\r\n\r\n        s.setVolume(s._iO.volume, true);\r\n        s.setPan(s._iO.pan, true);\r\n\r\n        if (!s.isHTML5) {\r\n\r\n          startOK = flash._start(s.id, s._iO.loops || 1, (fV === 9 ? s.position : s.position / msecScale), s._iO.multiShot || false);\r\n\r\n          if (fV === 9 && !startOK) {\r\n            // edge case: no sound hardware, or 32-channel flash ceiling hit.\r\n            // applies only to Flash 9, non-NetStream/MovieStar sounds.\r\n            // http://help.adobe.com/en_US/FlashPlatform/reference/actionscript/3/flash/media/Sound.html#play%28%29\r\n            sm2._wD(fN + 'No sound hardware, or 32-sound ceiling hit', 2);\r\n            if (s._iO.onplayerror) {\r\n              s._iO.onplayerror.apply(s);\r\n            }\r\n\r\n          }\r\n\r\n        } else {\r\n\r\n          if (s.instanceCount < 2) {\r\n\r\n            // HTML5 single-instance case\r\n\r\n            start_html5_timer();\r\n\r\n            a = s._setup_html5();\r\n\r\n            s.setPosition(s._iO.position);\r\n\r\n            a.play();\r\n\r\n          } else {\r\n\r\n            // HTML5 multi-shot case\r\n\r\n            sm2._wD(s.id + ': Cloning Audio() for instance #' + s.instanceCount + '...');\r\n\r\n            audioClone = new Audio(s._iO.url);\r\n\r\n            onended = function() {\r\n              event.remove(audioClone, 'ended', onended);\r\n              s._onfinish(s);\r\n              // cleanup\r\n              html5Unload(audioClone);\r\n              audioClone = null;\r\n            };\r\n\r\n            oncanplay = function() {\r\n              event.remove(audioClone, 'canplay', oncanplay);\r\n              try {\r\n                audioClone.currentTime = s._iO.position/msecScale;\r\n              } catch(err) {\r\n                complain(s.id + ': multiShot play() failed to apply position of ' + (s._iO.position/msecScale));\r\n              }\r\n              audioClone.play();\r\n            };\r\n\r\n            event.add(audioClone, 'ended', onended);\r\n\r\n            // apply volume to clones, too\r\n            if (s._iO.volume !== _undefined) {\r\n              audioClone.volume = Math.max(0, Math.min(1, s._iO.volume/100));\r\n            }\r\n\r\n            // playing multiple muted sounds? if you do this, you're weird ;) - but let's cover it.\r\n            if (s.muted) {\r\n              audioClone.muted = true;\r\n            }\r\n\r\n            if (s._iO.position) {\r\n              // HTML5 audio can't seek before onplay() event has fired.\r\n              // wait for canplay, then seek to position and start playback.\r\n              event.add(audioClone, 'canplay', oncanplay);\r\n            } else {\r\n              // begin playback at currentTime: 0\r\n              audioClone.play();\r\n            }\r\n\r\n          }\r\n\r\n        }\r\n\r\n      }\r\n\r\n      return s;\r\n\r\n    };\r\n\r\n    // just for convenience\r\n    this.start = this.play;\r\n\r\n    /**\r\n     * Stops playing a sound (and optionally, all sounds)\r\n     *\r\n     * @param {boolean} bAll Optional: Whether to stop all sounds\r\n     * @return {SMSound} The SMSound object\r\n     */\r\n\r\n    this.stop = function(bAll) {\r\n\r\n      var instanceOptions = s._iO,\r\n          originalPosition;\r\n\r\n      if (s.playState === 1) {\r\n\r\n        sm2._wD(s.id + ': stop()');\r\n\r\n        s._onbufferchange(0);\r\n        s._resetOnPosition(0);\r\n        s.paused = false;\r\n\r\n        if (!s.isHTML5) {\r\n          s.playState = 0;\r\n        }\r\n\r\n        // remove onPosition listeners, if any\r\n        detachOnPosition();\r\n\r\n        // and \"to\" position, if set\r\n        if (instanceOptions.to) {\r\n          s.clearOnPosition(instanceOptions.to);\r\n        }\r\n\r\n        if (!s.isHTML5) {\r\n\r\n          flash._stop(s.id, bAll);\r\n\r\n          // hack for netStream: just unload\r\n          if (instanceOptions.serverURL) {\r\n            s.unload();\r\n          }\r\n\r\n        } else {\r\n\r\n          if (s._a) {\r\n\r\n            originalPosition = s.position;\r\n\r\n            // act like Flash, though\r\n            s.setPosition(0);\r\n\r\n            // hack: reflect old position for onstop() (also like Flash)\r\n            s.position = originalPosition;\r\n\r\n            // html5 has no stop()\r\n            // NOTE: pausing means iOS requires interaction to resume.\r\n            s._a.pause();\r\n\r\n            s.playState = 0;\r\n\r\n            // and update UI\r\n            s._onTimer();\r\n\r\n            stop_html5_timer();\r\n\r\n          }\r\n\r\n        }\r\n\r\n        s.instanceCount = 0;\r\n        s._iO = {};\r\n\r\n        if (instanceOptions.onstop) {\r\n          instanceOptions.onstop.apply(s);\r\n        }\r\n\r\n      }\r\n\r\n      return s;\r\n\r\n    };\r\n\r\n    /**\r\n     * Undocumented/internal: Sets autoPlay for RTMP.\r\n     *\r\n     * @param {boolean} autoPlay state\r\n     */\r\n\r\n    this.setAutoPlay = function(autoPlay) {\r\n\r\n      sm2._wD(s.id + ': Autoplay turned ' + (autoPlay ? 'on' : 'off'));\r\n      s._iO.autoPlay = autoPlay;\r\n\r\n      if (!s.isHTML5) {\r\n        flash._setAutoPlay(s.id, autoPlay);\r\n        if (autoPlay) {\r\n          // only increment the instanceCount if the sound isn't loaded (TODO: verify RTMP)\r\n          if (!s.instanceCount && s.readyState === 1) {\r\n            s.instanceCount++;\r\n            sm2._wD(s.id + ': Incremented instance count to '+s.instanceCount);\r\n          }\r\n        }\r\n      }\r\n\r\n    };\r\n\r\n    /**\r\n     * Undocumented/internal: Returns the autoPlay boolean.\r\n     *\r\n     * @return {boolean} The current autoPlay value\r\n     */\r\n\r\n    this.getAutoPlay = function() {\r\n\r\n      return s._iO.autoPlay;\r\n\r\n    };\r\n\r\n    /**\r\n     * Sets the position of a sound.\r\n     *\r\n     * @param {number} nMsecOffset Position (milliseconds)\r\n     * @return {SMSound} The SMSound object\r\n     */\r\n\r\n    this.setPosition = function(nMsecOffset) {\r\n\r\n      if (nMsecOffset === _undefined) {\r\n        nMsecOffset = 0;\r\n      }\r\n\r\n      var position, position1K,\r\n          // Use the duration from the instance options, if we don't have a track duration yet.\r\n          // position >= 0 and <= current available (loaded) duration\r\n          offset = (s.isHTML5 ? Math.max(nMsecOffset, 0) : Math.min(s.duration || s._iO.duration, Math.max(nMsecOffset, 0)));\r\n\r\n      s.position = offset;\r\n      position1K = s.position/msecScale;\r\n      s._resetOnPosition(s.position);\r\n      s._iO.position = offset;\r\n\r\n      if (!s.isHTML5) {\r\n\r\n        position = (fV === 9 ? s.position : position1K);\r\n\r\n        if (s.readyState && s.readyState !== 2) {\r\n          // if paused or not playing, will not resume (by playing)\r\n          flash._setPosition(s.id, position, (s.paused || !s.playState), s._iO.multiShot);\r\n        }\r\n\r\n      } else if (s._a) {\r\n\r\n        // Set the position in the canplay handler if the sound is not ready yet\r\n        if (s._html5_canplay) {\r\n\r\n          if (s._a.currentTime !== position1K) {\r\n\r\n            /**\r\n             * DOM/JS errors/exceptions to watch out for:\r\n             * if seek is beyond (loaded?) position, \"DOM exception 11\"\r\n             * \"INDEX_SIZE_ERR\": DOM exception 1\r\n             */\r\n            sm2._wD(s.id + ': setPosition(' + position1K + ')');\r\n\r\n            try {\r\n              s._a.currentTime = position1K;\r\n              if (s.playState === 0 || s.paused) {\r\n                // allow seek without auto-play/resume\r\n                s._a.pause();\r\n              }\r\n            } catch(e) {\r\n              sm2._wD(s.id + ': setPosition(' + position1K + ') failed: ' + e.message, 2);\r\n            }\r\n\r\n          }\r\n\r\n        } else if (position1K) {\r\n\r\n          // warn on non-zero seek attempts\r\n          sm2._wD(s.id + ': setPosition(' + position1K + '): Cannot seek yet, sound not ready', 2);\r\n          return s;\r\n\r\n        }\r\n\r\n        if (s.paused) {\r\n\r\n          // if paused, refresh UI right away by forcing update\r\n          s._onTimer(true);\r\n\r\n        }\r\n\r\n      }\r\n\r\n      return s;\r\n\r\n    };\r\n\r\n    /**\r\n     * Pauses sound playback.\r\n     *\r\n     * @return {SMSound} The SMSound object\r\n     */\r\n\r\n    this.pause = function(_bCallFlash) {\r\n\r\n      if (s.paused || (s.playState === 0 && s.readyState !== 1)) {\r\n        return s;\r\n      }\r\n\r\n      sm2._wD(s.id + ': pause()');\r\n      s.paused = true;\r\n\r\n      if (!s.isHTML5) {\r\n        if (_bCallFlash || _bCallFlash === _undefined) {\r\n          flash._pause(s.id, s._iO.multiShot);\r\n        }\r\n      } else {\r\n        s._setup_html5().pause();\r\n        stop_html5_timer();\r\n      }\r\n\r\n      if (s._iO.onpause) {\r\n        s._iO.onpause.apply(s);\r\n      }\r\n\r\n      return s;\r\n\r\n    };\r\n\r\n    /**\r\n     * Resumes sound playback.\r\n     *\r\n     * @return {SMSound} The SMSound object\r\n     */\r\n\r\n    /**\r\n     * When auto-loaded streams pause on buffer full they have a playState of 0.\r\n     * We need to make sure that the playState is set to 1 when these streams \"resume\".\r\n     * When a paused stream is resumed, we need to trigger the onplay() callback if it\r\n     * hasn't been called already. In this case since the sound is being played for the\r\n     * first time, I think it's more appropriate to call onplay() rather than onresume().\r\n     */\r\n\r\n    this.resume = function() {\r\n\r\n      var instanceOptions = s._iO;\r\n\r\n      if (!s.paused) {\r\n        return s;\r\n      }\r\n\r\n      sm2._wD(s.id + ': resume()');\r\n      s.paused = false;\r\n      s.playState = 1;\r\n\r\n      if (!s.isHTML5) {\r\n\r\n        if (instanceOptions.isMovieStar && !instanceOptions.serverURL) {\r\n          // Bizarre Webkit bug (Chrome reported via 8tracks.com dudes): AAC content paused for 30+ seconds(?) will not resume without a reposition.\r\n          s.setPosition(s.position);\r\n        }\r\n\r\n        // flash method is toggle-based (pause/resume)\r\n        flash._pause(s.id, instanceOptions.multiShot);\r\n\r\n      } else {\r\n\r\n        s._setup_html5().play();\r\n        start_html5_timer();\r\n\r\n      }\r\n\r\n      if (!onplay_called && instanceOptions.onplay) {\r\n\r\n        instanceOptions.onplay.apply(s);\r\n        onplay_called = true;\r\n\r\n      } else if (instanceOptions.onresume) {\r\n\r\n        instanceOptions.onresume.apply(s);\r\n\r\n      }\r\n\r\n      return s;\r\n\r\n    };\r\n\r\n    /**\r\n     * Toggles sound playback.\r\n     *\r\n     * @return {SMSound} The SMSound object\r\n     */\r\n\r\n    this.togglePause = function() {\r\n\r\n      sm2._wD(s.id + ': togglePause()');\r\n\r\n      if (s.playState === 0) {\r\n        s.play({\r\n          position: (fV === 9 && !s.isHTML5 ? s.position : s.position / msecScale)\r\n        });\r\n        return s;\r\n      }\r\n\r\n      if (s.paused) {\r\n        s.resume();\r\n      } else {\r\n        s.pause();\r\n      }\r\n\r\n      return s;\r\n\r\n    };\r\n\r\n    /**\r\n     * Sets the panning (L-R) effect.\r\n     *\r\n     * @param {number} nPan The pan value (-100 to 100)\r\n     * @return {SMSound} The SMSound object\r\n     */\r\n\r\n    this.setPan = function(nPan, bInstanceOnly) {\r\n\r\n      if (nPan === _undefined) {\r\n        nPan = 0;\r\n      }\r\n\r\n      if (bInstanceOnly === _undefined) {\r\n        bInstanceOnly = false;\r\n      }\r\n\r\n      if (!s.isHTML5) {\r\n        flash._setPan(s.id, nPan);\r\n      } // else { no HTML5 pan? }\r\n\r\n      s._iO.pan = nPan;\r\n\r\n      if (!bInstanceOnly) {\r\n        s.pan = nPan;\r\n        s.options.pan = nPan;\r\n      }\r\n\r\n      return s;\r\n\r\n    };\r\n\r\n    /**\r\n     * Sets the volume.\r\n     *\r\n     * @param {number} nVol The volume value (0 to 100)\r\n     * @return {SMSound} The SMSound object\r\n     */\r\n\r\n    this.setVolume = function(nVol, _bInstanceOnly) {\r\n\r\n      /**\r\n       * Note: Setting volume has no effect on iOS \"special snowflake\" devices.\r\n       * Hardware volume control overrides software, and volume\r\n       * will always return 1 per Apple docs. (iOS 4 + 5.)\r\n       * http://developer.apple.com/library/safari/documentation/AudioVideo/Conceptual/HTML-canvas-guide/AddingSoundtoCanvasAnimations/AddingSoundtoCanvasAnimations.html\r\n       */\r\n\r\n      if (nVol === _undefined) {\r\n        nVol = 100;\r\n      }\r\n\r\n      if (_bInstanceOnly === _undefined) {\r\n        _bInstanceOnly = false;\r\n      }\r\n\r\n      if (!s.isHTML5) {\r\n\r\n        flash._setVolume(s.id, (sm2.muted && !s.muted) || s.muted ? 0 : nVol);\r\n\r\n      } else if (s._a) {\r\n\r\n        if (sm2.muted && !s.muted) {\r\n          s.muted = true;\r\n          s._a.muted = true;\r\n        }\r\n\r\n        // valid range for native HTML5 Audio(): 0-1\r\n        s._a.volume = Math.max(0, Math.min(1, nVol/100));\r\n\r\n      }\r\n\r\n      s._iO.volume = nVol;\r\n\r\n      if (!_bInstanceOnly) {\r\n        s.volume = nVol;\r\n        s.options.volume = nVol;\r\n      }\r\n\r\n      return s;\r\n\r\n    };\r\n\r\n    /**\r\n     * Mutes the sound.\r\n     *\r\n     * @return {SMSound} The SMSound object\r\n     */\r\n\r\n    this.mute = function() {\r\n\r\n      s.muted = true;\r\n\r\n      if (!s.isHTML5) {\r\n        flash._setVolume(s.id, 0);\r\n      } else if (s._a) {\r\n        s._a.muted = true;\r\n      }\r\n\r\n      return s;\r\n\r\n    };\r\n\r\n    /**\r\n     * Unmutes the sound.\r\n     *\r\n     * @return {SMSound} The SMSound object\r\n     */\r\n\r\n    this.unmute = function() {\r\n\r\n      s.muted = false;\r\n      var hasIO = (s._iO.volume !== _undefined);\r\n\r\n      if (!s.isHTML5) {\r\n        flash._setVolume(s.id, hasIO ? s._iO.volume : s.options.volume);\r\n      } else if (s._a) {\r\n        s._a.muted = false;\r\n      }\r\n\r\n      return s;\r\n\r\n    };\r\n\r\n    /**\r\n     * Toggles the muted state of a sound.\r\n     *\r\n     * @return {SMSound} The SMSound object\r\n     */\r\n\r\n    this.toggleMute = function() {\r\n\r\n      return (s.muted ? s.unmute() : s.mute());\r\n\r\n    };\r\n\r\n    /**\r\n     * Registers a callback to be fired when a sound reaches a given position during playback.\r\n     *\r\n     * @param {number} nPosition The position to watch for\r\n     * @param {function} oMethod The relevant callback to fire\r\n     * @param {object} oScope Optional: The scope to apply the callback to\r\n     * @return {SMSound} The SMSound object\r\n     */\r\n\r\n    this.onPosition = function(nPosition, oMethod, oScope) {\r\n\r\n      // TODO: basic dupe checking?\r\n\r\n      onPositionItems.push({\r\n        position: parseInt(nPosition, 10),\r\n        method: oMethod,\r\n        scope: (oScope !== _undefined ? oScope : s),\r\n        fired: false\r\n      });\r\n\r\n      return s;\r\n\r\n    };\r\n\r\n    // legacy/backwards-compability: lower-case method name\r\n    this.onposition = this.onPosition;\r\n\r\n    /**\r\n     * Removes registered callback(s) from a sound, by position and/or callback.\r\n     *\r\n     * @param {number} nPosition The position to clear callback(s) for\r\n     * @param {function} oMethod Optional: Identify one callback to be removed when multiple listeners exist for one position\r\n     * @return {SMSound} The SMSound object\r\n     */\r\n\r\n    this.clearOnPosition = function(nPosition, oMethod) {\r\n\r\n      var i;\r\n\r\n      nPosition = parseInt(nPosition, 10);\r\n\r\n      if (isNaN(nPosition)) {\r\n        // safety check\r\n        return false;\r\n      }\r\n\r\n      for (i=0; i < onPositionItems.length; i++) {\r\n\r\n        if (nPosition === onPositionItems[i].position) {\r\n          // remove this item if no method was specified, or, if the method matches\r\n          \r\n          if (!oMethod || (oMethod === onPositionItems[i].method)) {\r\n            \r\n            if (onPositionItems[i].fired) {\r\n              // decrement \"fired\" counter, too\r\n              onPositionFired--;\r\n            }\r\n            \r\n            onPositionItems.splice(i, 1);\r\n          \r\n          }\r\n        \r\n        }\r\n\r\n      }\r\n\r\n    };\r\n\r\n    this._processOnPosition = function() {\r\n\r\n      var i, item, j = onPositionItems.length;\r\n\r\n      if (!j || !s.playState || onPositionFired >= j) {\r\n        return false;\r\n      }\r\n\r\n      for (i = j - 1; i >= 0; i--) {\r\n        \r\n        item = onPositionItems[i];\r\n        \r\n        if (!item.fired && s.position >= item.position) {\r\n        \r\n          item.fired = true;\r\n          onPositionFired++;\r\n          item.method.apply(item.scope, [item.position]);\r\n        \r\n          //  reset j -- onPositionItems.length can be changed in the item callback above... occasionally breaking the loop.\r\n\t\t      j = onPositionItems.length;\r\n        \r\n        }\r\n      \r\n      }\r\n\r\n      return true;\r\n\r\n    };\r\n\r\n    this._resetOnPosition = function(nPosition) {\r\n\r\n      // reset \"fired\" for items interested in this position\r\n      var i, item, j = onPositionItems.length;\r\n\r\n      if (!j) {\r\n        return false;\r\n      }\r\n\r\n      for (i = j - 1; i >= 0; i--) {\r\n        \r\n        item = onPositionItems[i];\r\n        \r\n        if (item.fired && nPosition <= item.position) {\r\n          item.fired = false;\r\n          onPositionFired--;\r\n        }\r\n      \r\n      }\r\n\r\n      return true;\r\n\r\n    };\r\n\r\n    /**\r\n     * SMSound() private internals\r\n     * --------------------------------\r\n     */\r\n\r\n    applyFromTo = function() {\r\n\r\n      var instanceOptions = s._iO,\r\n          f = instanceOptions.from,\r\n          t = instanceOptions.to,\r\n          start, end;\r\n\r\n      end = function() {\r\n\r\n        // end has been reached.\r\n        sm2._wD(s.id + ': \"To\" time of ' + t + ' reached.');\r\n\r\n        // detach listener\r\n        s.clearOnPosition(t, end);\r\n\r\n        // stop should clear this, too\r\n        s.stop();\r\n\r\n      };\r\n\r\n      start = function() {\r\n\r\n        sm2._wD(s.id + ': Playing \"from\" ' + f);\r\n\r\n        // add listener for end\r\n        if (t !== null && !isNaN(t)) {\r\n          s.onPosition(t, end);\r\n        }\r\n\r\n      };\r\n\r\n      if (f !== null && !isNaN(f)) {\r\n\r\n        // apply to instance options, guaranteeing correct start position.\r\n        instanceOptions.position = f;\r\n\r\n        // multiShot timing can't be tracked, so prevent that.\r\n        instanceOptions.multiShot = false;\r\n\r\n        start();\r\n\r\n      }\r\n\r\n      // return updated instanceOptions including starting position\r\n      return instanceOptions;\r\n\r\n    };\r\n\r\n    attachOnPosition = function() {\r\n\r\n      var item,\r\n          op = s._iO.onposition;\r\n\r\n      // attach onposition things, if any, now.\r\n\r\n      if (op) {\r\n\r\n        for (item in op) {\r\n          if (op.hasOwnProperty(item)) {\r\n            s.onPosition(parseInt(item, 10), op[item]);\r\n          }\r\n        }\r\n\r\n      }\r\n\r\n    };\r\n\r\n    detachOnPosition = function() {\r\n\r\n      var item,\r\n          op = s._iO.onposition;\r\n\r\n      // detach any onposition()-style listeners.\r\n\r\n      if (op) {\r\n\r\n        for (item in op) {\r\n          if (op.hasOwnProperty(item)) {\r\n            s.clearOnPosition(parseInt(item, 10));\r\n          }\r\n        }\r\n\r\n      }\r\n\r\n    };\r\n\r\n    start_html5_timer = function() {\r\n\r\n      if (s.isHTML5) {\r\n        startTimer(s);\r\n      }\r\n\r\n    };\r\n\r\n    stop_html5_timer = function() {\r\n\r\n      if (s.isHTML5) {\r\n        stopTimer(s);\r\n      }\r\n\r\n    };\r\n\r\n    resetProperties = function(retainPosition) {\r\n\r\n      if (!retainPosition) {\r\n        onPositionItems = [];\r\n        onPositionFired = 0;\r\n      }\r\n\r\n      onplay_called = false;\r\n\r\n      s._hasTimer = null;\r\n      s._a = null;\r\n      s._html5_canplay = false;\r\n      s.bytesLoaded = null;\r\n      s.bytesTotal = null;\r\n      s.duration = (s._iO && s._iO.duration ? s._iO.duration : null);\r\n      s.durationEstimate = null;\r\n      s.buffered = [];\r\n\r\n      // legacy: 1D array\r\n      s.eqData = [];\r\n\r\n      s.eqData.left = [];\r\n      s.eqData.right = [];\r\n\r\n      s.failures = 0;\r\n      s.isBuffering = false;\r\n      s.instanceOptions = {};\r\n      s.instanceCount = 0;\r\n      s.loaded = false;\r\n      s.metadata = {};\r\n\r\n      // 0 = uninitialised, 1 = loading, 2 = failed/error, 3 = loaded/success\r\n      s.readyState = 0;\r\n\r\n      s.muted = false;\r\n      s.paused = false;\r\n\r\n      s.peakData = {\r\n        left: 0,\r\n        right: 0\r\n      };\r\n\r\n      s.waveformData = {\r\n        left: [],\r\n        right: []\r\n      };\r\n\r\n      s.playState = 0;\r\n      s.position = null;\r\n\r\n      s.id3 = {};\r\n\r\n    };\r\n\r\n    resetProperties();\r\n\r\n    /**\r\n     * Pseudo-private SMSound internals\r\n     * --------------------------------\r\n     */\r\n\r\n    this._onTimer = function(bForce) {\r\n\r\n      /**\r\n       * HTML5-only _whileplaying() etc.\r\n       * called from both HTML5 native events, and polling/interval-based timers\r\n       * mimics flash and fires only when time/duration change, so as to be polling-friendly\r\n       */\r\n\r\n      var duration, isNew = false, time, x = {};\r\n\r\n      if (s._hasTimer || bForce) {\r\n\r\n        // TODO: May not need to track readyState (1 = loading)\r\n\r\n        if (s._a && (bForce || ((s.playState > 0 || s.readyState === 1) && !s.paused))) {\r\n\r\n          duration = s._get_html5_duration();\r\n\r\n          if (duration !== lastHTML5State.duration) {\r\n\r\n            lastHTML5State.duration = duration;\r\n            s.duration = duration;\r\n            isNew = true;\r\n\r\n          }\r\n\r\n          // TODO: investigate why this goes wack if not set/re-set each time.\r\n          s.durationEstimate = s.duration;\r\n\r\n          time = (s._a.currentTime * msecScale || 0);\r\n\r\n          if (time !== lastHTML5State.time) {\r\n\r\n            lastHTML5State.time = time;\r\n            isNew = true;\r\n\r\n          }\r\n\r\n          if (isNew || bForce) {\r\n\r\n            s._whileplaying(time, x, x, x, x);\r\n\r\n          }\r\n\r\n        }/* else {\r\n\r\n          // sm2._wD('_onTimer: Warn for \"'+s.id+'\": '+(!s._a?'Could not find element. ':'')+(s.playState === 0?'playState bad, 0?':'playState = '+s.playState+', OK'));\r\n\r\n          return false;\r\n\r\n        }*/\r\n\r\n        return isNew;\r\n\r\n      }\r\n\r\n    };\r\n\r\n    this._get_html5_duration = function() {\r\n\r\n      var instanceOptions = s._iO,\r\n          // if audio object exists, use its duration - else, instance option duration (if provided - it's a hack, really, and should be retired) OR null\r\n          d = (s._a && s._a.duration ? s._a.duration * msecScale : (instanceOptions && instanceOptions.duration ? instanceOptions.duration : null)),\r\n          result = (d && !isNaN(d) && d !== Infinity ? d : null);\r\n\r\n      return result;\r\n\r\n    };\r\n\r\n    this._apply_loop = function(a, nLoops) {\r\n\r\n      /**\r\n       * boolean instead of \"loop\", for webkit? - spec says string. http://www.w3.org/TR/html-markup/audio.html#audio.attrs.loop\r\n       * note that loop is either off or infinite under HTML5, unlike Flash which allows arbitrary loop counts to be specified.\r\n       */\r\n\r\n      // <d>\r\n      if (!a.loop && nLoops > 1) {\r\n        sm2._wD('Note: Native HTML5 looping is infinite.', 1);\r\n      }\r\n      // </d>\r\n\r\n      a.loop = (nLoops > 1 ? 'loop' : '');\r\n\r\n    };\r\n\r\n    this._setup_html5 = function(oOptions) {\r\n\r\n      var instanceOptions = mixin(s._iO, oOptions),\r\n          a = useGlobalHTML5Audio ? globalHTML5Audio : s._a,\r\n          dURL = decodeURI(instanceOptions.url),\r\n          sameURL;\r\n\r\n      /**\r\n       * \"First things first, I, Poppa...\" (reset the previous state of the old sound, if playing)\r\n       * Fixes case with devices that can only play one sound at a time\r\n       * Otherwise, other sounds in mid-play will be terminated without warning and in a stuck state\r\n       */\r\n\r\n      if (useGlobalHTML5Audio) {\r\n\r\n        if (dURL === decodeURI(lastGlobalHTML5URL)) {\r\n          // global HTML5 audio: re-use of URL\r\n          sameURL = true;\r\n        }\r\n\r\n      } else if (dURL === decodeURI(lastURL)) {\r\n\r\n        // options URL is the same as the \"last\" URL, and we used (loaded) it\r\n        sameURL = true;\r\n\r\n      }\r\n\r\n      if (a) {\r\n\r\n        if (a._s) {\r\n\r\n          if (useGlobalHTML5Audio) {\r\n\r\n            if (a._s && a._s.playState && !sameURL) {\r\n\r\n              // global HTML5 audio case, and loading a new URL. stop the currently-playing one.\r\n              a._s.stop();\r\n\r\n            }\r\n\r\n          } else if (!useGlobalHTML5Audio && dURL === decodeURI(lastURL)) {\r\n\r\n            // non-global HTML5 reuse case: same url, ignore request\r\n            s._apply_loop(a, instanceOptions.loops);\r\n\r\n            return a;\r\n\r\n          }\r\n\r\n        }\r\n\r\n        if (!sameURL) {\r\n\r\n          // don't retain onPosition() stuff with new URLs.\r\n\r\n          if (lastURL) {\r\n            resetProperties(false);\r\n          }\r\n\r\n          // assign new HTML5 URL\r\n\r\n          a.src = instanceOptions.url;\r\n\r\n          s.url = instanceOptions.url;\r\n\r\n          lastURL = instanceOptions.url;\r\n\r\n          lastGlobalHTML5URL = instanceOptions.url;\r\n\r\n          a._called_load = false;\r\n\r\n        }\r\n\r\n      } else {\r\n\r\n        if (instanceOptions.autoLoad || instanceOptions.autoPlay) {\r\n\r\n          s._a = new Audio(instanceOptions.url);\r\n          s._a.load();\r\n\r\n        } else {\r\n\r\n          // null for stupid Opera 9.64 case\r\n          s._a = (isOpera && opera.version() < 10 ? new Audio(null) : new Audio());\r\n\r\n        }\r\n\r\n        // assign local reference\r\n        a = s._a;\r\n\r\n        a._called_load = false;\r\n\r\n        if (useGlobalHTML5Audio) {\r\n\r\n          globalHTML5Audio = a;\r\n\r\n        }\r\n\r\n      }\r\n\r\n      s.isHTML5 = true;\r\n\r\n      // store a ref on the track\r\n      s._a = a;\r\n\r\n      // store a ref on the audio\r\n      a._s = s;\r\n\r\n      add_html5_events();\r\n\r\n      s._apply_loop(a, instanceOptions.loops);\r\n\r\n      if (instanceOptions.autoLoad || instanceOptions.autoPlay) {\r\n\r\n        s.load();\r\n\r\n      } else {\r\n\r\n        // early HTML5 implementation (non-standard)\r\n        a.autobuffer = false;\r\n\r\n        // standard ('none' is also an option.)\r\n        a.preload = 'auto';\r\n\r\n      }\r\n\r\n      return a;\r\n\r\n    };\r\n\r\n    add_html5_events = function() {\r\n\r\n      if (s._a._added_events) {\r\n        return false;\r\n      }\r\n\r\n      var f;\r\n\r\n      function add(oEvt, oFn, bCapture) {\r\n        return s._a ? s._a.addEventListener(oEvt, oFn, bCapture || false) : null;\r\n      }\r\n\r\n      s._a._added_events = true;\r\n\r\n      for (f in html5_events) {\r\n        if (html5_events.hasOwnProperty(f)) {\r\n          add(f, html5_events[f]);\r\n        }\r\n      }\r\n\r\n      return true;\r\n\r\n    };\r\n\r\n    remove_html5_events = function() {\r\n\r\n      // Remove event listeners\r\n\r\n      var f;\r\n\r\n      function remove(oEvt, oFn, bCapture) {\r\n        return (s._a ? s._a.removeEventListener(oEvt, oFn, bCapture || false) : null);\r\n      }\r\n\r\n      sm2._wD(s.id + ': Removing event listeners');\r\n      s._a._added_events = false;\r\n\r\n      for (f in html5_events) {\r\n        if (html5_events.hasOwnProperty(f)) {\r\n          remove(f, html5_events[f]);\r\n        }\r\n      }\r\n\r\n    };\r\n\r\n    /**\r\n     * Pseudo-private event internals\r\n     * ------------------------------\r\n     */\r\n\r\n    this._onload = function(nSuccess) {\r\n\r\n      var fN,\r\n          // check for duration to prevent false positives from flash 8 when loading from cache.\r\n          loadOK = !!nSuccess || (!s.isHTML5 && fV === 8 && s.duration);\r\n\r\n      // <d>\r\n      fN = s.id + ': ';\r\n      sm2._wD(fN + (loadOK ? 'onload()' : 'Failed to load / invalid sound?' + (!s.duration ? ' Zero-length duration reported.' : ' -') + ' (' + s.url + ')'), (loadOK ? 1 : 2));\r\n\r\n      if (!loadOK && !s.isHTML5) {\r\n        if (sm2.sandbox.noRemote === true) {\r\n          sm2._wD(fN + str('noNet'), 1);\r\n        }\r\n        if (sm2.sandbox.noLocal === true) {\r\n          sm2._wD(fN + str('noLocal'), 1);\r\n        }\r\n      }\r\n      // </d>\r\n\r\n      s.loaded = loadOK;\r\n      s.readyState = (loadOK ? 3 : 2);\r\n      s._onbufferchange(0);\r\n\r\n      if (s._iO.onload) {\r\n        wrapCallback(s, function() {\r\n          s._iO.onload.apply(s, [loadOK]);\r\n        });\r\n      }\r\n\r\n      return true;\r\n\r\n    };\r\n\r\n    this._onbufferchange = function(nIsBuffering) {\r\n\r\n      if (s.playState === 0) {\r\n        // ignore if not playing\r\n        return false;\r\n      }\r\n\r\n      if ((nIsBuffering && s.isBuffering) || (!nIsBuffering && !s.isBuffering)) {\r\n        return false;\r\n      }\r\n\r\n      s.isBuffering = (nIsBuffering === 1);\r\n      \r\n      if (s._iO.onbufferchange) {\r\n        sm2._wD(s.id + ': Buffer state change: ' + nIsBuffering);\r\n        s._iO.onbufferchange.apply(s, [nIsBuffering]);\r\n      }\r\n\r\n      return true;\r\n\r\n    };\r\n\r\n    /**\r\n     * Playback may have stopped due to buffering, or related reason.\r\n     * This state can be encountered on iOS < 6 when auto-play is blocked.\r\n     */\r\n\r\n    this._onsuspend = function() {\r\n\r\n      if (s._iO.onsuspend) {\r\n        sm2._wD(s.id + ': Playback suspended');\r\n        s._iO.onsuspend.apply(s);\r\n      }\r\n\r\n      return true;\r\n\r\n    };\r\n\r\n    /**\r\n     * flash 9/movieStar + RTMP-only method, should fire only once at most\r\n     * at this point we just recreate failed sounds rather than trying to reconnect\r\n     */\r\n\r\n    this._onfailure = function(msg, level, code) {\r\n\r\n      s.failures++;\r\n      sm2._wD(s.id + ': Failure (' + s.failures + '): ' + msg);\r\n\r\n      if (s._iO.onfailure && s.failures === 1) {\r\n        s._iO.onfailure(msg, level, code);\r\n      } else {\r\n        sm2._wD(s.id + ': Ignoring failure');\r\n      }\r\n\r\n    };\r\n\r\n    /**\r\n     * flash 9/movieStar + RTMP-only method for unhandled warnings/exceptions from Flash\r\n     * e.g., RTMP \"method missing\" warning (non-fatal) for getStreamLength on server\r\n     */\r\n\r\n    this._onwarning = function(msg, level, code) {\r\n\r\n      if (s._iO.onwarning) {\r\n        s._iO.onwarning(msg, level, code);\r\n      }\r\n\r\n    };\r\n\r\n    this._onfinish = function() {\r\n\r\n      // store local copy before it gets trashed...\r\n      var io_onfinish = s._iO.onfinish;\r\n\r\n      s._onbufferchange(0);\r\n      s._resetOnPosition(0);\r\n\r\n      // reset some state items\r\n      if (s.instanceCount) {\r\n\r\n        s.instanceCount--;\r\n\r\n        if (!s.instanceCount) {\r\n\r\n          // remove onPosition listeners, if any\r\n          detachOnPosition();\r\n\r\n          // reset instance options\r\n          s.playState = 0;\r\n          s.paused = false;\r\n          s.instanceCount = 0;\r\n          s.instanceOptions = {};\r\n          s._iO = {};\r\n          stop_html5_timer();\r\n\r\n          // reset position, too\r\n          if (s.isHTML5) {\r\n            s.position = 0;\r\n          }\r\n\r\n        }\r\n\r\n        if (!s.instanceCount || s._iO.multiShotEvents) {\r\n          // fire onfinish for last, or every instance\r\n          if (io_onfinish) {\r\n            sm2._wD(s.id + ': onfinish()');\r\n            wrapCallback(s, function() {\r\n              io_onfinish.apply(s);\r\n            });\r\n          }\r\n        }\r\n\r\n      }\r\n\r\n    };\r\n\r\n    this._whileloading = function(nBytesLoaded, nBytesTotal, nDuration, nBufferLength) {\r\n\r\n      var instanceOptions = s._iO;\r\n\r\n      s.bytesLoaded = nBytesLoaded;\r\n      s.bytesTotal = nBytesTotal;\r\n      s.duration = Math.floor(nDuration);\r\n      s.bufferLength = nBufferLength;\r\n\r\n      if (!s.isHTML5 && !instanceOptions.isMovieStar) {\r\n\r\n        if (instanceOptions.duration) {\r\n          // use duration from options, if specified and larger. nobody should be specifying duration in options, actually, and it should be retired.\r\n          s.durationEstimate = (s.duration > instanceOptions.duration) ? s.duration : instanceOptions.duration;\r\n        } else {\r\n          s.durationEstimate = parseInt((s.bytesTotal / s.bytesLoaded) * s.duration, 10);\r\n        }\r\n\r\n      } else {\r\n\r\n        s.durationEstimate = s.duration;\r\n\r\n      }\r\n\r\n      // for flash, reflect sequential-load-style buffering\r\n      if (!s.isHTML5) {\r\n        s.buffered = [{\r\n          'start': 0,\r\n          'end': s.duration\r\n        }];\r\n      }\r\n\r\n      // allow whileloading to fire even if \"load\" fired under HTML5, due to HTTP range/partials\r\n      if ((s.readyState !== 3 || s.isHTML5) && instanceOptions.whileloading) {\r\n        instanceOptions.whileloading.apply(s);\r\n      }\r\n\r\n    };\r\n\r\n    this._whileplaying = function(nPosition, oPeakData, oWaveformDataLeft, oWaveformDataRight, oEQData) {\r\n\r\n      var instanceOptions = s._iO,\r\n          eqLeft;\r\n\r\n      if (isNaN(nPosition) || nPosition === null) {\r\n        // flash safety net\r\n        return false;\r\n      }\r\n\r\n      // Safari HTML5 play() may return small -ve values when starting from position: 0, eg. -50.120396875. Unexpected/invalid per W3, I think. Normalize to 0.\r\n      s.position = Math.max(0, nPosition);\r\n\r\n      s._processOnPosition();\r\n\r\n      if (!s.isHTML5 && fV > 8) {\r\n\r\n        if (instanceOptions.usePeakData && oPeakData !== _undefined && oPeakData) {\r\n          s.peakData = {\r\n            left: oPeakData.leftPeak,\r\n            right: oPeakData.rightPeak\r\n          };\r\n        }\r\n\r\n        if (instanceOptions.useWaveformData && oWaveformDataLeft !== _undefined && oWaveformDataLeft) {\r\n          s.waveformData = {\r\n            left: oWaveformDataLeft.split(','),\r\n            right: oWaveformDataRight.split(',')\r\n          };\r\n        }\r\n\r\n        if (instanceOptions.useEQData) {\r\n          if (oEQData !== _undefined && oEQData && oEQData.leftEQ) {\r\n            eqLeft = oEQData.leftEQ.split(',');\r\n            s.eqData = eqLeft;\r\n            s.eqData.left = eqLeft;\r\n            if (oEQData.rightEQ !== _undefined && oEQData.rightEQ) {\r\n              s.eqData.right = oEQData.rightEQ.split(',');\r\n            }\r\n          }\r\n        }\r\n\r\n      }\r\n\r\n      if (s.playState === 1) {\r\n\r\n        // special case/hack: ensure buffering is false if loading from cache (and not yet started)\r\n        if (!s.isHTML5 && fV === 8 && !s.position && s.isBuffering) {\r\n          s._onbufferchange(0);\r\n        }\r\n\r\n        if (instanceOptions.whileplaying) {\r\n          // flash may call after actual finish\r\n          instanceOptions.whileplaying.apply(s);\r\n        }\r\n\r\n      }\r\n\r\n      return true;\r\n\r\n    };\r\n\r\n    this._oncaptiondata = function(oData) {\r\n\r\n      /**\r\n       * internal: flash 9 + NetStream (MovieStar/RTMP-only) feature\r\n       *\r\n       * @param {object} oData\r\n       */\r\n\r\n      sm2._wD(s.id + ': Caption data received.');\r\n\r\n      s.captiondata = oData;\r\n\r\n      if (s._iO.oncaptiondata) {\r\n        s._iO.oncaptiondata.apply(s, [oData]);\r\n      }\r\n\r\n    };\r\n\r\n    this._onmetadata = function(oMDProps, oMDData) {\r\n\r\n      /**\r\n       * internal: flash 9 + NetStream (MovieStar/RTMP-only) feature\r\n       * RTMP may include song title, MovieStar content may include encoding info\r\n       *\r\n       * @param {array} oMDProps (names)\r\n       * @param {array} oMDData (values)\r\n       */\r\n\r\n      sm2._wD(s.id + ': Metadata received.');\r\n\r\n      var oData = {}, i, j;\r\n\r\n      for (i = 0, j = oMDProps.length; i < j; i++) {\r\n        oData[oMDProps[i]] = oMDData[i];\r\n      }\r\n\r\n      s.metadata = oData;\r\n\r\n      if (s._iO.onmetadata) {\r\n        s._iO.onmetadata.call(s, s.metadata);\r\n      }\r\n\r\n    };\r\n\r\n    this._onid3 = function(oID3Props, oID3Data) {\r\n\r\n      /**\r\n       * internal: flash 8 + flash 9 ID3 feature\r\n       * may include artist, song title etc.\r\n       *\r\n       * @param {array} oID3Props (names)\r\n       * @param {array} oID3Data (values)\r\n       */\r\n\r\n      sm2._wD(s.id + ': ID3 data received.');\r\n\r\n      var oData = [], i, j;\r\n\r\n      for (i = 0, j = oID3Props.length; i < j; i++) {\r\n        oData[oID3Props[i]] = oID3Data[i];\r\n      }\r\n\r\n      s.id3 = mixin(s.id3, oData);\r\n\r\n      if (s._iO.onid3) {\r\n        s._iO.onid3.apply(s);\r\n      }\r\n\r\n    };\r\n\r\n    // flash/RTMP-only\r\n\r\n    this._onconnect = function(bSuccess) {\r\n\r\n      bSuccess = (bSuccess === 1);\r\n      sm2._wD(s.id + ': ' + (bSuccess ? 'Connected.' : 'Failed to connect? - ' + s.url), (bSuccess ? 1 : 2));\r\n      s.connected = bSuccess;\r\n\r\n      if (bSuccess) {\r\n\r\n        s.failures = 0;\r\n\r\n        if (idCheck(s.id)) {\r\n          if (s.getAutoPlay()) {\r\n            // only update the play state if auto playing\r\n            s.play(_undefined, s.getAutoPlay());\r\n          } else if (s._iO.autoLoad) {\r\n            s.load();\r\n          }\r\n        }\r\n\r\n        if (s._iO.onconnect) {\r\n          s._iO.onconnect.apply(s, [bSuccess]);\r\n        }\r\n\r\n      }\r\n\r\n    };\r\n\r\n    this._ondataerror = function(sError) {\r\n\r\n      // flash 9 wave/eq data handler\r\n      // hack: called at start, and end from flash at/after onfinish()\r\n      if (s.playState > 0) {\r\n        sm2._wD(s.id + ': Data error: ' + sError);\r\n        if (s._iO.ondataerror) {\r\n          s._iO.ondataerror.apply(s);\r\n        }\r\n      }\r\n\r\n    };\r\n\r\n    // <d>\r\n    this._debug();\r\n    // </d>\r\n\r\n  }; // SMSound()\r\n\r\n  /**\r\n   * Private SoundManager internals\r\n   * ------------------------------\r\n   */\r\n\r\n  getDocument = function() {\r\n\r\n    return (doc.body || doc.getElementsByTagName('div')[0]);\r\n\r\n  };\r\n\r\n  id = function(sID) {\r\n\r\n    return doc.getElementById(sID);\r\n\r\n  };\r\n\r\n  mixin = function(oMain, oAdd) {\r\n\r\n    // non-destructive merge\r\n    var o1 = (oMain || {}), o2, o;\r\n\r\n    // if unspecified, o2 is the default options object\r\n    o2 = (oAdd === _undefined ? sm2.defaultOptions : oAdd);\r\n\r\n    for (o in o2) {\r\n\r\n      if (o2.hasOwnProperty(o) && o1[o] === _undefined) {\r\n\r\n        if (typeof o2[o] !== 'object' || o2[o] === null) {\r\n\r\n          // assign directly\r\n          o1[o] = o2[o];\r\n\r\n        } else {\r\n\r\n          // recurse through o2\r\n          o1[o] = mixin(o1[o], o2[o]);\r\n\r\n        }\r\n\r\n      }\r\n\r\n    }\r\n\r\n    return o1;\r\n\r\n  };\r\n\r\n  wrapCallback = function(oSound, callback) {\r\n\r\n    /**\r\n     * 03/03/2013: Fix for Flash Player 11.6.602.171 + Flash 8 (flashVersion = 8) SWF issue\r\n     * setTimeout() fix for certain SMSound callbacks like onload() and onfinish(), where subsequent calls like play() and load() fail when Flash Player 11.6.602.171 is installed, and using soundManager with flashVersion = 8 (which is the default).\r\n     * Not sure of exact cause. Suspect race condition and/or invalid (NaN-style) position argument trickling down to the next JS -> Flash _start() call, in the play() case.\r\n     * Fix: setTimeout() to yield, plus safer null / NaN checking on position argument provided to Flash.\r\n     * https://getsatisfaction.com/schillmania/topics/recent_chrome_update_seems_to_have_broken_my_sm2_audio_player\r\n     */\r\n    if (!oSound.isHTML5 && fV === 8) {\r\n      window.setTimeout(callback, 0);\r\n    } else {\r\n      callback();\r\n    }\r\n\r\n  };\r\n\r\n  // additional soundManager properties that soundManager.setup() will accept\r\n\r\n  extraOptions = {\r\n    'onready': 1,\r\n    'ontimeout': 1,\r\n    'defaultOptions': 1,\r\n    'flash9Options': 1,\r\n    'movieStarOptions': 1\r\n  };\r\n\r\n  assign = function(o, oParent) {\r\n\r\n    /**\r\n     * recursive assignment of properties, soundManager.setup() helper\r\n     * allows property assignment based on whitelist\r\n     */\r\n\r\n    var i,\r\n        result = true,\r\n        hasParent = (oParent !== _undefined),\r\n        setupOptions = sm2.setupOptions,\r\n        bonusOptions = extraOptions;\r\n\r\n    // <d>\r\n\r\n    // if soundManager.setup() called, show accepted parameters.\r\n\r\n    if (o === _undefined) {\r\n\r\n      result = [];\r\n\r\n      for (i in setupOptions) {\r\n\r\n        if (setupOptions.hasOwnProperty(i)) {\r\n          result.push(i);\r\n        }\r\n\r\n      }\r\n\r\n      for (i in bonusOptions) {\r\n\r\n        if (bonusOptions.hasOwnProperty(i)) {\r\n\r\n          if (typeof sm2[i] === 'object') {\r\n            result.push(i + ': {...}');\r\n          } else if (sm2[i] instanceof Function) {\r\n            result.push(i + ': function() {...}');\r\n          } else {\r\n            result.push(i);\r\n          }\r\n\r\n        }\r\n\r\n      }\r\n\r\n      sm2._wD(str('setup', result.join(', ')));\r\n\r\n      return false;\r\n\r\n    }\r\n\r\n    // </d>\r\n\r\n    for (i in o) {\r\n\r\n      if (o.hasOwnProperty(i)) {\r\n\r\n        // if not an {object} we want to recurse through...\r\n\r\n        if (typeof o[i] !== 'object' || o[i] === null || o[i] instanceof Array || o[i] instanceof RegExp) {\r\n\r\n          // check \"allowed\" options\r\n\r\n          if (hasParent && bonusOptions[oParent] !== _undefined) {\r\n\r\n            // valid recursive / nested object option, eg., { defaultOptions: { volume: 50 } }\r\n            sm2[oParent][i] = o[i];\r\n\r\n          } else if (setupOptions[i] !== _undefined) {\r\n\r\n            // special case: assign to setupOptions object, which soundManager property references\r\n            sm2.setupOptions[i] = o[i];\r\n\r\n            // assign directly to soundManager, too\r\n            sm2[i] = o[i];\r\n\r\n          } else if (bonusOptions[i] === _undefined) {\r\n\r\n            // invalid or disallowed parameter. complain.\r\n            complain(str((sm2[i] === _undefined ? 'setupUndef' : 'setupError'), i), 2);\r\n\r\n            result = false;\r\n\r\n          } else {\r\n\r\n            /**\r\n             * valid extraOptions (bonusOptions) parameter.\r\n             * is it a method, like onready/ontimeout? call it.\r\n             * multiple parameters should be in an array, eg. soundManager.setup({onready: [myHandler, myScope]});\r\n             */\r\n\r\n            if (sm2[i] instanceof Function) {\r\n\r\n              sm2[i].apply(sm2, (o[i] instanceof Array ? o[i] : [o[i]]));\r\n\r\n            } else {\r\n\r\n              // good old-fashioned direct assignment\r\n              sm2[i] = o[i];\r\n\r\n            }\r\n\r\n          }\r\n\r\n        } else {\r\n\r\n          // recursion case, eg., { defaultOptions: { ... } }\r\n\r\n          if (bonusOptions[i] === _undefined) {\r\n\r\n            // invalid or disallowed parameter. complain.\r\n            complain(str((sm2[i] === _undefined ? 'setupUndef' : 'setupError'), i), 2);\r\n\r\n            result = false;\r\n\r\n          } else {\r\n\r\n            // recurse through object\r\n            return assign(o[i], i);\r\n\r\n          }\r\n\r\n        }\r\n\r\n      }\r\n\r\n    }\r\n\r\n    return result;\r\n\r\n  };\r\n\r\n  function preferFlashCheck(kind) {\r\n\r\n    // whether flash should play a given type\r\n    return (sm2.preferFlash && hasFlash && !sm2.ignoreFlash && (sm2.flash[kind] !== _undefined && sm2.flash[kind]));\r\n\r\n  }\r\n\r\n  /**\r\n   * Internal DOM2-level event helpers\r\n   * ---------------------------------\r\n   */\r\n\r\n  event = (function() {\r\n\r\n    // normalize event methods\r\n    var old = (window.attachEvent),\r\n    evt = {\r\n      add: (old ? 'attachEvent' : 'addEventListener'),\r\n      remove: (old ? 'detachEvent' : 'removeEventListener')\r\n    };\r\n\r\n    // normalize \"on\" event prefix, optional capture argument\r\n    function getArgs(oArgs) {\r\n\r\n      var args = slice.call(oArgs),\r\n          len = args.length;\r\n\r\n      if (old) {\r\n        // prefix\r\n        args[1] = 'on' + args[1];\r\n        if (len > 3) {\r\n          // no capture\r\n          args.pop();\r\n        }\r\n      } else if (len === 3) {\r\n        args.push(false);\r\n      }\r\n\r\n      return args;\r\n\r\n    }\r\n\r\n    function apply(args, sType) {\r\n\r\n      // normalize and call the event method, with the proper arguments\r\n      var element = args.shift(),\r\n          method = [evt[sType]];\r\n\r\n      if (old) {\r\n        // old IE can't do apply().\r\n        element[method](args[0], args[1]);\r\n      } else {\r\n        element[method].apply(element, args);\r\n      }\r\n\r\n    }\r\n\r\n    function add() {\r\n      apply(getArgs(arguments), 'add');\r\n    }\r\n\r\n    function remove() {\r\n      apply(getArgs(arguments), 'remove');\r\n    }\r\n\r\n    return {\r\n      'add': add,\r\n      'remove': remove\r\n    };\r\n\r\n  }());\r\n\r\n  /**\r\n   * Internal HTML5 event handling\r\n   * -----------------------------\r\n   */\r\n\r\n  function html5_event(oFn) {\r\n\r\n    // wrap html5 event handlers so we don't call them on destroyed and/or unloaded sounds\r\n\r\n    return function(e) {\r\n\r\n      var s = this._s,\r\n          result;\r\n\r\n      if (!s || !s._a) {\r\n        // <d>\r\n        if (s && s.id) {\r\n          sm2._wD(s.id + ': Ignoring ' + e.type);\r\n        } else {\r\n          sm2._wD(h5 + 'Ignoring ' + e.type);\r\n        }\r\n        // </d>\r\n        result = null;\r\n      } else {\r\n        result = oFn.call(this, e);\r\n      }\r\n\r\n      return result;\r\n\r\n    };\r\n\r\n  }\r\n\r\n  html5_events = {\r\n\r\n    // HTML5 event-name-to-handler map\r\n\r\n    abort: html5_event(function() {\r\n\r\n      sm2._wD(this._s.id + ': abort');\r\n\r\n    }),\r\n\r\n    // enough has loaded to play\r\n\r\n    canplay: html5_event(function() {\r\n\r\n      var s = this._s,\r\n          position1K;\r\n\r\n      if (s._html5_canplay) {\r\n        // this event has already fired. ignore.\r\n        return true;\r\n      }\r\n\r\n      s._html5_canplay = true;\r\n      sm2._wD(s.id + ': canplay');\r\n      s._onbufferchange(0);\r\n\r\n      // position according to instance options\r\n      position1K = (s._iO.position !== _undefined && !isNaN(s._iO.position) ? s._iO.position/msecScale : null);\r\n\r\n      // set the position if position was provided before the sound loaded\r\n      if (this.currentTime !== position1K) {\r\n        sm2._wD(s.id + ': canplay: Setting position to ' + position1K);\r\n        try {\r\n          this.currentTime = position1K;\r\n        } catch(ee) {\r\n          sm2._wD(s.id + ': canplay: Setting position of ' + position1K + ' failed: ' + ee.message, 2);\r\n        }\r\n      }\r\n\r\n      // hack for HTML5 from/to case\r\n      if (s._iO._oncanplay) {\r\n        s._iO._oncanplay();\r\n      }\r\n\r\n    }),\r\n\r\n    canplaythrough: html5_event(function() {\r\n\r\n      var s = this._s;\r\n\r\n      if (!s.loaded) {\r\n        s._onbufferchange(0);\r\n        s._whileloading(s.bytesLoaded, s.bytesTotal, s._get_html5_duration());\r\n        s._onload(true);\r\n      }\r\n\r\n    }),\r\n\r\n    durationchange: html5_event(function() {\r\n\r\n      // durationchange may fire at various times, probably the safest way to capture accurate/final duration.\r\n\r\n      var s = this._s,\r\n          duration;\r\n\r\n      duration = s._get_html5_duration();\r\n\r\n      if (!isNaN(duration) && duration !== s.duration) {\r\n\r\n        sm2._wD(this._s.id + ': durationchange (' + duration + ')' + (s.duration ? ', previously ' + s.duration : ''));\r\n\r\n        s.durationEstimate = s.duration = duration;\r\n\r\n      }\r\n\r\n    }),\r\n\r\n    // TODO: Reserved for potential use\r\n    /*\r\n    emptied: html5_event(function() {\r\n\r\n      sm2._wD(this._s.id + ': emptied');\r\n\r\n    }),\r\n    */\r\n\r\n    ended: html5_event(function() {\r\n\r\n      var s = this._s;\r\n\r\n      sm2._wD(s.id + ': ended');\r\n\r\n      s._onfinish();\r\n\r\n    }),\r\n\r\n    error: html5_event(function() {\r\n\r\n      sm2._wD(this._s.id + ': HTML5 error, code ' + this.error.code);\r\n      /**\r\n       * HTML5 error codes, per W3C\r\n       * Error 1: Client aborted download at user's request.\r\n       * Error 2: Network error after load started.\r\n       * Error 3: Decoding issue.\r\n       * Error 4: Media (audio file) not supported.\r\n       * Reference: http://www.whatwg.org/specs/web-apps/current-work/multipage/the-video-element.html#error-codes\r\n       */\r\n      // call load with error state?\r\n      this._s._onload(false);\r\n\r\n    }),\r\n\r\n    loadeddata: html5_event(function() {\r\n\r\n      var s = this._s;\r\n\r\n      sm2._wD(s.id + ': loadeddata');\r\n\r\n      // safari seems to nicely report progress events, eventually totalling 100%\r\n      if (!s._loaded && !isSafari) {\r\n        s.duration = s._get_html5_duration();\r\n      }\r\n\r\n    }),\r\n\r\n    loadedmetadata: html5_event(function() {\r\n\r\n      sm2._wD(this._s.id + ': loadedmetadata');\r\n\r\n    }),\r\n\r\n    loadstart: html5_event(function() {\r\n\r\n      sm2._wD(this._s.id + ': loadstart');\r\n      // assume buffering at first\r\n      this._s._onbufferchange(1);\r\n\r\n    }),\r\n\r\n    play: html5_event(function() {\r\n\r\n      // sm2._wD(this._s.id + ': play()');\r\n      // once play starts, no buffering\r\n      this._s._onbufferchange(0);\r\n\r\n    }),\r\n\r\n    playing: html5_event(function() {\r\n\r\n      sm2._wD(this._s.id + ': playing ' + String.fromCharCode(9835));\r\n      // once play starts, no buffering\r\n      this._s._onbufferchange(0);\r\n\r\n    }),\r\n\r\n    progress: html5_event(function(e) {\r\n\r\n      // note: can fire repeatedly after \"loaded\" event, due to use of HTTP range/partials\r\n\r\n      var s = this._s,\r\n          i, j, progStr, buffered = 0,\r\n          isProgress = (e.type === 'progress'),\r\n          ranges = e.target.buffered,\r\n          // firefox 3.6 implements e.loaded/total (bytes)\r\n          loaded = (e.loaded || 0),\r\n          total = (e.total || 1);\r\n\r\n      // reset the \"buffered\" (loaded byte ranges) array\r\n      s.buffered = [];\r\n\r\n      if (ranges && ranges.length) {\r\n\r\n        // if loaded is 0, try TimeRanges implementation as % of load\r\n        // https://developer.mozilla.org/en/DOM/TimeRanges\r\n\r\n        // re-build \"buffered\" array\r\n        // HTML5 returns seconds. SM2 API uses msec for setPosition() etc., whether Flash or HTML5.\r\n        for (i = 0, j = ranges.length; i < j; i++) {\r\n          s.buffered.push({\r\n            'start': ranges.start(i) * msecScale,\r\n            'end': ranges.end(i) * msecScale\r\n          });\r\n        }\r\n\r\n        // use the last value locally\r\n        buffered = (ranges.end(0) - ranges.start(0)) * msecScale;\r\n\r\n        // linear case, buffer sum; does not account for seeking and HTTP partials / byte ranges\r\n        loaded = Math.min(1, buffered / (e.target.duration * msecScale));\r\n\r\n        // <d>\r\n        if (isProgress && ranges.length > 1) {\r\n          progStr = [];\r\n          j = ranges.length;\r\n          for (i = 0; i < j; i++) {\r\n            progStr.push((e.target.buffered.start(i) * msecScale) + '-' + (e.target.buffered.end(i) * msecScale));\r\n          }\r\n          sm2._wD(this._s.id + ': progress, timeRanges: ' + progStr.join(', '));\r\n        }\r\n\r\n        if (isProgress && !isNaN(loaded)) {\r\n          sm2._wD(this._s.id + ': progress, ' + Math.floor(loaded * 100) + '% loaded');\r\n        }\r\n        // </d>\r\n\r\n      }\r\n\r\n      if (!isNaN(loaded)) {\r\n\r\n        // TODO: prevent calls with duplicate values.\r\n        s._whileloading(loaded, total, s._get_html5_duration());\r\n        if (loaded && total && loaded === total) {\r\n          // in case \"onload\" doesn't fire (eg. gecko 1.9.2)\r\n          html5_events.canplaythrough.call(this, e);\r\n        }\r\n\r\n      }\r\n\r\n    }),\r\n\r\n    ratechange: html5_event(function() {\r\n\r\n      sm2._wD(this._s.id + ': ratechange');\r\n\r\n    }),\r\n\r\n    suspend: html5_event(function(e) {\r\n\r\n      // download paused/stopped, may have finished (eg. onload)\r\n      var s = this._s;\r\n\r\n      sm2._wD(this._s.id + ': suspend');\r\n      html5_events.progress.call(this, e);\r\n      s._onsuspend();\r\n\r\n    }),\r\n\r\n    stalled: html5_event(function() {\r\n\r\n      sm2._wD(this._s.id + ': stalled');\r\n\r\n    }),\r\n\r\n    timeupdate: html5_event(function() {\r\n\r\n      this._s._onTimer();\r\n\r\n    }),\r\n\r\n    waiting: html5_event(function() {\r\n\r\n      var s = this._s;\r\n\r\n      // see also: seeking\r\n      sm2._wD(this._s.id + ': waiting');\r\n\r\n      // playback faster than download rate, etc.\r\n      s._onbufferchange(1);\r\n\r\n    })\r\n\r\n  };\r\n\r\n  html5OK = function(iO) {\r\n\r\n    // playability test based on URL or MIME type\r\n\r\n    var result;\r\n\r\n    if (!iO || (!iO.type && !iO.url && !iO.serverURL)) {\r\n\r\n      // nothing to check\r\n      result = false;\r\n\r\n    } else if (iO.serverURL || (iO.type && preferFlashCheck(iO.type))) {\r\n\r\n      // RTMP, or preferring flash\r\n      result = false;\r\n\r\n    } else {\r\n\r\n      // Use type, if specified. Pass data: URIs to HTML5. If HTML5-only mode, no other options, so just give 'er\r\n      result = ((iO.type ? html5CanPlay({type:iO.type}) : html5CanPlay({url:iO.url}) || sm2.html5Only || iO.url.match(/data\\:/i)));\r\n\r\n    }\r\n\r\n    return result;\r\n\r\n  };\r\n\r\n  html5Unload = function(oAudio) {\r\n\r\n    /**\r\n     * Internal method: Unload media, and cancel any current/pending network requests.\r\n     * Firefox can load an empty URL, which allegedly destroys the decoder and stops the download.\r\n     * https://developer.mozilla.org/En/Using_audio_and_video_in_Firefox#Stopping_the_download_of_media\r\n     * However, Firefox has been seen loading a relative URL from '' and thus requesting the hosting page on unload.\r\n     * Other UA behaviour is unclear, so everyone else gets an about:blank-style URL.\r\n     */\r\n\r\n    var url;\r\n\r\n    if (oAudio) {\r\n\r\n      // Firefox and Chrome accept short WAVe data: URIs. Chome dislikes audio/wav, but accepts audio/wav for data: MIME.\r\n      // Desktop Safari complains / fails on data: URI, so it gets about:blank.\r\n      url = (isSafari ? emptyURL : (sm2.html5.canPlayType('audio/wav') ? emptyWAV : emptyURL));\r\n\r\n      oAudio.src = url;\r\n\r\n      // reset some state, too\r\n      if (oAudio._called_unload !== _undefined) {\r\n        oAudio._called_load = false;\r\n      }\r\n\r\n    }\r\n\r\n    if (useGlobalHTML5Audio) {\r\n\r\n      // ensure URL state is trashed, also\r\n      lastGlobalHTML5URL = null;\r\n\r\n    }\r\n\r\n    return url;\r\n\r\n  };\r\n\r\n  html5CanPlay = function(o) {\r\n\r\n    /**\r\n     * Try to find MIME, test and return truthiness\r\n     * o = {\r\n     *  url: '/path/to/an.mp3',\r\n     *  type: 'audio/mp3'\r\n     * }\r\n     */\r\n\r\n    if (!sm2.useHTML5Audio || !sm2.hasHTML5) {\r\n      return false;\r\n    }\r\n\r\n    var url = (o.url || null),\r\n        mime = (o.type || null),\r\n        aF = sm2.audioFormats,\r\n        result,\r\n        offset,\r\n        fileExt,\r\n        item;\r\n\r\n    // account for known cases like audio/mp3\r\n\r\n    if (mime && sm2.html5[mime] !== _undefined) {\r\n      return (sm2.html5[mime] && !preferFlashCheck(mime));\r\n    }\r\n\r\n    if (!html5Ext) {\r\n      \r\n      html5Ext = [];\r\n      \r\n      for (item in aF) {\r\n      \r\n        if (aF.hasOwnProperty(item)) {\r\n      \r\n          html5Ext.push(item);\r\n      \r\n          if (aF[item].related) {\r\n            html5Ext = html5Ext.concat(aF[item].related);\r\n          }\r\n      \r\n        }\r\n      \r\n      }\r\n      \r\n      html5Ext = new RegExp('\\\\.('+html5Ext.join('|')+')(\\\\?.*)?$','i');\r\n    \r\n    }\r\n\r\n    // TODO: Strip URL queries, etc.\r\n    fileExt = (url ? url.toLowerCase().match(html5Ext) : null);\r\n\r\n    if (!fileExt || !fileExt.length) {\r\n      \r\n      if (!mime) {\r\n      \r\n        result = false;\r\n      \r\n      } else {\r\n      \r\n        // audio/mp3 -> mp3, result should be known\r\n        offset = mime.indexOf(';');\r\n      \r\n        // strip \"audio/X; codecs...\"\r\n        fileExt = (offset !== -1 ? mime.substr(0,offset) : mime).substr(6);\r\n      \r\n      }\r\n    \r\n    } else {\r\n    \r\n      // match the raw extension name - \"mp3\", for example\r\n      fileExt = fileExt[1];\r\n    \r\n    }\r\n\r\n    if (fileExt && sm2.html5[fileExt] !== _undefined) {\r\n    \r\n      // result known\r\n      result = (sm2.html5[fileExt] && !preferFlashCheck(fileExt));\r\n    \r\n    } else {\r\n    \r\n      mime = 'audio/' + fileExt;\r\n      result = sm2.html5.canPlayType({type:mime});\r\n    \r\n      sm2.html5[fileExt] = result;\r\n    \r\n      // sm2._wD('canPlayType, found result: ' + result);\r\n      result = (result && sm2.html5[mime] && !preferFlashCheck(mime));\r\n    }\r\n\r\n    return result;\r\n\r\n  };\r\n\r\n  testHTML5 = function() {\r\n\r\n    /**\r\n     * Internal: Iterates over audioFormats, determining support eg. audio/mp3, audio/mpeg and so on\r\n     * assigns results to html5[] and flash[].\r\n     */\r\n\r\n    if (!sm2.useHTML5Audio || !sm2.hasHTML5) {\r\n    \r\n      // without HTML5, we need Flash.\r\n      sm2.html5.usingFlash = true;\r\n      needsFlash = true;\r\n    \r\n      return false;\r\n    \r\n    }\r\n\r\n    // double-whammy: Opera 9.64 throws WRONG_ARGUMENTS_ERR if no parameter passed to Audio(), and Webkit + iOS happily tries to load \"null\" as a URL. :/\r\n    var a = (Audio !== _undefined ? (isOpera && opera.version() < 10 ? new Audio(null) : new Audio()) : null),\r\n        item, lookup, support = {}, aF, i;\r\n\r\n    function cp(m) {\r\n\r\n      var canPlay, j,\r\n          result = false,\r\n          isOK = false;\r\n\r\n      if (!a || typeof a.canPlayType !== 'function') {\r\n        return result;\r\n      }\r\n\r\n      if (m instanceof Array) {\r\n    \r\n        // iterate through all mime types, return any successes\r\n    \r\n        for (i = 0, j = m.length; i < j; i++) {\r\n    \r\n          if (sm2.html5[m[i]] || a.canPlayType(m[i]).match(sm2.html5Test)) {\r\n    \r\n            isOK = true;\r\n            sm2.html5[m[i]] = true;\r\n    \r\n            // note flash support, too\r\n            sm2.flash[m[i]] = !!(m[i].match(flashMIME));\r\n    \r\n          }\r\n    \r\n        }\r\n    \r\n        result = isOK;\r\n    \r\n      } else {\r\n    \r\n        canPlay = (a && typeof a.canPlayType === 'function' ? a.canPlayType(m) : false);\r\n        result = !!(canPlay && (canPlay.match(sm2.html5Test)));\r\n    \r\n      }\r\n\r\n      return result;\r\n\r\n    }\r\n\r\n    // test all registered formats + codecs\r\n\r\n    aF = sm2.audioFormats;\r\n\r\n    for (item in aF) {\r\n\r\n      if (aF.hasOwnProperty(item)) {\r\n\r\n        lookup = 'audio/' + item;\r\n\r\n        support[item] = cp(aF[item].type);\r\n\r\n        // write back generic type too, eg. audio/mp3\r\n        support[lookup] = support[item];\r\n\r\n        // assign flash\r\n        if (item.match(flashMIME)) {\r\n\r\n          sm2.flash[item] = true;\r\n          sm2.flash[lookup] = true;\r\n\r\n        } else {\r\n\r\n          sm2.flash[item] = false;\r\n          sm2.flash[lookup] = false;\r\n\r\n        }\r\n\r\n        // assign result to related formats, too\r\n\r\n        if (aF[item] && aF[item].related) {\r\n\r\n          for (i = aF[item].related.length - 1; i >= 0; i--) {\r\n\r\n            // eg. audio/m4a\r\n            support['audio/' + aF[item].related[i]] = support[item];\r\n            sm2.html5[aF[item].related[i]] = support[item];\r\n            sm2.flash[aF[item].related[i]] = support[item];\r\n\r\n          }\r\n\r\n        }\r\n\r\n      }\r\n\r\n    }\r\n\r\n    support.canPlayType = (a ? cp : null);\r\n    sm2.html5 = mixin(sm2.html5, support);\r\n\r\n    sm2.html5.usingFlash = featureCheck();\r\n    needsFlash = sm2.html5.usingFlash;\r\n\r\n    return true;\r\n\r\n  };\r\n\r\n  strings = {\r\n\r\n    // <d>\r\n    notReady: 'Unavailable - wait until onready() has fired.',\r\n    notOK: 'Audio support is not available.',\r\n    domError: sm + 'exception caught while appending SWF to DOM.',\r\n    spcWmode: 'Removing wmode, preventing known SWF loading issue(s)',\r\n    swf404: smc + 'Verify that %s is a valid path.',\r\n    tryDebug: 'Try ' + sm + '.debugFlash = true for more security details (output goes to SWF.)',\r\n    checkSWF: 'See SWF output for more debug info.',\r\n    localFail: smc + 'Non-HTTP page (' + doc.location.protocol + ' URL?) Review Flash player security settings for this special case:\\nhttp://www.macromedia.com/support/documentation/en/flashplayer/help/settings_manager04.html\\nMay need to add/allow path, eg. c:/sm2/ or /users/me/sm2/',\r\n    waitFocus: smc + 'Special case: Waiting for SWF to load with window focus...',\r\n    waitForever: smc + 'Waiting indefinitely for Flash (will recover if unblocked)...',\r\n    waitSWF: smc + 'Waiting for 100% SWF load...',\r\n    needFunction: smc + 'Function object expected for %s',\r\n    badID: 'Sound ID \"%s\" should be a string, starting with a non-numeric character',\r\n    currentObj: smc + '_debug(): Current sound objects',\r\n    waitOnload: smc + 'Waiting for window.onload()',\r\n    docLoaded: smc + 'Document already loaded',\r\n    onload: smc + 'initComplete(): calling soundManager.onload()',\r\n    onloadOK: sm + '.onload() complete',\r\n    didInit: smc + 'init(): Already called?',\r\n    secNote: 'Flash security note: Network/internet URLs will not load due to security restrictions. Access can be configured via Flash Player Global Security Settings Page: http://www.macromedia.com/support/documentation/en/flashplayer/help/settings_manager04.html',\r\n    badRemove: smc + 'Failed to remove Flash node.',\r\n    shutdown: sm + '.disable(): Shutting down',\r\n    queue: smc + 'Queueing %s handler',\r\n    smError: 'SMSound.load(): Exception: JS-Flash communication failed, or JS error.',\r\n    fbTimeout: 'No flash response, applying .' + swfCSS.swfTimedout + ' CSS...',\r\n    fbLoaded: 'Flash loaded',\r\n    fbHandler: smc + 'flashBlockHandler()',\r\n    manURL: 'SMSound.load(): Using manually-assigned URL',\r\n    onURL: sm + '.load(): current URL already assigned.',\r\n    badFV: sm + '.flashVersion must be 8 or 9. \"%s\" is invalid. Reverting to %s.',\r\n    as2loop: 'Note: Setting stream:false so looping can work (flash 8 limitation)',\r\n    noNSLoop: 'Note: Looping not implemented for MovieStar formats',\r\n    needfl9: 'Note: Switching to flash 9, required for MP4 formats.',\r\n    mfTimeout: 'Setting flashLoadTimeout = 0 (infinite) for off-screen, mobile flash case',\r\n    needFlash: smc + 'Fatal error: Flash is needed to play some required formats, but is not available.',\r\n    gotFocus: smc + 'Got window focus.',\r\n    policy: 'Enabling usePolicyFile for data access',\r\n    setup: sm + '.setup(): allowed parameters: %s',\r\n    setupError: sm + '.setup(): \"%s\" cannot be assigned with this method.',\r\n    setupUndef: sm + '.setup(): Could not find option \"%s\"',\r\n    setupLate: sm + '.setup(): url, flashVersion and html5Test property changes will not take effect until reboot().',\r\n    noURL: smc + 'Flash URL required. Call soundManager.setup({url:...}) to get started.',\r\n    sm2Loaded: 'SoundManager 2: Ready. ' + String.fromCharCode(10003),\r\n    reset: sm + '.reset(): Removing event callbacks',\r\n    mobileUA: 'Mobile UA detected, preferring HTML5 by default.',\r\n    globalHTML5: 'Using singleton HTML5 Audio() pattern for this device.',\r\n    ignoreMobile: 'Ignoring mobile restrictions for this device.'\r\n    // </d>\r\n\r\n  };\r\n\r\n  str = function() {\r\n\r\n    // internal string replace helper.\r\n    // arguments: o [,items to replace]\r\n    // <d>\r\n\r\n    var args,\r\n        i, j, o,\r\n        sstr;\r\n\r\n    // real array, please\r\n    args = slice.call(arguments);\r\n\r\n    // first argument\r\n    o = args.shift();\r\n\r\n    sstr = (strings && strings[o] ? strings[o] : '');\r\n\r\n    if (sstr && args && args.length) {\r\n      for (i = 0, j = args.length; i < j; i++) {\r\n        sstr = sstr.replace('%s', args[i]);\r\n      }\r\n    }\r\n\r\n    return sstr;\r\n    // </d>\r\n\r\n  };\r\n\r\n  loopFix = function(sOpt) {\r\n\r\n    // flash 8 requires stream = false for looping to work\r\n    if (fV === 8 && sOpt.loops > 1 && sOpt.stream) {\r\n      _wDS('as2loop');\r\n      sOpt.stream = false;\r\n    }\r\n\r\n    return sOpt;\r\n\r\n  };\r\n\r\n  policyFix = function(sOpt, sPre) {\r\n\r\n    if (sOpt && !sOpt.usePolicyFile && (sOpt.onid3 || sOpt.usePeakData || sOpt.useWaveformData || sOpt.useEQData)) {\r\n      sm2._wD((sPre || '') + str('policy'));\r\n      sOpt.usePolicyFile = true;\r\n    }\r\n\r\n    return sOpt;\r\n\r\n  };\r\n\r\n  complain = function(sMsg) {\r\n\r\n    // <d>\r\n    if (hasConsole && console.warn !== _undefined) {\r\n      console.warn(sMsg);\r\n    } else {\r\n      sm2._wD(sMsg);\r\n    }\r\n    // </d>\r\n\r\n  };\r\n\r\n  doNothing = function() {\r\n\r\n    return false;\r\n\r\n  };\r\n\r\n  disableObject = function(o) {\r\n\r\n    var oProp;\r\n\r\n    for (oProp in o) {\r\n      if (o.hasOwnProperty(oProp) && typeof o[oProp] === 'function') {\r\n        o[oProp] = doNothing;\r\n      }\r\n    }\r\n\r\n    oProp = null;\r\n\r\n  };\r\n\r\n  failSafely = function(bNoDisable) {\r\n\r\n    // general failure exception handler\r\n\r\n    if (bNoDisable === _undefined) {\r\n      bNoDisable = false;\r\n    }\r\n\r\n    if (disabled || bNoDisable) {\r\n      sm2.disable(bNoDisable);\r\n    }\r\n\r\n  };\r\n\r\n  normalizeMovieURL = function(smURL) {\r\n\r\n    var urlParams = null, url;\r\n\r\n    if (smURL) {\r\n      \r\n      if (smURL.match(/\\.swf(\\?.*)?$/i)) {\r\n      \r\n        urlParams = smURL.substr(smURL.toLowerCase().lastIndexOf('.swf?') + 4);\r\n      \r\n        if (urlParams) {\r\n          // assume user knows what they're doing\r\n          return smURL;\r\n        }\r\n      \r\n      } else if (smURL.lastIndexOf('/') !== smURL.length - 1) {\r\n      \r\n        // append trailing slash, if needed\r\n        smURL += '/';\r\n      \r\n      }\r\n    \r\n    }\r\n\r\n    url = (smURL && smURL.lastIndexOf('/') !== - 1 ? smURL.substr(0, smURL.lastIndexOf('/') + 1) : './') + sm2.movieURL;\r\n\r\n    if (sm2.noSWFCache) {\r\n      url += ('?ts=' + new Date().getTime());\r\n    }\r\n\r\n    return url;\r\n\r\n  };\r\n\r\n  setVersionInfo = function() {\r\n\r\n    // short-hand for internal use\r\n\r\n    fV = parseInt(sm2.flashVersion, 10);\r\n\r\n    if (fV !== 8 && fV !== 9) {\r\n      sm2._wD(str('badFV', fV, defaultFlashVersion));\r\n      sm2.flashVersion = fV = defaultFlashVersion;\r\n    }\r\n\r\n    // debug flash movie, if applicable\r\n\r\n    var isDebug = (sm2.debugMode || sm2.debugFlash ? '_debug.swf' : '.swf');\r\n\r\n    if (sm2.useHTML5Audio && !sm2.html5Only && sm2.audioFormats.mp4.required && fV < 9) {\r\n      sm2._wD(str('needfl9'));\r\n      sm2.flashVersion = fV = 9;\r\n    }\r\n\r\n    sm2.version = sm2.versionNumber + (sm2.html5Only ? ' (HTML5-only mode)' : (fV === 9 ? ' (AS3/Flash 9)' : ' (AS2/Flash 8)'));\r\n\r\n    // set up default options\r\n    if (fV > 8) {\r\n    \r\n      // +flash 9 base options\r\n      sm2.defaultOptions = mixin(sm2.defaultOptions, sm2.flash9Options);\r\n      sm2.features.buffering = true;\r\n    \r\n      // +moviestar support\r\n      sm2.defaultOptions = mixin(sm2.defaultOptions, sm2.movieStarOptions);\r\n      sm2.filePatterns.flash9 = new RegExp('\\\\.(mp3|' + netStreamTypes.join('|') + ')(\\\\?.*)?$', 'i');\r\n      sm2.features.movieStar = true;\r\n    \r\n    } else {\r\n    \r\n      sm2.features.movieStar = false;\r\n    \r\n    }\r\n\r\n    // regExp for flash canPlay(), etc.\r\n    sm2.filePattern = sm2.filePatterns[(fV !== 8 ? 'flash9' : 'flash8')];\r\n\r\n    // if applicable, use _debug versions of SWFs\r\n    sm2.movieURL = (fV === 8 ? 'soundmanager2.swf' : 'soundmanager2_flash9.swf').replace('.swf', isDebug);\r\n\r\n    sm2.features.peakData = sm2.features.waveformData = sm2.features.eqData = (fV > 8);\r\n\r\n  };\r\n\r\n  setPolling = function(bPolling, bHighPerformance) {\r\n\r\n    if (!flash) {\r\n      return false;\r\n    }\r\n\r\n    flash._setPolling(bPolling, bHighPerformance);\r\n\r\n  };\r\n\r\n  initDebug = function() {\r\n\r\n    // starts debug mode, creating output <div> for UAs without console object\r\n\r\n    // allow force of debug mode via URL\r\n    // <d>\r\n    if (sm2.debugURLParam.test(wl)) {\r\n      sm2.setupOptions.debugMode = sm2.debugMode = true;\r\n    }\r\n\r\n    if (id(sm2.debugID)) {\r\n      return false;\r\n    }\r\n\r\n    var oD, oDebug, oTarget, oToggle, tmp;\r\n\r\n    if (sm2.debugMode && !id(sm2.debugID) && (!hasConsole || !sm2.useConsole || !sm2.consoleOnly)) {\r\n\r\n      oD = doc.createElement('div');\r\n      oD.id = sm2.debugID + '-toggle';\r\n\r\n      oToggle = {\r\n        'position': 'fixed',\r\n        'bottom': '0px',\r\n        'right': '0px',\r\n        'width': '1.2em',\r\n        'height': '1.2em',\r\n        'lineHeight': '1.2em',\r\n        'margin': '2px',\r\n        'textAlign': 'center',\r\n        'border': '1px solid #999',\r\n        'cursor': 'pointer',\r\n        'background': '#fff',\r\n        'color': '#333',\r\n        'zIndex': 10001\r\n      };\r\n\r\n      oD.appendChild(doc.createTextNode('-'));\r\n      oD.onclick = toggleDebug;\r\n      oD.title = 'Toggle SM2 debug console';\r\n\r\n      if (ua.match(/msie 6/i)) {\r\n        oD.style.position = 'absolute';\r\n        oD.style.cursor = 'hand';\r\n      }\r\n\r\n      for (tmp in oToggle) {\r\n        if (oToggle.hasOwnProperty(tmp)) {\r\n          oD.style[tmp] = oToggle[tmp];\r\n        }\r\n      }\r\n\r\n      oDebug = doc.createElement('div');\r\n      oDebug.id = sm2.debugID;\r\n      oDebug.style.display = (sm2.debugMode ? 'block' : 'none');\r\n\r\n      if (sm2.debugMode && !id(oD.id)) {\r\n        try {\r\n          oTarget = getDocument();\r\n          oTarget.appendChild(oD);\r\n        } catch(e2) {\r\n          throw new Error(str('domError') + ' \\n' + e2.toString());\r\n        }\r\n        oTarget.appendChild(oDebug);\r\n      }\r\n\r\n    }\r\n\r\n    oTarget = null;\r\n    // </d>\r\n\r\n  };\r\n\r\n  idCheck = this.getSoundById;\r\n\r\n  // <d>\r\n  _wDS = function(o, errorLevel) {\r\n\r\n    return (!o ? '' : sm2._wD(str(o), errorLevel));\r\n\r\n  };\r\n\r\n  toggleDebug = function() {\r\n\r\n    var o = id(sm2.debugID),\r\n    oT = id(sm2.debugID + '-toggle');\r\n\r\n    if (!o) {\r\n      return false;\r\n    }\r\n\r\n    if (debugOpen) {\r\n      // minimize\r\n      oT.innerHTML = '+';\r\n      o.style.display = 'none';\r\n    } else {\r\n      oT.innerHTML = '-';\r\n      o.style.display = 'block';\r\n    }\r\n\r\n    debugOpen = !debugOpen;\r\n\r\n  };\r\n\r\n  debugTS = function(sEventType, bSuccess, sMessage) {\r\n\r\n    // troubleshooter debug hooks\r\n\r\n    if (window.sm2Debugger !== _undefined) {\r\n      try {\r\n        sm2Debugger.handleEvent(sEventType, bSuccess, sMessage);\r\n      } catch(e) {\r\n        // oh well\r\n        return false;\r\n      }\r\n    }\r\n\r\n    return true;\r\n\r\n  };\r\n  // </d>\r\n\r\n  getSWFCSS = function() {\r\n\r\n    var css = [];\r\n\r\n    if (sm2.debugMode) {\r\n      css.push(swfCSS.sm2Debug);\r\n    }\r\n\r\n    if (sm2.debugFlash) {\r\n      css.push(swfCSS.flashDebug);\r\n    }\r\n\r\n    if (sm2.useHighPerformance) {\r\n      css.push(swfCSS.highPerf);\r\n    }\r\n\r\n    return css.join(' ');\r\n\r\n  };\r\n\r\n  flashBlockHandler = function() {\r\n\r\n    // *possible* flash block situation.\r\n\r\n    var name = str('fbHandler'),\r\n        p = sm2.getMoviePercent(),\r\n        css = swfCSS,\r\n        error = {\r\n          type:'FLASHBLOCK'\r\n        };\r\n\r\n    if (sm2.html5Only) {\r\n      // no flash, or unused\r\n      return false;\r\n    }\r\n\r\n    if (!sm2.ok()) {\r\n\r\n      if (needsFlash) {\r\n        // make the movie more visible, so user can fix\r\n        sm2.oMC.className = getSWFCSS() + ' ' + css.swfDefault + ' ' + (p === null ? css.swfTimedout : css.swfError);\r\n        sm2._wD(name + ': ' + str('fbTimeout') + (p ? ' (' + str('fbLoaded') + ')' : ''));\r\n      }\r\n\r\n      sm2.didFlashBlock = true;\r\n\r\n      // fire onready(), complain lightly\r\n      processOnEvents({\r\n        type: 'ontimeout',\r\n        ignoreInit: true,\r\n        error: error\r\n      });\r\n\r\n      catchError(error);\r\n\r\n    } else {\r\n\r\n      // SM2 loaded OK (or recovered)\r\n\r\n      // <d>\r\n      if (sm2.didFlashBlock) {\r\n        sm2._wD(name + ': Unblocked');\r\n      }\r\n      // </d>\r\n\r\n      if (sm2.oMC) {\r\n        sm2.oMC.className = [getSWFCSS(), css.swfDefault, css.swfLoaded + (sm2.didFlashBlock ? ' ' + css.swfUnblocked : '')].join(' ');\r\n      }\r\n\r\n    }\r\n\r\n  };\r\n\r\n  addOnEvent = function(sType, oMethod, oScope) {\r\n\r\n    if (on_queue[sType] === _undefined) {\r\n      on_queue[sType] = [];\r\n    }\r\n\r\n    on_queue[sType].push({\r\n      'method': oMethod,\r\n      'scope': (oScope || null),\r\n      'fired': false\r\n    });\r\n\r\n  };\r\n\r\n  processOnEvents = function(oOptions) {\r\n\r\n    // if unspecified, assume OK/error\r\n\r\n    if (!oOptions) {\r\n      oOptions = {\r\n        type: (sm2.ok() ? 'onready' : 'ontimeout')\r\n      };\r\n    }\r\n\r\n    if (!didInit && oOptions && !oOptions.ignoreInit) {\r\n      // not ready yet.\r\n      return false;\r\n    }\r\n\r\n    if (oOptions.type === 'ontimeout' && (sm2.ok() || (disabled && !oOptions.ignoreInit))) {\r\n      // invalid case\r\n      return false;\r\n    }\r\n\r\n    var status = {\r\n          success: (oOptions && oOptions.ignoreInit ? sm2.ok() : !disabled)\r\n        },\r\n\r\n        // queue specified by type, or none\r\n        srcQueue = (oOptions && oOptions.type ? on_queue[oOptions.type] || [] : []),\r\n\r\n        queue = [], i, j,\r\n        args = [status],\r\n        canRetry = (needsFlash && !sm2.ok());\r\n\r\n    if (oOptions.error) {\r\n      args[0].error = oOptions.error;\r\n    }\r\n\r\n    for (i = 0, j = srcQueue.length; i < j; i++) {\r\n      if (srcQueue[i].fired !== true) {\r\n        queue.push(srcQueue[i]);\r\n      }\r\n    }\r\n\r\n    if (queue.length) {\r\n    \r\n      // sm2._wD(sm + ': Firing ' + queue.length + ' ' + oOptions.type + '() item' + (queue.length === 1 ? '' : 's')); \r\n      for (i = 0, j = queue.length; i < j; i++) {\r\n      \r\n        if (queue[i].scope) {\r\n          queue[i].method.apply(queue[i].scope, args);\r\n        } else {\r\n          queue[i].method.apply(this, args);\r\n        }\r\n      \r\n        if (!canRetry) {\r\n          // useFlashBlock and SWF timeout case doesn't count here.\r\n          queue[i].fired = true;\r\n      \r\n        }\r\n      \r\n      }\r\n    \r\n    }\r\n\r\n    return true;\r\n\r\n  };\r\n\r\n  initUserOnload = function() {\r\n\r\n    window.setTimeout(function() {\r\n\r\n      if (sm2.useFlashBlock) {\r\n        flashBlockHandler();\r\n      }\r\n\r\n      processOnEvents();\r\n\r\n      // call user-defined \"onload\", scoped to window\r\n\r\n      if (typeof sm2.onload === 'function') {\r\n        _wDS('onload', 1);\r\n        sm2.onload.apply(window);\r\n        _wDS('onloadOK', 1);\r\n      }\r\n\r\n      if (sm2.waitForWindowLoad) {\r\n        event.add(window, 'load', initUserOnload);\r\n      }\r\n\r\n    }, 1);\r\n\r\n  };\r\n\r\n  detectFlash = function() {\r\n\r\n    /**\r\n     * Hat tip: Flash Detect library (BSD, (C) 2007) by Carl \"DocYes\" S. Yestrau\r\n     * http://featureblend.com/javascript-flash-detection-library.html / http://featureblend.com/license.txt\r\n     */\r\n\r\n    if (hasFlash !== _undefined) {\r\n      // this work has already been done.\r\n      return hasFlash;\r\n    }\r\n\r\n    var hasPlugin = false, n = navigator, nP = n.plugins, obj, type, types, AX = window.ActiveXObject;\r\n\r\n    if (nP && nP.length) {\r\n      \r\n      type = 'application/x-shockwave-flash';\r\n      types = n.mimeTypes;\r\n      \r\n      if (types && types[type] && types[type].enabledPlugin && types[type].enabledPlugin.description) {\r\n        hasPlugin = true;\r\n      }\r\n    \r\n    } else if (AX !== _undefined && !ua.match(/MSAppHost/i)) {\r\n    \r\n      // Windows 8 Store Apps (MSAppHost) are weird (compatibility?) and won't complain here, but will barf if Flash/ActiveX object is appended to the DOM.\r\n      try {\r\n        obj = new AX('ShockwaveFlash.ShockwaveFlash');\r\n      } catch(e) {\r\n        // oh well\r\n        obj = null;\r\n      }\r\n      \r\n      hasPlugin = (!!obj);\r\n      \r\n      // cleanup, because it is ActiveX after all\r\n      obj = null;\r\n    \r\n    }\r\n\r\n    hasFlash = hasPlugin;\r\n\r\n    return hasPlugin;\r\n\r\n  };\r\n\r\nfeatureCheck = function() {\r\n\r\n    var flashNeeded,\r\n        item,\r\n        formats = sm2.audioFormats,\r\n        // iPhone <= 3.1 has broken HTML5 audio(), but firmware 3.2 (original iPad) + iOS4 works.\r\n        isSpecial = (is_iDevice && !!(ua.match(/os (1|2|3_0|3_1)\\s/i)));\r\n\r\n    if (isSpecial) {\r\n\r\n      // has Audio(), but is broken; let it load links directly.\r\n      sm2.hasHTML5 = false;\r\n\r\n      // ignore flash case, however\r\n      sm2.html5Only = true;\r\n\r\n      // hide the SWF, if present\r\n      if (sm2.oMC) {\r\n        sm2.oMC.style.display = 'none';\r\n      }\r\n\r\n    } else {\r\n\r\n      if (sm2.useHTML5Audio) {\r\n\r\n        if (!sm2.html5 || !sm2.html5.canPlayType) {\r\n          sm2._wD('SoundManager: No HTML5 Audio() support detected.');\r\n          sm2.hasHTML5 = false;\r\n        }\r\n\r\n        // <d>\r\n        if (isBadSafari) {\r\n          sm2._wD(smc + 'Note: Buggy HTML5 Audio in Safari on this OS X release, see https://bugs.webkit.org/show_bug.cgi?id=32159 - ' + (!hasFlash ? ' would use flash fallback for MP3/MP4, but none detected.' : 'will use flash fallback for MP3/MP4, if available'), 1);\r\n        }\r\n        // </d>\r\n\r\n      }\r\n\r\n    }\r\n\r\n    if (sm2.useHTML5Audio && sm2.hasHTML5) {\r\n\r\n      // sort out whether flash is optional, required or can be ignored.\r\n\r\n      // innocent until proven guilty.\r\n      canIgnoreFlash = true;\r\n\r\n      for (item in formats) {\r\n        \r\n        if (formats.hasOwnProperty(item)) {\r\n        \r\n          if (formats[item].required) {\r\n        \r\n            if (!sm2.html5.canPlayType(formats[item].type)) {\r\n        \r\n              // 100% HTML5 mode is not possible.\r\n              canIgnoreFlash = false;\r\n              flashNeeded = true;\r\n        \r\n            } else if (sm2.preferFlash && (sm2.flash[item] || sm2.flash[formats[item].type])) {\r\n        \r\n              // flash may be required, or preferred for this format.\r\n              flashNeeded = true;\r\n        \r\n            }\r\n        \r\n          }\r\n\r\n        }\r\n\r\n      }\r\n\r\n    }\r\n\r\n    // sanity check...\r\n    if (sm2.ignoreFlash) {\r\n      flashNeeded = false;\r\n      canIgnoreFlash = true;\r\n    }\r\n\r\n    sm2.html5Only = (sm2.hasHTML5 && sm2.useHTML5Audio && !flashNeeded);\r\n\r\n    return (!sm2.html5Only);\r\n\r\n  };\r\n\r\n  parseURL = function(url) {\r\n\r\n    /**\r\n     * Internal: Finds and returns the first playable URL (or failing that, the first URL.)\r\n     * @param {string or array} url A single URL string, OR, an array of URL strings or {url:'/path/to/resource', type:'audio/mp3'} objects.\r\n     */\r\n\r\n    var i, j, urlResult = 0, result;\r\n\r\n    if (url instanceof Array) {\r\n\r\n      // find the first good one\r\n      for (i = 0, j = url.length; i < j; i++) {\r\n\r\n        if (url[i] instanceof Object) {\r\n\r\n          // MIME check\r\n          if (sm2.canPlayMIME(url[i].type)) {\r\n            urlResult = i;\r\n            break;\r\n          }\r\n\r\n        } else if (sm2.canPlayURL(url[i])) {\r\n\r\n          // URL string check\r\n          urlResult = i;\r\n          break;\r\n\r\n        }\r\n\r\n      }\r\n\r\n      // normalize to string\r\n      if (url[urlResult].url) {\r\n        url[urlResult] = url[urlResult].url;\r\n      }\r\n\r\n      result = url[urlResult];\r\n\r\n    } else {\r\n\r\n      // single URL case\r\n      result = url;\r\n\r\n    }\r\n\r\n    return result;\r\n\r\n  };\r\n\r\n\r\n  startTimer = function(oSound) {\r\n\r\n    /**\r\n     * attach a timer to this sound, and start an interval if needed\r\n     */\r\n\r\n    if (!oSound._hasTimer) {\r\n\r\n      oSound._hasTimer = true;\r\n\r\n      if (!mobileHTML5 && sm2.html5PollingInterval) {\r\n\r\n        if (h5IntervalTimer === null && h5TimerCount === 0) {\r\n\r\n          h5IntervalTimer = setInterval(timerExecute, sm2.html5PollingInterval);\r\n\r\n        }\r\n\r\n        h5TimerCount++;\r\n\r\n      }\r\n\r\n    }\r\n\r\n  };\r\n\r\n  stopTimer = function(oSound) {\r\n\r\n    /**\r\n     * detach a timer\r\n     */\r\n\r\n    if (oSound._hasTimer) {\r\n\r\n      oSound._hasTimer = false;\r\n\r\n      if (!mobileHTML5 && sm2.html5PollingInterval) {\r\n\r\n        // interval will stop itself at next execution.\r\n\r\n        h5TimerCount--;\r\n\r\n      }\r\n\r\n    }\r\n\r\n  };\r\n\r\n  timerExecute = function() {\r\n\r\n    /**\r\n     * manual polling for HTML5 progress events, ie., whileplaying()\r\n     * (can achieve greater precision than conservative default HTML5 interval)\r\n     */\r\n\r\n    var i;\r\n\r\n    if (h5IntervalTimer !== null && !h5TimerCount) {\r\n\r\n      // no active timers, stop polling interval.\r\n\r\n      clearInterval(h5IntervalTimer);\r\n\r\n      h5IntervalTimer = null;\r\n\r\n      return false;\r\n\r\n    }\r\n\r\n    // check all HTML5 sounds with timers\r\n\r\n    for (i = sm2.soundIDs.length - 1; i >= 0; i--) {\r\n\r\n      if (sm2.sounds[sm2.soundIDs[i]].isHTML5 && sm2.sounds[sm2.soundIDs[i]]._hasTimer) {\r\n        sm2.sounds[sm2.soundIDs[i]]._onTimer();\r\n      }\r\n\r\n    }\r\n\r\n  };\r\n\r\n  catchError = function(options) {\r\n\r\n    options = (options !== _undefined ? options : {});\r\n\r\n    if (typeof sm2.onerror === 'function') {\r\n      sm2.onerror.apply(window, [{\r\n        type: (options.type !== _undefined ? options.type : null)\r\n      }]);\r\n    }\r\n\r\n    if (options.fatal !== _undefined && options.fatal) {\r\n      sm2.disable();\r\n    }\r\n\r\n  };\r\n\r\n  badSafariFix = function() {\r\n\r\n    // special case: \"bad\" Safari (OS X 10.3 - 10.7) must fall back to flash for MP3/MP4\r\n    if (!isBadSafari || !detectFlash()) {\r\n      // doesn't apply\r\n      return false;\r\n    }\r\n\r\n    var aF = sm2.audioFormats, i, item;\r\n\r\n    for (item in aF) {\r\n\r\n      if (aF.hasOwnProperty(item)) {\r\n\r\n        if (item === 'mp3' || item === 'mp4') {\r\n\r\n          sm2._wD(sm + ': Using flash fallback for ' + item + ' format');\r\n          sm2.html5[item] = false;\r\n\r\n          // assign result to related formats, too\r\n          if (aF[item] && aF[item].related) {\r\n            for (i = aF[item].related.length - 1; i >= 0; i--) {\r\n              sm2.html5[aF[item].related[i]] = false;\r\n            }\r\n          }\r\n\r\n        }\r\n\r\n      }\r\n\r\n    }\r\n\r\n  };\r\n\r\n  /**\r\n   * Pseudo-private flash/ExternalInterface methods\r\n   * ----------------------------------------------\r\n   */\r\n\r\n  this._setSandboxType = function(sandboxType) {\r\n\r\n    // <d>\r\n    // Security sandbox according to Flash plugin\r\n    var sb = sm2.sandbox;\r\n\r\n    sb.type = sandboxType;\r\n    sb.description = sb.types[(sb.types[sandboxType] !== _undefined?sandboxType : 'unknown')];\r\n\r\n    if (sb.type === 'localWithFile') {\r\n\r\n      sb.noRemote = true;\r\n      sb.noLocal = false;\r\n      _wDS('secNote', 2);\r\n\r\n    } else if (sb.type === 'localWithNetwork') {\r\n\r\n      sb.noRemote = false;\r\n      sb.noLocal = true;\r\n\r\n    } else if (sb.type === 'localTrusted') {\r\n\r\n      sb.noRemote = false;\r\n      sb.noLocal = false;\r\n\r\n    }\r\n    // </d>\r\n\r\n  };\r\n\r\n  this._externalInterfaceOK = function(swfVersion) {\r\n\r\n    // flash callback confirming flash loaded, EI working etc.\r\n    // swfVersion: SWF build string\r\n\r\n    if (sm2.swfLoaded) {\r\n      return false;\r\n    }\r\n\r\n    var e;\r\n\r\n    debugTS('swf', true);\r\n    debugTS('flashtojs', true);\r\n    sm2.swfLoaded = true;\r\n    tryInitOnFocus = false;\r\n\r\n    if (isBadSafari) {\r\n      badSafariFix();\r\n    }\r\n\r\n    // complain if JS + SWF build/version strings don't match, excluding +DEV builds\r\n    // <d>\r\n    if (!swfVersion || swfVersion.replace(/\\+dev/i,'') !== sm2.versionNumber.replace(/\\+dev/i, '')) {\r\n\r\n      e = sm + ': Fatal: JavaScript file build \"' + sm2.versionNumber + '\" does not match Flash SWF build \"' + swfVersion + '\" at ' + sm2.url + '. Ensure both are up-to-date.';\r\n\r\n      // escape flash -> JS stack so this error fires in window.\r\n      setTimeout(function versionMismatch() {\r\n        throw new Error(e);\r\n      }, 0);\r\n\r\n      // exit, init will fail with timeout\r\n      return false;\r\n\r\n    }\r\n    // </d>\r\n\r\n    // IE needs a larger timeout\r\n    setTimeout(init, isIE ? 100 : 1);\r\n\r\n  };\r\n\r\n  /**\r\n   * Private initialization helpers\r\n   * ------------------------------\r\n   */\r\n\r\n  createMovie = function(smID, smURL) {\r\n\r\n    if (didAppend && appendSuccess) {\r\n      // ignore if already succeeded\r\n      return false;\r\n    }\r\n\r\n    function initMsg() {\r\n\r\n      // <d>\r\n\r\n      var options = [],\r\n          title,\r\n          msg = [],\r\n          delimiter = ' + ';\r\n\r\n      title = 'SoundManager ' + sm2.version + (!sm2.html5Only && sm2.useHTML5Audio ? (sm2.hasHTML5 ? ' + HTML5 audio' : ', no HTML5 audio support') : '');\r\n\r\n      if (!sm2.html5Only) {\r\n\r\n        if (sm2.preferFlash) {\r\n          options.push('preferFlash');\r\n        }\r\n\r\n        if (sm2.useHighPerformance) {\r\n          options.push('useHighPerformance');\r\n        }\r\n\r\n        if (sm2.flashPollingInterval) {\r\n          options.push('flashPollingInterval (' + sm2.flashPollingInterval + 'ms)');\r\n        }\r\n\r\n        if (sm2.html5PollingInterval) {\r\n          options.push('html5PollingInterval (' + sm2.html5PollingInterval + 'ms)');\r\n        }\r\n\r\n        if (sm2.wmode) {\r\n          options.push('wmode (' + sm2.wmode + ')');\r\n        }\r\n\r\n        if (sm2.debugFlash) {\r\n          options.push('debugFlash');\r\n        }\r\n\r\n        if (sm2.useFlashBlock) {\r\n          options.push('flashBlock');\r\n        }\r\n\r\n      } else {\r\n\r\n        if (sm2.html5PollingInterval) {\r\n          options.push('html5PollingInterval (' + sm2.html5PollingInterval + 'ms)');\r\n        }\r\n\r\n      }\r\n\r\n      if (options.length) {\r\n        msg = msg.concat([options.join(delimiter)]);\r\n      }\r\n\r\n      sm2._wD(title + (msg.length ? delimiter + msg.join(', ') : ''), 1);\r\n\r\n      showSupport();\r\n\r\n      // </d>\r\n\r\n    }\r\n\r\n    if (sm2.html5Only) {\r\n\r\n      // 100% HTML5 mode\r\n      setVersionInfo();\r\n\r\n      initMsg();\r\n      sm2.oMC = id(sm2.movieID);\r\n      init();\r\n\r\n      // prevent multiple init attempts\r\n      didAppend = true;\r\n\r\n      appendSuccess = true;\r\n\r\n      return false;\r\n\r\n    }\r\n\r\n    // flash path\r\n    var remoteURL = (smURL || sm2.url),\r\n    localURL = (sm2.altURL || remoteURL),\r\n    swfTitle = 'JS/Flash audio component (SoundManager 2)',\r\n    oTarget = getDocument(),\r\n    extraClass = getSWFCSS(),\r\n    isRTL = null,\r\n    html = doc.getElementsByTagName('html')[0],\r\n    oEmbed, oMovie, tmp, movieHTML, oEl, s, x, sClass;\r\n\r\n    isRTL = (html && html.dir && html.dir.match(/rtl/i));\r\n    smID = (smID === _undefined ? sm2.id : smID);\r\n\r\n    function param(name, value) {\r\n      return '<param name=\"' + name + '\" value=\"' + value + '\" />';\r\n    }\r\n\r\n    // safety check for legacy (change to Flash 9 URL)\r\n    setVersionInfo();\r\n    sm2.url = normalizeMovieURL(overHTTP ? remoteURL : localURL);\r\n    smURL = sm2.url;\r\n\r\n    sm2.wmode = (!sm2.wmode && sm2.useHighPerformance ? 'transparent' : sm2.wmode);\r\n\r\n    if (sm2.wmode !== null && (ua.match(/msie 8/i) || (!isIE && !sm2.useHighPerformance)) && navigator.platform.match(/win32|win64/i)) {\r\n      /**\r\n       * extra-special case: movie doesn't load until scrolled into view when using wmode = anything but 'window' here\r\n       * does not apply when using high performance (position:fixed means on-screen), OR infinite flash load timeout\r\n       * wmode breaks IE 8 on Vista + Win7 too in some cases, as of January 2011 (?)\r\n       */\r\n      messages.push(strings.spcWmode);\r\n      sm2.wmode = null;\r\n    }\r\n\r\n    oEmbed = {\r\n      'name': smID,\r\n      'id': smID,\r\n      'src': smURL,\r\n      'quality': 'high',\r\n      'allowScriptAccess': sm2.allowScriptAccess,\r\n      'bgcolor': sm2.bgColor,\r\n      'pluginspage': http + 'www.macromedia.com/go/getflashplayer',\r\n      'title': swfTitle,\r\n      'type': 'application/x-shockwave-flash',\r\n      'wmode': sm2.wmode,\r\n      // http://help.adobe.com/en_US/as3/mobile/WS4bebcd66a74275c36cfb8137124318eebc6-7ffd.html\r\n      'hasPriority': 'true'\r\n    };\r\n\r\n    if (sm2.debugFlash) {\r\n      oEmbed.FlashVars = 'debug=1';\r\n    }\r\n\r\n    if (!sm2.wmode) {\r\n      // don't write empty attribute\r\n      delete oEmbed.wmode;\r\n    }\r\n\r\n    if (isIE) {\r\n\r\n      // IE is \"special\".\r\n      oMovie = doc.createElement('div');\r\n      movieHTML = [\r\n        '<object id=\"' + smID + '\" data=\"' + smURL + '\" type=\"' + oEmbed.type + '\" title=\"' + oEmbed.title +'\" classid=\"clsid:D27CDB6E-AE6D-11cf-96B8-444553540000\" codebase=\"http://download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=6,0,40,0\">',\r\n        param('movie', smURL),\r\n        param('AllowScriptAccess', sm2.allowScriptAccess),\r\n        param('quality', oEmbed.quality),\r\n        (sm2.wmode? param('wmode', sm2.wmode): ''),\r\n        param('bgcolor', sm2.bgColor),\r\n        param('hasPriority', 'true'),\r\n        (sm2.debugFlash ? param('FlashVars', oEmbed.FlashVars) : ''),\r\n        '</object>'\r\n      ].join('');\r\n\r\n    } else {\r\n\r\n      oMovie = doc.createElement('embed');\r\n      for (tmp in oEmbed) {\r\n        if (oEmbed.hasOwnProperty(tmp)) {\r\n          oMovie.setAttribute(tmp, oEmbed[tmp]);\r\n        }\r\n      }\r\n\r\n    }\r\n\r\n    initDebug();\r\n    extraClass = getSWFCSS();\r\n    oTarget = getDocument();\r\n\r\n    if (oTarget) {\r\n\r\n      sm2.oMC = (id(sm2.movieID) || doc.createElement('div'));\r\n\r\n      if (!sm2.oMC.id) {\r\n\r\n        sm2.oMC.id = sm2.movieID;\r\n        sm2.oMC.className = swfCSS.swfDefault + ' ' + extraClass;\r\n        s = null;\r\n        oEl = null;\r\n\r\n        if (!sm2.useFlashBlock) {\r\n          if (sm2.useHighPerformance) {\r\n            // on-screen at all times\r\n            s = {\r\n              'position': 'fixed',\r\n              'width': '8px',\r\n              'height': '8px',\r\n              // >= 6px for flash to run fast, >= 8px to start up under Firefox/win32 in some cases. odd? yes.\r\n              'bottom': '0px',\r\n              'left': '0px',\r\n              'overflow': 'hidden'\r\n            };\r\n          } else {\r\n            // hide off-screen, lower priority\r\n            s = {\r\n              'position': 'absolute',\r\n              'width': '6px',\r\n              'height': '6px',\r\n              'top': '-9999px',\r\n              'left': '-9999px'\r\n            };\r\n            if (isRTL) {\r\n              s.left = Math.abs(parseInt(s.left, 10)) + 'px';\r\n            }\r\n          }\r\n        }\r\n\r\n        if (isWebkit) {\r\n          // soundcloud-reported render/crash fix, safari 5\r\n          sm2.oMC.style.zIndex = 10000;\r\n        }\r\n\r\n        if (!sm2.debugFlash) {\r\n          for (x in s) {\r\n            if (s.hasOwnProperty(x)) {\r\n              sm2.oMC.style[x] = s[x];\r\n            }\r\n          }\r\n        }\r\n\r\n        try {\r\n\r\n          if (!isIE) {\r\n            sm2.oMC.appendChild(oMovie);\r\n          }\r\n\r\n          oTarget.appendChild(sm2.oMC);\r\n\r\n          if (isIE) {\r\n            oEl = sm2.oMC.appendChild(doc.createElement('div'));\r\n            oEl.className = swfCSS.swfBox;\r\n            oEl.innerHTML = movieHTML;\r\n          }\r\n\r\n          appendSuccess = true;\r\n\r\n        } catch(e) {\r\n\r\n          throw new Error(str('domError') + ' \\n' + e.toString());\r\n\r\n        }\r\n\r\n      } else {\r\n\r\n        // SM2 container is already in the document (eg. flashblock use case)\r\n        sClass = sm2.oMC.className;\r\n        sm2.oMC.className = (sClass ? sClass + ' ' : swfCSS.swfDefault) + (extraClass ? ' ' + extraClass : '');\r\n        sm2.oMC.appendChild(oMovie);\r\n\r\n        if (isIE) {\r\n          oEl = sm2.oMC.appendChild(doc.createElement('div'));\r\n          oEl.className = swfCSS.swfBox;\r\n          oEl.innerHTML = movieHTML;\r\n        }\r\n\r\n        appendSuccess = true;\r\n\r\n      }\r\n\r\n    }\r\n\r\n    didAppend = true;\r\n\r\n    initMsg();\r\n\r\n    // sm2._wD(sm + ': Trying to load ' + smURL + (!overHTTP && sm2.altURL ? ' (alternate URL)' : ''), 1);\r\n\r\n    return true;\r\n\r\n  };\r\n\r\n  initMovie = function() {\r\n\r\n    if (sm2.html5Only) {\r\n      createMovie();\r\n      return false;\r\n    }\r\n\r\n    // attempt to get, or create, movie (may already exist)\r\n    if (flash) {\r\n      return false;\r\n    }\r\n\r\n    if (!sm2.url) {\r\n\r\n      /**\r\n       * Something isn't right - we've reached init, but the soundManager url property has not been set.\r\n       * User has not called setup({url: ...}), or has not set soundManager.url (legacy use case) directly before init time.\r\n       * Notify and exit. If user calls setup() with a url: property, init will be restarted as in the deferred loading case.\r\n       */\r\n\r\n       _wDS('noURL');\r\n       return false;\r\n\r\n    }\r\n\r\n    // inline markup case\r\n    flash = sm2.getMovie(sm2.id);\r\n\r\n    if (!flash) {\r\n\r\n      if (!oRemoved) {\r\n\r\n        // try to create\r\n        createMovie(sm2.id, sm2.url);\r\n\r\n      } else {\r\n\r\n        // try to re-append removed movie after reboot()\r\n        if (!isIE) {\r\n          sm2.oMC.appendChild(oRemoved);\r\n        } else {\r\n          sm2.oMC.innerHTML = oRemovedHTML;\r\n        }\r\n\r\n        oRemoved = null;\r\n        didAppend = true;\r\n\r\n      }\r\n\r\n      flash = sm2.getMovie(sm2.id);\r\n\r\n    }\r\n\r\n    if (typeof sm2.oninitmovie === 'function') {\r\n      setTimeout(sm2.oninitmovie, 1);\r\n    }\r\n\r\n    // <d>\r\n    flushMessages();\r\n    // </d>\r\n\r\n    return true;\r\n\r\n  };\r\n\r\n  delayWaitForEI = function() {\r\n\r\n    setTimeout(waitForEI, 1000);\r\n\r\n  };\r\n\r\n  rebootIntoHTML5 = function() {\r\n\r\n    // special case: try for a reboot with preferFlash: false, if 100% HTML5 mode is possible and useFlashBlock is not enabled.\r\n\r\n    window.setTimeout(function() {\r\n\r\n      complain(smc + 'useFlashBlock is false, 100% HTML5 mode is possible. Rebooting with preferFlash: false...');\r\n\r\n      sm2.setup({\r\n        preferFlash: false\r\n      }).reboot();\r\n\r\n      // if for some reason you want to detect this case, use an ontimeout() callback and look for html5Only and didFlashBlock == true.\r\n      sm2.didFlashBlock = true;\r\n\r\n      sm2.beginDelayedInit();\r\n\r\n    }, 1);\r\n\r\n  };\r\n\r\n  waitForEI = function() {\r\n\r\n    var p,\r\n        loadIncomplete = false;\r\n\r\n    if (!sm2.url) {\r\n      // No SWF url to load (noURL case) - exit for now. Will be retried when url is set.\r\n      return false;\r\n    }\r\n\r\n    if (waitingForEI) {\r\n      return false;\r\n    }\r\n\r\n    waitingForEI = true;\r\n    event.remove(window, 'load', delayWaitForEI);\r\n\r\n    if (hasFlash && tryInitOnFocus && !isFocused) {\r\n      // Safari won't load flash in background tabs, only when focused.\r\n      _wDS('waitFocus');\r\n      return false;\r\n    }\r\n\r\n    if (!didInit) {\r\n      p = sm2.getMoviePercent();\r\n      if (p > 0 && p < 100) {\r\n        loadIncomplete = true;\r\n      }\r\n    }\r\n\r\n    setTimeout(function() {\r\n\r\n      p = sm2.getMoviePercent();\r\n\r\n      if (loadIncomplete) {\r\n        // special case: if movie *partially* loaded, retry until it's 100% before assuming failure.\r\n        waitingForEI = false;\r\n        sm2._wD(str('waitSWF'));\r\n        window.setTimeout(delayWaitForEI, 1);\r\n        return false;\r\n      }\r\n\r\n      // <d>\r\n      if (!didInit) {\r\n\r\n        sm2._wD(sm + ': No Flash response within expected time. Likely causes: ' + (p === 0 ? 'SWF load failed, ' : '') + 'Flash blocked or JS-Flash security error.' + (sm2.debugFlash ? ' ' + str('checkSWF') : ''), 2);\r\n\r\n        if (!overHTTP && p) {\r\n\r\n          _wDS('localFail', 2);\r\n\r\n          if (!sm2.debugFlash) {\r\n            _wDS('tryDebug', 2);\r\n          }\r\n\r\n        }\r\n\r\n        if (p === 0) {\r\n\r\n          // if 0 (not null), probably a 404.\r\n          sm2._wD(str('swf404', sm2.url), 1);\r\n\r\n        }\r\n\r\n        debugTS('flashtojs', false, ': Timed out' + (overHTTP ? ' (Check flash security or flash blockers)':' (No plugin/missing SWF?)'));\r\n\r\n      }\r\n      // </d>\r\n\r\n      // give up / time-out, depending\r\n\r\n      if (!didInit && okToDisable) {\r\n\r\n        if (p === null) {\r\n\r\n          // SWF failed to report load progress. Possibly blocked.\r\n\r\n          if (sm2.useFlashBlock || sm2.flashLoadTimeout === 0) {\r\n\r\n            if (sm2.useFlashBlock) {\r\n\r\n              flashBlockHandler();\r\n\r\n            }\r\n\r\n            _wDS('waitForever');\r\n\r\n          } else {\r\n\r\n            // no custom flash block handling, but SWF has timed out. Will recover if user unblocks / allows SWF load.\r\n\r\n            if (!sm2.useFlashBlock && canIgnoreFlash) {\r\n\r\n              rebootIntoHTML5();\r\n\r\n            } else {\r\n\r\n              _wDS('waitForever');\r\n\r\n              // fire any regular registered ontimeout() listeners.\r\n              processOnEvents({\r\n                type: 'ontimeout',\r\n                ignoreInit: true,\r\n                error: {\r\n                  type: 'INIT_FLASHBLOCK'\r\n                }\r\n              });\r\n\r\n            }\r\n\r\n          }\r\n\r\n        } else {\r\n\r\n          // SWF loaded? Shouldn't be a blocking issue, then.\r\n\r\n          if (sm2.flashLoadTimeout === 0) {\r\n\r\n            _wDS('waitForever');\r\n\r\n          } else {\r\n\r\n            if (!sm2.useFlashBlock && canIgnoreFlash) {\r\n\r\n              rebootIntoHTML5();\r\n\r\n            } else {\r\n\r\n              failSafely(true);\r\n\r\n            }\r\n\r\n          }\r\n\r\n        }\r\n\r\n      }\r\n\r\n    }, sm2.flashLoadTimeout);\r\n\r\n  };\r\n\r\n  handleFocus = function() {\r\n\r\n    function cleanup() {\r\n      event.remove(window, 'focus', handleFocus);\r\n    }\r\n\r\n    if (isFocused || !tryInitOnFocus) {\r\n      // already focused, or not special Safari background tab case\r\n      cleanup();\r\n      return true;\r\n    }\r\n\r\n    okToDisable = true;\r\n    isFocused = true;\r\n    _wDS('gotFocus');\r\n\r\n    // allow init to restart\r\n    waitingForEI = false;\r\n\r\n    // kick off ExternalInterface timeout, now that the SWF has started\r\n    delayWaitForEI();\r\n\r\n    cleanup();\r\n    return true;\r\n\r\n  };\r\n\r\n  flushMessages = function() {\r\n\r\n    // <d>\r\n\r\n    // SM2 pre-init debug messages\r\n    if (messages.length) {\r\n      sm2._wD('SoundManager 2: ' + messages.join(' '), 1);\r\n      messages = [];\r\n    }\r\n\r\n    // </d>\r\n\r\n  };\r\n\r\n  showSupport = function() {\r\n\r\n    // <d>\r\n\r\n    flushMessages();\r\n\r\n    var item, tests = [];\r\n\r\n    if (sm2.useHTML5Audio && sm2.hasHTML5) {\r\n      for (item in sm2.audioFormats) {\r\n        if (sm2.audioFormats.hasOwnProperty(item)) {\r\n          tests.push(item + ' = ' + sm2.html5[item] + (!sm2.html5[item] && needsFlash && sm2.flash[item] ? ' (using flash)' : (sm2.preferFlash && sm2.flash[item] && needsFlash ? ' (preferring flash)' : (!sm2.html5[item] ? ' (' + (sm2.audioFormats[item].required ? 'required, ' : '') + 'and no flash support)' : ''))));\r\n        }\r\n      }\r\n      sm2._wD('SoundManager 2 HTML5 support: ' + tests.join(', '), 1);\r\n    }\r\n\r\n    // </d>\r\n\r\n  };\r\n\r\n  initComplete = function(bNoDisable) {\r\n\r\n    if (didInit) {\r\n      return false;\r\n    }\r\n\r\n    if (sm2.html5Only) {\r\n      // all good.\r\n      _wDS('sm2Loaded', 1);\r\n      didInit = true;\r\n      initUserOnload();\r\n      debugTS('onload', true);\r\n      return true;\r\n    }\r\n\r\n    var wasTimeout = (sm2.useFlashBlock && sm2.flashLoadTimeout && !sm2.getMoviePercent()),\r\n        result = true,\r\n        error;\r\n\r\n    if (!wasTimeout) {\r\n      didInit = true;\r\n    }\r\n\r\n    error = {\r\n      type: (!hasFlash && needsFlash ? 'NO_FLASH' : 'INIT_TIMEOUT')\r\n    };\r\n\r\n    sm2._wD('SoundManager 2 ' + (disabled ? 'failed to load' : 'loaded') + ' (' + (disabled ? 'Flash security/load error' : 'OK') + ') ' + String.fromCharCode(disabled ? 10006 : 10003), disabled ? 2: 1);\r\n\r\n    if (disabled || bNoDisable) {\r\n\r\n      if (sm2.useFlashBlock && sm2.oMC) {\r\n        sm2.oMC.className = getSWFCSS() + ' ' + (sm2.getMoviePercent() === null ? swfCSS.swfTimedout : swfCSS.swfError);\r\n      }\r\n\r\n      processOnEvents({\r\n        type: 'ontimeout',\r\n        error: error,\r\n        ignoreInit: true\r\n      });\r\n\r\n      debugTS('onload', false);\r\n      catchError(error);\r\n\r\n      result = false;\r\n\r\n    } else {\r\n\r\n      debugTS('onload', true);\r\n\r\n    }\r\n\r\n    if (!disabled) {\r\n\r\n      if (sm2.waitForWindowLoad && !windowLoaded) {\r\n\r\n        _wDS('waitOnload');\r\n        event.add(window, 'load', initUserOnload);\r\n\r\n      } else {\r\n\r\n        // <d>\r\n        if (sm2.waitForWindowLoad && windowLoaded) {\r\n          _wDS('docLoaded');\r\n        }\r\n        // </d>\r\n\r\n        initUserOnload();\r\n\r\n      }\r\n\r\n    }\r\n\r\n    return result;\r\n\r\n  };\r\n\r\n  /**\r\n   * apply top-level setupOptions object as local properties, eg., this.setupOptions.flashVersion -> this.flashVersion (soundManager.flashVersion)\r\n   * this maintains backward compatibility, and allows properties to be defined separately for use by soundManager.setup().\r\n   */\r\n\r\n  setProperties = function() {\r\n\r\n    var i,\r\n        o = sm2.setupOptions;\r\n\r\n    for (i in o) {\r\n\r\n      if (o.hasOwnProperty(i)) {\r\n\r\n        // assign local property if not already defined\r\n\r\n        if (sm2[i] === _undefined) {\r\n\r\n          sm2[i] = o[i];\r\n\r\n        } else if (sm2[i] !== o[i]) {\r\n\r\n          // legacy support: write manually-assigned property (eg., soundManager.url) back to setupOptions to keep things in sync\r\n          sm2.setupOptions[i] = sm2[i];\r\n\r\n        }\r\n\r\n      }\r\n\r\n    }\r\n\r\n  };\r\n\r\n\r\n  init = function() {\r\n\r\n    // called after onload()\r\n\r\n    if (didInit) {\r\n      _wDS('didInit');\r\n      return false;\r\n    }\r\n\r\n    function cleanup() {\r\n      event.remove(window, 'load', sm2.beginDelayedInit);\r\n    }\r\n\r\n    if (sm2.html5Only) {\r\n\r\n      if (!didInit) {\r\n        // we don't need no steenking flash!\r\n        cleanup();\r\n        sm2.enabled = true;\r\n        initComplete();\r\n      }\r\n\r\n      return true;\r\n\r\n    }\r\n\r\n    // flash path\r\n    initMovie();\r\n\r\n    try {\r\n\r\n      // attempt to talk to Flash\r\n      flash._externalInterfaceTest(false);\r\n\r\n      /**\r\n       * Apply user-specified polling interval, OR, if \"high performance\" set, faster vs. default polling\r\n       * (determines frequency of whileloading/whileplaying callbacks, effectively driving UI framerates)\r\n       */\r\n      setPolling(true, (sm2.flashPollingInterval || (sm2.useHighPerformance ? 10 : 50)));\r\n\r\n      if (!sm2.debugMode) {\r\n        // stop the SWF from making debug output calls to JS\r\n        flash._disableDebug();\r\n      }\r\n\r\n      sm2.enabled = true;\r\n      debugTS('jstoflash', true);\r\n\r\n      if (!sm2.html5Only) {\r\n        // prevent browser from showing cached page state (or rather, restoring \"suspended\" page state) via back button, because flash may be dead\r\n        // http://www.webkit.org/blog/516/webkit-page-cache-ii-the-unload-event/\r\n        event.add(window, 'unload', doNothing);\r\n      }\r\n\r\n    } catch(e) {\r\n\r\n      sm2._wD('js/flash exception: ' + e.toString());\r\n\r\n      debugTS('jstoflash', false);\r\n\r\n      catchError({\r\n        type: 'JS_TO_FLASH_EXCEPTION',\r\n        fatal: true\r\n      });\r\n\r\n      // don't disable, for reboot()\r\n      failSafely(true);\r\n\r\n      initComplete();\r\n\r\n      return false;\r\n\r\n    }\r\n\r\n    initComplete();\r\n\r\n    // disconnect events\r\n    cleanup();\r\n\r\n    return true;\r\n\r\n  };\r\n\r\n  domContentLoaded = function() {\r\n\r\n    if (didDCLoaded) {\r\n      return false;\r\n    }\r\n\r\n    didDCLoaded = true;\r\n\r\n    // assign top-level soundManager properties eg. soundManager.url\r\n    setProperties();\r\n\r\n    initDebug();\r\n\r\n    if (!hasFlash && sm2.hasHTML5) {\r\n\r\n      sm2._wD('SoundManager 2: No Flash detected' + (!sm2.useHTML5Audio ? ', enabling HTML5.' : '. Trying HTML5-only mode.'), 1);\r\n\r\n      sm2.setup({\r\n        'useHTML5Audio': true,\r\n        // make sure we aren't preferring flash, either\r\n        // TODO: preferFlash should not matter if flash is not installed. Currently, stuff breaks without the below tweak.\r\n        'preferFlash': false\r\n      });\r\n\r\n    }\r\n\r\n    testHTML5();\r\n\r\n    if (!hasFlash && needsFlash) {\r\n\r\n      messages.push(strings.needFlash);\r\n\r\n      // TODO: Fatal here vs. timeout approach, etc.\r\n      // hack: fail sooner.\r\n      sm2.setup({\r\n        'flashLoadTimeout': 1\r\n      });\r\n\r\n    }\r\n\r\n    if (doc.removeEventListener) {\r\n      doc.removeEventListener('DOMContentLoaded', domContentLoaded, false);\r\n    }\r\n\r\n    initMovie();\r\n\r\n    return true;\r\n\r\n  };\r\n\r\n  domContentLoadedIE = function() {\r\n\r\n    if (doc.readyState === 'complete') {\r\n      domContentLoaded();\r\n      doc.detachEvent('onreadystatechange', domContentLoadedIE);\r\n    }\r\n\r\n    return true;\r\n\r\n  };\r\n\r\n  winOnLoad = function() {\r\n\r\n    // catch edge case of initComplete() firing after window.load()\r\n    windowLoaded = true;\r\n\r\n    // catch case where DOMContentLoaded has been sent, but we're still in doc.readyState = 'interactive'\r\n    domContentLoaded();\r\n\r\n    event.remove(window, 'load', winOnLoad);\r\n\r\n  };\r\n\r\n  // sniff up-front\r\n  detectFlash();\r\n\r\n  // focus and window load, init (primarily flash-driven)\r\n  event.add(window, 'focus', handleFocus);\r\n  event.add(window, 'load', delayWaitForEI);\r\n  event.add(window, 'load', winOnLoad);\r\n\r\n  if (doc.addEventListener) {\r\n\r\n    doc.addEventListener('DOMContentLoaded', domContentLoaded, false);\r\n\r\n  } else if (doc.attachEvent) {\r\n\r\n    doc.attachEvent('onreadystatechange', domContentLoadedIE);\r\n\r\n  } else {\r\n\r\n    // no add/attachevent support - safe to assume no JS -> Flash either\r\n    debugTS('onload', false);\r\n    catchError({\r\n      type: 'NO_DOM2_EVENTS',\r\n      fatal: true\r\n    });\r\n\r\n  }\r\n\r\n} // SoundManager()\r\n\r\n// SM2_DEFER details: http://www.schillmania.com/projects/soundmanager2/doc/getstarted/#lazy-loading\r\n\r\nif (window.SM2_DEFER === _undefined || !SM2_DEFER) {\r\n  soundManager = new SoundManager();\r\n}\r\n\r\n/**\r\n * SoundManager public interfaces\r\n * ------------------------------\r\n */\r\n\r\nif (typeof module === 'object' && module && typeof module.exports === 'object') {\r\n\r\n  /**\r\n   * commonJS module\r\n   */\r\n\r\n  module.exports.SoundManager = SoundManager;\r\n  module.exports.soundManager = soundManager;\r\n\r\n} else if (typeof define === 'function' && define.amd) {\r\n\r\n  /**\r\n   * AMD - requireJS\r\n   * basic usage:\r\n   * require([\"/path/to/soundmanager2.js\"], function(SoundManager) {\r\n   *   SoundManager.getInstance().setup({\r\n   *     url: '/swf/',\r\n   *     onready: function() { ... }\r\n   *   })\r\n   * });\r\n   *\r\n   * SM2_DEFER usage:\r\n   * window.SM2_DEFER = true;\r\n   * require([\"/path/to/soundmanager2.js\"], function(SoundManager) {\r\n   *   SoundManager.getInstance(function() {\r\n   *     var soundManager = new SoundManager.constructor();\r\n   *     soundManager.setup({\r\n   *       url: '/swf/',\r\n   *       ...\r\n   *     });\r\n   *     ...\r\n   *     soundManager.beginDelayedInit();\r\n   *     return soundManager;\r\n   *   })\r\n   * }); \r\n   */\r\n\r\n  define(function() {\r\n    /**\r\n     * Retrieve the global instance of SoundManager.\r\n     * If a global instance does not exist it can be created using a callback.\r\n     *\r\n     * @param {Function} smBuilder Optional: Callback used to create a new SoundManager instance\r\n     * @return {SoundManager} The global SoundManager instance\r\n     */\r\n    function getInstance(smBuilder) {\r\n      if (!window.soundManager && smBuilder instanceof Function) {\r\n        var instance = smBuilder(SoundManager);\r\n        if (instance instanceof SoundManager) {\r\n          window.soundManager = instance;\r\n        }\r\n      }\r\n      return window.soundManager;\r\n    }\r\n    return {\r\n      constructor: SoundManager,\r\n      getInstance: getInstance\r\n    }\r\n  });\r\n\r\n}\r\n\r\n// standard browser case\r\n\r\n// constructor\r\nwindow.SoundManager = SoundManager;\r\n\r\n/**\r\n * note: SM2 requires a window global due to Flash, which makes calls to window.soundManager.\r\n * Flash may not always be needed, but this is not known until async init and SM2 may even \"reboot\" into Flash mode.\r\n */\r\n\r\n// public API, flash callbacks etc.\r\nwindow.soundManager = soundManager;\r\n\r\n}(window));\r\n","/*!\n * tiny-cookie - A tiny cookie manipulation plugin\n * https://github.com/Alex1990/tiny-cookie\n * Under the MIT license | (c) Alex Chao\n */\n\n!(function(root, factory) {\n\n  // Uses CommonJS, AMD or browser global to create a jQuery plugin.\n  // See: https://github.com/umdjs/umd\n  if (typeof define === 'function' && define.amd) {\n    // Expose this plugin as an AMD module. Register an anonymous module.\n    define(factory);\n  } else if (typeof exports === 'object') {\n    // Node/CommonJS module\n    module.exports = factory();\n  } else {\n    // Browser globals \n    root.Cookie = factory();\n  }\n\n}(this, function() {\n\n  'use strict';\n\n  // The public function which can get/set/remove cookie.\n  function Cookie(key, value, opts) {\n    if (value === void 0) {\n      return Cookie.get(key);\n    } else if (value === null) {\n      Cookie.remove(key);\n    } else {\n      Cookie.set(key, value, opts);\n    }\n  }\n\n  // Check if the cookie is enabled.\n  Cookie.enabled = function() {\n    var key = '__test_key';\n    var enabled;\n\n    document.cookie = key + '=1';\n    enabled = !!document.cookie;\n\n    if (enabled) Cookie.remove(key);\n\n    return enabled;\n  };\n\n  // Get the cookie value by the key.\n  Cookie.get = function(key, raw) {\n    if (typeof key !== 'string' || !key) return null;\n\n    key = '(?:^|; )' + escapeRe(key) + '(?:=([^;]*?))?(?:;|$)';\n\n    var reKey = new RegExp(key);\n    var res = reKey.exec(document.cookie);\n\n    return res !== null ? (raw ? res[1] : decodeURIComponent(res[1])) : null;\n  };\n\n  // Get the cookie's value without decoding.\n  Cookie.getRaw = function(key) {\n    return Cookie.get(key, true);\n  };\n\n  // Set a cookie.\n  Cookie.set = function(key, value, raw, opts) {\n    if (raw !== true) {\n      opts = raw;\n      raw = false;\n    }\n    opts = opts ? convert(opts) : convert({});\n    var cookie = key + '=' + (raw ? value : encodeURIComponent(value)) + opts;\n    document.cookie = cookie;\n  };\n\n  // Set a cookie without encoding the value.\n  Cookie.setRaw = function(key, value, opts) {\n    Cookie.set(key, value, true, opts);\n  };\n\n  // Remove a cookie by the specified key.\n  Cookie.remove = function(key) {\n    Cookie.set(key, 'a', { expires: new Date() });\n  };\n\n  // Helper function\n  // ---------------\n\n  // Escape special characters.\n  function escapeRe(str) {\n    return str.replace(/[.*+?^$|[\\](){}\\\\-]/g, '\\\\$&');\n  }\n\n  // Convert an object to a cookie option string.\n  function convert(opts) {\n    var res = '';\n\n    for (var p in opts) {\n      if (opts.hasOwnProperty(p)) {\n\n        if (p === 'expires') {\n          var expires = opts[p];\n          if (typeof expires !== 'object') {\n            expires += typeof expires === 'number' ? 'D' : '';\n            expires = computeExpires(expires);\n          }\n          opts[p] = expires.toUTCString();\n        }\n\n        res += ';' + p + '=' + opts[p];\n      }\n    }\n\n    if (!opts.hasOwnProperty('path')) {\n      res += ';path=/';\n    }\n\n    return res;\n  }\n\n  // Return a future date by the given string.\n  function computeExpires(str) {\n    var expires = new Date();\n    var lastCh = str.charAt(str.length - 1);\n    var value = parseInt(str, 10);\n\n    switch (lastCh) {\n      case 'Y': expires.setFullYear(expires.getFullYear() + value); break;\n      case 'M': expires.setMonth(expires.getMonth() + value); break;\n      case 'D': expires.setDate(expires.getDate() + value); break;\n      case 'h': expires.setHours(expires.getHours() + value); break;\n      case 'm': expires.setMinutes(expires.getMinutes() + value); break;\n      case 's': expires.setSeconds(expires.getSeconds() + value); break;\n      default: expires = new Date(str);\n    }\n\n    return expires;\n  }\n\n  return Cookie;\n\n}));\n","/*global module:false */\n\n/*\n *  Events mixin from Backbone \n *\n *  Backbone.js 1.0.0\n *\n *  (c) 2010-2013 Jeremy Ashkenas, DocumentCloud Inc.\n *  Backbone may be freely distributed under the MIT license.\n *  For all details and documentation:\n *  http:*backbonejs.org\n *\n *  A module that can be mixed in to *any object* in order to provide it with\n *  custom events. You may bind with `on` or remove with `off` callback functions\n *  to an event; trigger`-ing an event fires all callbacks in succession.\n *\n *  var object = {};\n *  _.extend(object, Backbone.Events);\n *  object.on('expand', function(){ alert('expanded'); });\n *  object.trigger('expand');\n */\n\nvar _ = (typeof window !== \"undefined\" ? window['_'] : typeof global !== \"undefined\" ? global['_'] : null);\n\nvar slice = Array.prototype.slice;\n\nvar Events = {\n\n  // Bind an event to a `callback` function. Passing `\"all\"` will bind\n  // the callback to all events fired.\n  on: function(name, callback, context) {\n    if (!eventsApi(this, 'on', name, [callback, context]) || !callback) { return this; }\n    if (!this._events) { this._events = {}; }\n    var events = this._events[name] || (this._events[name] = []);\n    events.push({callback: callback, context: context, ctx: context || this});\n    return this;\n  },\n\n  // Bind an event to only be triggered a single time. After the first time\n  // the callback is invoked, it will be removed.\n  once: function(name, callback, context) {\n    if (!eventsApi(this, 'once', name, [callback, context]) || !callback) { return this; }\n    var self = this;\n    var once = _.once(function() {\n      self.off(name, once);\n      callback.apply(this, arguments);\n    });\n    once._callback = callback;\n    return this.on(name, once, context);\n  },\n\n  // Remove one or many callbacks. If `context` is null, removes all\n  // callbacks with that function. If `callback` is null, removes all\n  // callbacks for the event. If `name` is null, removes all bound\n  // callbacks for all events.\n  off: function(name, callback, context) {\n    var retain, ev, events, names, i, l, j, k;\n    if (!this._events || !eventsApi(this, 'off', name, [callback, context])) { return this; }\n    if (!name && !callback && !context) {\n      this._events = {};\n      return this;\n    }\n\n    names = name ? [name] : _.keys(this._events);\n    for (i = 0, l = names.length; i < l; i++) {\n      name = names[i];\n      if (events = this._events[name]) {\n        this._events[name] = retain = [];\n        if (callback || context) {\n          for (j = 0, k = events.length; j < k; j++) {\n            ev = events[j];\n            if ((callback && callback !== ev.callback && callback !== ev.callback._callback) ||\n                (context && context !== ev.context)) {\n              retain.push(ev);\n            }\n          }\n        }\n        if (!retain.length) { delete this._events[name]; }\n      }\n    }\n\n    return this;\n  },\n\n  // Trigger one or many events, firing all bound callbacks. Callbacks are\n  // passed the same arguments as `trigger` is, apart from the event name\n  // (unless you're listening on `\"all\"`, which will cause your callback to\n  // receive the true name of the event as the first argument).\n  trigger: function(name) {\n    if (!this._events) { return this; }\n    var args = slice.call(arguments, 1);\n    if (!eventsApi(this, 'trigger', name, args)) { return this; }\n    var events = this._events[name];\n    var allEvents = this._events.all;\n    if (events) { triggerEvents(events, args); }\n    if (allEvents) { triggerEvents(allEvents, arguments); }\n    return this;\n  },\n\n  // Tell this object to stop listening to either specific events ... or\n  // to every object it's currently listening to.\n  stopListening: function(obj, name, callback) {\n    var listeners = this._listeners;\n    if (!listeners) { return this; }\n    var deleteListener = !name && !callback;\n    if (typeof name === 'object') { callback = this; }\n    if (obj) { (listeners = {})[obj._listenerId] = obj; }\n    /*jshint forin:false */\n    for (var id in listeners) {\n      listeners[id].off(name, callback, this);\n      if (deleteListener) { delete this._listeners[id]; }\n    }\n    return this;\n  }\n\n};\n\n// Regular expression used to split event strings.\nvar eventSplitter = /\\s+/;\n\n// Implement fancy features of the Events API such as multiple event\n// names `\"change blur\"` and jQuery-style event maps `{change: action}`\n// in terms of the existing API.\nvar eventsApi = function(obj, action, name, rest) {\n  if (!name) { return true; }\n\n  // Handle event maps.\n  if (typeof name === 'object') {\n    /*jshint forin:false */\n    for (var key in name) {\n      obj[action].apply(obj, [key, name[key]].concat(rest));\n    }\n    return false;\n  }\n\n  // Handle space separated event names.\n  if (eventSplitter.test(name)) {\n    var names = name.split(eventSplitter);\n    for (var i = 0, l = names.length; i < l; i++) {\n      obj[action].apply(obj, [names[i]].concat(rest));\n    }\n    return false;\n  }\n\n  return true;\n};\n\n// A difficult-to-believe, but optimized internal dispatch function for\n// triggering events. Tries to keep the usual cases speedy (most internal\n// Backbone events have 3 arguments).\nvar triggerEvents = function(events, args) {\n  var ev, i = -1, l = events.length, a1 = args[0], a2 = args[1], a3 = args[2];\n  switch (args.length) {\n    case 0: while (++i < l) { (ev = events[i]).callback.call(ev.ctx); } return;\n    case 1: while (++i < l) { (ev = events[i]).callback.call(ev.ctx, a1); } return;\n    case 2: while (++i < l) { (ev = events[i]).callback.call(ev.ctx, a1, a2); } return;\n    case 3: while (++i < l) { (ev = events[i]).callback.call(ev.ctx, a1, a2, a3); } return;\n    default: while (++i < l) { (ev = events[i]).callback.apply(ev.ctx, args); }\n  }\n};\n\nvar listenMethods = {listenTo: 'on', listenToOnce: 'once'};\n\n// Inversion-of-control versions of `on` and `once`. Tell *this* object to\n// listen to an event in another object ... keeping track of what it's\n// listening to.\n_.each(listenMethods, function(implementation, method) {\n  Events[method] = function(obj, name, callback) {\n    var listeners = this._listeners || (this._listeners = {});\n    var id = obj._listenerId || (obj._listenerId = _.uniqueId('l'));\n    listeners[id] = obj;\n    if (typeof name === 'object') { callback = this; }\n    obj[implementation](name, callback, this);\n    return this;\n  };\n});\n\nmodule.exports = Events;\n","/*global console:true, module:false, feedLogger:false */\n\n/**\n * Console wrapper.\n *\n * Originally from \n *\n *   https://github.com/cpatik/console.log-wrapper\n *\n * by Craig Patik\n *\n * MIT License ----\n *\n * Copyright (c) 2012 Craig Patik\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the\n * \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish,\n * distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to\n * the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n * CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n *\n **/\n\n\n// Tell IE9 to use its built-in console\nif (Function.prototype.bind && (typeof console === 'object' || typeof console === 'function') && typeof console.log === 'object') {\n  var fields = ['log','info','warn','error','assert','dir','clear','profile','profileEnd'];\n  for (var x = 0; x < fields.length; x++) {\n    var method = fields[x];\n\n    console[method] = Function.prototype.bind.call(console, console[method]);\n  }\n}\n\n// log() -- The complete, cross-browser (we don't judge!) console.log wrapper for his or her logging pleasure\nvar log = function () {\n  log.history = log.history || [];  // store logs to an array for reference\n  log.history.push(arguments);\n  // Modern browsers\n  if (typeof console !== 'undefined' && typeof console.log === 'function') { // Opera 11\n    if (window.opera) {\n      var i = 0;\n      while (i < arguments.length) {\n        console.log('Item ' + (i+1) + ': ' + arguments[i]);\n        i++;\n      }\n    }\n\n    // All other modern browsers\n    else if ((Array.prototype.slice.call(arguments)).length === 1 && typeof Array.prototype.slice.call(arguments)[0] === 'string') {\n      console.log( (Array.prototype.slice.call(arguments)).toString() );\n    }\n    else {\n      console.log.apply( console, Array.prototype.slice.call(arguments) );\n    }\n\n  }\n\n  // IE8\n  else if (!Function.prototype.bind && typeof console !== 'undefined' && typeof console.log === 'object') {\n    Function.prototype.call.call(console.log, console, Array.prototype.slice.call(arguments));\n  }\n\n  // IE7 and lower, and other old browsers\n  else {\n    // Inject Firebug lite\n    if (!document.getElementById('firebug-lite')) {\n      // Include the script\n      var script = document.createElement('script');\n      script.type = 'text/javascript';\n      script.id = 'firebug-lite';\n      // If you run the script locally, point to /path/to/firebug-lite/build/firebug-lite.js\n      script.src = 'https://getfirebug.com/firebug-lite.js';\n      // If you want to expand the console window by default, uncomment this line\n      //document.getElementsByTagName('HTML')[0].setAttribute('debug','true');\n      document.getElementsByTagName('HEAD')[0].appendChild(script);\n      setTimeout(function () { log( Array.prototype.slice.call(arguments) ); }, 2000);\n    }\n    else {\n      // FBL was included but it hasn't finished loading yet, so try again momentarily\n      setTimeout(function () { log( Array.prototype.slice.call(arguments) ); }, 500);\n    }\n  }\n};\n\n// allow external code to swap in their own logger\nif (typeof feedLogger === 'function') {\n  log = feedLogger;\n}\n\n\nmodule.exports = log;\n\n\n","/*global module:false */\n/*jshint camelcase:false */\n\n/*\n *  Feed Media Player View\n *\n *  This class will respond to events from an instance of Feed.Player\n *  and pass on user requests to the instance.\n *\n *  Create this with:\n *\n *    player = new Feed.Player(token, secret);\n *    playerView = new Feed.PlayerView(id, player);\n *\n *  Where 'id' is the ID of the DOM element containing the player.\n *  The player should have the following elements in it:\n *\n *  <div id='player-view'>\n *    <div>\n *      <div class='position'><div class='progress'></div></div> \n *      <span class='status'>\n *        <span class='track'>track</span> by <span class='artist'>artist</span> on <span class='release'>release</span>\n *      </span>\n *    </div>\n *    <div class='elapsed'></div>\n *    <div class='duration'></div>\n *    <button class='play-button button-enabled'>Play</button>\n *\n *    <button class='pause-button button-disabled'>Pause</button>\n *    <button class='skip-button button-disabled'>Skip</button>\n *    <button class='like-button button-disabled'>Like</button>\n *    <button class='dislike-button button-disabled'>Dislike</button>\n *  </div>\n *\n *  The buttons should all be 'button-disabled' except for the play\n *  button. As the player changes state, it will change the\n *  'button-disabled' classes to 'button-enabled'.\n *\n *  Note that the 'play-button' is visible before any playback starts,\n *  and while playback is paused. If you want a button that is only visible\n *  before any playback has started, then create a 'start-button'. If you\n *  want a button that is only visible when playback is paused, then\n *  create a 'resume-button'.\n *\n *  The 'like' button has an additional 'liked' class that is added to\n *  it when the current song has been liked. Likewise, the 'dislike' button\n *  has a 'disliked' class added to it when the current song has been\n *  disliked.\n *\n *  The 'status' section will display the current song and the 'position'\n *  section will display the elapsed time played and duration of the\n *  song while it is playing. Additionally, error messages (like 'out of\n *  music' or 'can't skip') will be displayed for a few seconds in the\n *  status section as well.\n *\n *  The rendering of the status can be changed by overriding\n *  the renderStatus(statusText) method, and the rendering of the position\n *  can be changed by overriding the renderPosition(positionInMillis, durationInMillis)\n *  methods. If you just want to override how the title of a song is\n *  rendered, then the formatPlay(play) method should be overridden.\n *\n *  The top level player element will have one of four classes set at\n *  all times: 'state-playing', 'state-idle', 'state-paused', or 'state-suspended'\n *\n */\n\nvar _ = (typeof window !== \"undefined\" ? window['_'] : typeof global !== \"undefined\" ? global['_'] : null);\nvar $ = (typeof window !== \"undefined\" ? window['jQuery'] : typeof global !== \"undefined\" ? global['jQuery'] : null);\n\nvar PlayerView = function(id, player) {\n  this.id = id;\n  this.alertId = null;\n  this.durationId = null;\n  this.startedPlayback = false;\n\n  this.$el = $('#' + id);\n  this.player = player;\n\n  this.player.on('placement', this._onPlacement, this);\n  this.player.on('play-started', this._onPlayStarted, this);\n  this.player.on('play-paused', this._onPlayPaused, this);\n  this.player.on('play-resumed', this._onPlayResumed, this);\n  this.player.on('play-completed', this._onPlayCompleted, this);\n  this.player.on('play-liked', this._onPlayLiked, this);\n  this.player.on('play-unliked', this._onPlayUnliked, this);\n  this.player.on('play-disliked', this._onPlayDisliked, this);\n  this.player.on('plays-exhausted', this._onPlaysExhausted, this);\n  this.player.on('skip-denied', this._onSkipDenied, this);\n  this.player.on('suspend', this._onSuspend, this);\n\n  this._enableButtonsBasedOnState();\n  this.displayText = this.originalDisplayText = this.$('.status').html();\n  this.renderStatus();\n\n  this.$el.on('click', '.status', _.bind(this._onStatusClick, this));\n  this.$el.on('click', '.play-button, .start-button, .resume-button', _.bind(this._onPlayButtonClick, this));\n  this.$el.on('click', '.pause-button', _.bind(this._onPauseButtonClick, this));\n  this.$el.on('click', '.skip-button', _.bind(this._onSkipButtonClick, this));\n  this.$el.on('click', '.like-button', _.bind(this._onLikeButtonClick, this));\n  this.$el.on('click', '.dislike-button', _.bind(this._onDislikeButtonClick, this));\n};\n\nPlayerView.prototype._onStatusClick = function() {\n  var state = this.player.getCurrentState();\n\n  if (state === 'playing') {\n    this._onPauseButtonClick();\n\n  } else {\n    this._onPlayButtonClick();\n\n  }\n};\n\nPlayerView.prototype._onPlayButtonClick = function() {\n  this.player.play();\n};\n\nPlayerView.prototype._onPauseButtonClick = function() {\n  this.player.pause();\n};\n\nPlayerView.prototype._onSkipButtonClick = function() {\n  this.player.skip();\n};\n\nPlayerView.prototype._onLikeButtonClick = function(e) {\n  if ($(e.target).closest('.like-button').is('.liked')) {\n    this.player.unlike();\n\n  } else {\n    this.player.like();\n\n  }\n};\n\nPlayerView.prototype._onDislikeButtonClick = function() {\n  this.player.dislike();\n};\n\nPlayerView.prototype.$ = function(arg) {\n  return this.$el.find(arg);\n};\n\nPlayerView.prototype._onPlacement = function(placement) {\n  if (!this.originalDisplayText) {\n    this.originalDisplayText = this.formatPlacement(placement);\n\n    this.renderStatus(this.originalDisplayText);\n  }\n};\n\nPlayerView.prototype.formatPlacement = function(placement) {\n  return 'Tune in to <em class=\\'placement\\'>' + placement.name + '</em>';\n};\n\nPlayerView.prototype._onPlayStarted = function(play) {\n  this.startedPlayback = true;\n\n  this.renderStatus(this.formatPlay(play));\n  this._enableButtonsBasedOnState();\n  this._setLikeStatus(play.liked);\n  this._enablePositionTracker();\n};\n\nPlayerView.prototype._enablePositionTracker = function() {\n  var playerView = this;\n\n  if (!this.durationId) {\n    this.durationId = window.setInterval(function() {\n      playerView.renderPosition(playerView.player.getPosition(), playerView.player.getDuration());\n    }, 500);\n  }\n};\n\nPlayerView.prototype._setLikeStatus = function(liked) {\n  if (liked === true) {\n    // highlight the like button\n    this.$('.like-button').addClass('liked');\n    this.$('.dislike-button').removeClass('disliked');\n\n  } else if (liked === false) {\n    // highlight the dislike button\n    this.$('.like-button').removeClass('liked');\n    this.$('.dislike-button').addClass('disliked');\n\n  } else {\n    // nobody gets highlighted\n    this.$('.like-button').removeClass('liked');\n    this.$('.dislike-button').removeClass('disliked');\n\n  }\n};\n\nPlayerView.prototype._disablePositionTracker = function() {\n  if (this.durationId) {\n    window.clearInterval(this.durationId);\n    this.durationId = null;\n  }\n};\n\nPlayerView.prototype._onPlayResumed = function() {\n  this._enablePositionTracker();\n  \n  this._enableButtonsBasedOnState();\n};\n\nPlayerView.prototype._onPlayPaused = function() {\n  this._disablePositionTracker();\n\n  this._enableButtonsBasedOnState();\n};\n\nPlayerView.prototype._onPlayCompleted = function() {\n  this.renderPosition(0, 0);\n  this._enableButtonsBasedOnState();\n};\n\nPlayerView.prototype._onPlaysExhausted = function() {\n  this.renderStatus(this.originalDisplayText);\n  this.renderAlert('There is no more music to play in this station!');\n\n  this._enableButtonsBasedOnState();\n};\n\nPlayerView.prototype._onPlayLiked = function() {\n  this._setLikeStatus(true);\n};\n\nPlayerView.prototype._onPlayDisliked = function() {\n  this._setLikeStatus(false);\n};\n\nPlayerView.prototype._onPlayUnliked = function() {\n  this._setLikeStatus();\n};\n\nPlayerView.prototype._onSkipDenied = function() {\n  this.renderAlert('Sorry you\\'ve temporarily run out of skips!');\n};\n\nPlayerView.prototype.formatPlay = function(play) {\n  return '<span class=\\'track\\'>' + play.audio_file.track.title +\n     '</span> by <span class=\\'artist\\'>' + play.audio_file.artist.name +\n     '</span> on <span class=\\'release\\'>' + play.audio_file.release.title + '</span>';\n};\n\nPlayerView.prototype.renderStatus = function(displayText) {\n  if (displayText !== undefined) {\n    this.displayText = displayText;\n  }\n\n  if (!this.alertId) {\n    this.$('.status').html(this.displayText).removeClass('alert');\n  }\n};\n\nPlayerView.prototype.renderPosition = function(position, duration) {\n  this.$('.elapsed').html(formatTime(position));\n  this.$('.duration').html(formatTime(duration));\n\n  if (duration === 0) {\n    this.$('.progress').css('width', '0');\n  } else {\n    var elapsed = Math.round((position + 1000) / duration * 100);\n    elapsed = (elapsed > 100) ? 100 : elapsed;\n    this.$('.progress').css('width', elapsed + '%');\n  }\n};\n\nfunction formatTime(millis) {\n  var asSeconds = Math.floor(millis / 1000),\n      secondsPart = (asSeconds % 60),\n      minutesPart = Math.floor(asSeconds / 60);\n\n  if (secondsPart < 10) {\n    secondsPart = '0' + secondsPart;\n  }\n\n  return minutesPart + ':' + secondsPart;\n}\n\nPlayerView.prototype.renderAlert = function(alertText) {\n  if (this.alertId) {\n    window.clearTimeout(this.alertId);\n  }\n\n  this.$('.status').html(alertText).addClass('alert');\n\n  var playerView = this;\n  this.alertId = window.setTimeout(function() {\n    playerView.alertId = null;\n    playerView.renderStatus();\n  }, 3000);\n};\n\nPlayerView.prototype._onSuspend = function() {\n  this._enableButtonsBasedOnState();\n};\n\nPlayerView.prototype._enableButtonsBasedOnState = function() {\n  var state = this.player.getCurrentState(),\n      toEnable,\n      toDisable;\n\n  switch (state) {\n    case 'playing':\n      toEnable = '.pause-button, .like-button, .dislike-button';\n      toDisable = '.play-button, .start-button, .resume-button';\n\n      if (this.player.maybeCanSkip()) {\n        toEnable += ', .skip-button';\n      } else {\n        toDisable += ', .skip-button';\n      }\n      break;\n\n    case 'paused':\n      toEnable = '.play-button, .resume-button, .like-button, .dislike-button';\n      toDisable = '.pause-button, .start-button';\n\n      if (this.player.maybeCanSkip()) {\n        toEnable += ', .skip-button';\n      } else {\n        toDisable += ', .skip-button';\n      }\n      break;\n\n    case 'suspended':\n      toEnable = '';\n      toDisable = '.play-button, .resume-button, .like-button, .dislike-button, .pause-button, .start-button, .skip-button';\n\n      break;\n\n\n    /* case 'idle': */\n    default:\n      toEnable = '.play-button, .start-button';\n      toDisable = '.resume-button, .pause-button, .like-button, .dislike-button, .skip-button';\n      break;\n  }\n\n  this.$(toDisable)\n    .removeClass('button-enabled')\n    .addClass('button-disabled')\n    .attr('disabled', 'true');\n\n  if (toEnable) {\n    this.$(toEnable)\n      .removeClass('button-disabled')\n      .addClass('button-enabled')\n      .removeAttr('disabled');\n  }\n\n  this.$el\n    .removeClass('state-playing state-paused state-idle state-suspended')\n    .addClass('state-' + state);\n\n};\n\nmodule.exports = PlayerView;\n\n\n","/*global module:false */\n/*jshint camelcase:false */\n\n/*\n *  Feed Media Player\n *\n *  This class requests and plays audio files from the feed servers. It\n *  makes use of the Session class to communicate with the server. There\n *  should technically only ever be one instance of this class in a page.\n *  This class does no UI - that should be handled by Feed.PlayerView \n *  or similar.\n *\n *  Create this with:\n *    player = new Feed.Player(token, secret[, options])\n *\n *  'options' may be any option that 'Feed.Session' and 'Feed.Speaker' accept\n *\n *  Then set the optional placement and station that we're pulling\n *  from:\n *\n *    player.setPlacementId(xxx);\n *      set placement on session, which should stop any current plays\n *    player.setStationId(xxx);\n *      set station on session, which should stop any current plays\n *\n *  Then control playback with:\n *\n *    tune() - load up information about the current placement, but\n *      don't actually start playing it.\n *    play() - start playing the current placement/station or resume the current song\n *    pause() - pause playback of the current song, if any\n *    like() - tell the server we like this song\n *    unlike() - tell the server to remove the 'like' for this song\n *    dislike() - tell the server we dislike this song, and skip to the next one\n *    skip() - request to skip the current song\n *\n *  player has a current state that can be queried with 'getCurrentState()':\n *    playing - if session.hasActivePlayStarted() and we're not paused\n *    paused -  if session.hasActivePlayStarted() and we're paused\n *    idle - if !session.hasActivePlayStarted()\n *    suspended - if player.suspend() has been called (ie - the player has\n *      been popped out into a new window)\n *\n *  session events are proxied via the play object:\n *    not-in-us - user isn't located in the US and can't play music\n *    placement - information about the placement we just tuned to\n *    play-active - this play is queued up and ready for playback\n *    play-started - this play has begun playback\n *    play-completed  - this play has completed playback\n *    plays-exhausted - there are no more plays available from this placement/station combo\n *    skip-denied - the given song could not be skipped due to DMCA rules\n *  \n *  and the play object adds some new events:\n *    play-paused - the currently playing song was paused\n *    play-resumed - the currently playing song was resumed\n *    play-liked - the currently playing song was liked\n *    play-unliked - the currently playing song had it's 'like' status removed\n *    play-disliked - the currently playing song was disliked\n *    suspend - player.suspend() was called, and the player should stop playback\n *\n *  Some misc methods:\n *\n *    setMuted(muted)\n *    suspend - this returns the state of the player a an object that can be passed\n *      to the unsuspend() call.\n *    unsuspend(state, [startPlay]) - this call takes the state of a previously suspended player\n *      instance and makes this player match that one. These calls allow you to suspend\n *      the player, open up a new window, create a new player instance, and resume playback\n *      where you left off. This call should be made in place of a tune() or play() call.\n *\n */\n\nvar _ = (typeof window !== \"undefined\" ? window['_'] : typeof global !== \"undefined\" ? global['_'] : null);\nvar $ = (typeof window !== \"undefined\" ? window['jQuery'] : typeof global !== \"undefined\" ? global['jQuery'] : null);\nvar log = require('./log');\nvar getSpeaker = require('./speaker');\nvar Events = require('./events');\nvar Session = require('./session');\n\nfunction supports_html5_storage() {\n  try {\n    return 'localStorage' in window && window['localStorage'] !== null;\n  } catch (e) {\n    return false;\n  }\n}\n\nvar Player = function(token, secret, options) {\n  this.state = {\n    paused: true,\n    suspended: false\n    // activePlay\n  };\n\n  options = options || {};\n\n  this.skipPlayDelay = !!options.skipPlayDelay;\n\n  _.extend(this, Events);\n\n  var session = this.session = new Session(token, secret, options);\n  this.session.on('play-active', this._onPlayActive, this);\n  this.session.on('play-started', this._onPlayStarted, this);\n  this.session.on('play-completed', this._onPlayCompleted, this);\n  this.session.on('plays-exhausted', this._onPlaysExhausted, this);\n\n  this.session.on('all', function() {\n    // propagate all events out to everybody else\n    this.trigger.apply(this, Array.prototype.slice.call(arguments, 0));\n  }, this);\n\n  // create 'speakerInitialized' promise so we can delay things until\n  // the audio subsystem is set up.\n  var initializeSpeaker = this.initializeSpeaker = $.Deferred();\n\n  this.speaker = getSpeaker(options, function(supportedFormats) {\n    if (options.formats) {\n      var reqFormatList = options.formats.split(','),\n          suppFormatList = supportedFormats.split(','),\n          reqAndSuppFormatList = _.intersection(reqFormatList, suppFormatList),\n          reqAndSuppFormats = reqAndSuppFormatList.join(',');\n\n      if (reqAndSuppFormatList.length === 0) {\n        reqAndSuppFormats = supportedFormats;\n      }\n\n      session.setFormats(reqAndSuppFormats);\n\n    } else {\n      session.setFormats(supportedFormats);\n    }\n    initializeSpeaker.resolve();\n  });\n\n  this.setMuted(this.isMuted());\n};\n\nPlayer.prototype.setPlacementId = function(placementId) {\n  this.session.setPlacementId(placementId);\n};\n\nPlayer.prototype.setStationId = function(stationId) {\n  this.session.setStationId(stationId);\n};\n\nPlayer.prototype.setBaseUrl = function(baseUrl) {\n  this.session.setBaseUrl(baseUrl);\n};\n\nPlayer.prototype._onPlayActive = function(play) {\n  // create a new sound object\n  var options = {\n    play: _.bind(this._onSoundPlay, this, play.id),\n    pause: _.bind(this._onSoundPause, this, play.id),\n    finish:  _.bind(this._onSoundFinish, this, play.id),\n    elapse: _.bind(this._onSoundElapse, this, play.id)\n  };\n\n  if (play.startPosition) {\n    options.startPosition = play.startPosition;\n  }\n\n  var sound = this.speaker.create(play.audio_file.url, options);\n\n  this.state.activePlay = {\n    id: play.id,\n    sound: sound,\n    startReportedToServer: false, // wether we got a 'play-started' event from session\n    soundCompleted: false,        // wether the sound object told us it finished playback\n    playStarted: false,           // wether playback started on the sound object yet\n    previousPosition: 0           // last time we got an 'elapse' callback\n  };\n\n  // if we're not paused, then start it\n  if (!this.state.paused) {\n    var s = this.state.activePlay.sound;\n\n    s.play();\n  }\n};\n\nPlayer.prototype._onSoundPlay = function(playId) {\n  // sound started playing\n  if (!this.state.activePlay || (this.state.activePlay.id !== playId)) {\n    log('received sound play, but active play does not match', this.state.activePlay, playId);\n    return;\n  }\n  \n  this.state.paused = false;\n  this.state.activePlay.playStarted = true;\n\n  // on the first play, tell the server we're good to go\n  if (!this.state.activePlay.startReportedToServer) {\n    return this.session.reportPlayStarted();\n  }\n\n  // subsequent plays are considered 'resumed' events\n  this.trigger('play-resumed', this.session.getActivePlay());\n};\n\nPlayer.prototype.getActivePlay = function() {\n  return this.session.getActivePlay();\n};\n\nPlayer.prototype.hasActivePlayStarted = function() {\n  return this.session.hasActivePlayStarted();\n};\n\nPlayer.prototype.getActivePlacement = function() {\n  return this.session.getActivePlacement();\n};\n\nPlayer.prototype._onSoundPause = function(playId) {\n  // sound paused playback\n  if (!this.state.activePlay || (this.state.activePlay.id !== playId)) {\n    log('received sound pause, but active play does not match', this.state.activePlay, playId);\n    return;\n  }\n  \n  this.state.paused = true;\n\n  this.trigger('play-paused', this.session.getActivePlay());\n};\n\nPlayer.prototype._onSoundFinish = function(playId, withError) {\n  if (!this.state.activePlay || (this.state.activePlay.id !== playId)) {\n    log('received sound finish, but active play does not match', this.state.activePlay, playId);\n    return;\n  }\n\n  this.state.activePlay.soundCompleted = true;\n  if (withError) {\n    this.state.activePlay.soundCompletedWithError = true;\n  }\n\n  if (!this.state.activePlay.playStarted) {\n    // never reported this as started...  mark it as invalidated so\n    // we can advance.\n    this.session.requestInvalidate();\n\n    return;\n  }\n\n  if (!this.state.activePlay.startReportedToServer) {\n    // if the song failed before we recieved start response, wait\n    // until word from the server that we started before we say\n    // that we completed the song\n    return;\n  }\n\n  if (withError) {\n    log('song completed with error - marking as invalid');\n    this.session.requestInvalidate();\n\n  } else {\n    this.session.reportPlayCompleted();\n  }\n};\n\nPlayer.prototype._onSoundElapse = function(playId) {\n  if (!this.state.activePlay || (this.state.activePlay.id !== playId)) {\n    log('received sound elapse, but active play does not match', this.state.activePlay, playId);\n    return;\n  }\n\n  var sound = this.state.activePlay.sound,\n      position = sound.position(),\n      interval = 30 * 1000,  // ping server every 30 seconds\n      previousCount = Math.floor(this.state.activePlay.previousPosition / interval),\n      currentCount = Math.floor(position / interval);\n\n  this.state.activePlay.previousPosition = position;\n\n  if (currentCount !== previousCount) {\n    this.session.reportPlayElapsed(Math.floor(position / 1000));\n  }\n};\n\nPlayer.prototype._onPlayStarted = function(play) {\n  var session = this.session;\n\n  if (!this.state.activePlay || (this.state.activePlay.id !== play.id)) {\n    log('received play started, but it does not match active play', play, this.state.activePlay);\n    return;\n  }\n\n  this.state.activePlay.startReportedToServer = true;\n\n  if (this.state.activePlay.soundCompleted) {\n    // the audio completed playback before the session announced the play started\n    log('sound completed before we finished reporting start', this.state.activePlay);\n\n    // In the normal case we'd just quit here, but since the audio completed playback\n    // already, we've got to make sure a 'session.reportPlayCompleted()' gets kicked\n    // off to record the completion of this song.\n    // Defer the reporting so other 'play-started' handlers can complete as normal\n    // before a 'play-completed' gets triggered\n\n    if (this.state.activePlay.soundCompletedWithError) {\n      _.defer(function() {\n        session.requestInvalidate();\n      });\n\n    } else {\n      _.defer(function() {\n        session.reportPlayCompleted();\n      });\n    }\n  }\n};\n\nPlayer.prototype._onPlayCompleted = function(play) {\n  if (!this.state.activePlay || (this.state.activePlay.id !== play.id)) {\n    log('received play completed, but it does not match active play', play, this.state.activePlay);\n    return;\n  }\n\n  this.state.activePlay.sound.destroy();\n  delete this.state.activePlay;\n\n  // Force us into play mode in case we were paused and hit\n  // skip to complete the current song.\n  this.state.paused = false;\n};\n\nPlayer.prototype._onPlaysExhausted = function() {\n  this.state.paused = false;\n};\n\nPlayer.prototype.isPaused = function() {\n  return this.session.isTuned() && this.state.paused;\n};\n\nPlayer.prototype.getStationInformation = function(stationInformationCallback) {\n  return this.session.getStationInformation(stationInformationCallback);\n};\n\nPlayer.prototype.tune = function() {\n  var player = this;\n\n  this.initializeSpeaker.then(function() {\n    if (!player.session.isTuned()) {\n      player.session.tune();\n    }\n  });\n};\n\nPlayer.prototype.play = function() {\n  var player = this;\n\n  this.initializeSpeaker.then(function() {\n    player.speaker.initializeForMobile();\n\n    if (!player.session.isTuned()) {\n      // not currently playing music\n      player.state.paused = false;\n\n      return player.session.tune();\n\n    } else if (player.session.getActivePlay() && player.state.activePlay && player.state.paused) {\n      // resume playback of song\n      if (player.state.activePlay.playStarted) {\n        player.state.activePlay.sound.resume();\n\n      } else {\n        player.state.activePlay.sound.play();\n      }\n    }\n  });\n};\n\nPlayer.prototype.pause = function() {\n  if (!this.session.hasActivePlayStarted() || \n      !this.state.activePlay ||\n      this.state.paused) {\n    return;\n  }\n\n  // pause current song\n  this.state.activePlay.sound.pause();\n};\n\nPlayer.prototype.like = function() {\n  if (!this.session.hasActivePlayStarted()) {\n    return;\n  }\n\n  this.session.likePlay(this.state.activePlay.id);\n\n  this.trigger('play-liked');\n};\n\nPlayer.prototype.unlike = function() {\n  if (!this.session.hasActivePlayStarted()) {\n    return;\n  }\n\n  this.session.unlikePlay(this.state.activePlay.id);\n\n  this.trigger('play-unliked');\n};\n\nPlayer.prototype.dislike = function() {\n  if (!this.session.hasActivePlayStarted()) {\n    return;\n  }\n\n  this.session.dislikePlay(this.state.activePlay.id);\n\n  this.trigger('play-disliked');\n\n  this.skip();\n};\n\nPlayer.prototype.skip = function() {\n  if (!this.session.hasActivePlayStarted()) {\n    // can't skip non-playing song\n    return;\n  }\n\n  this.session.requestSkip();\n};\n\nPlayer.prototype.destroy = function() {\n  this.session = null;\n\n  if (this.state.activePlay && this.state.activePlay.sound) {\n    this.state.activePlay.sound.destroy();\n  }\n};\n\nPlayer.prototype.getCurrentState = function() {\n  if (this.state.suspended) {\n    return 'suspended';\n\n  } else if (!this.session.hasActivePlayStarted()) {\n    // nothing started, so we're idle\n    return 'idle';\n\n  } else {\n    if (this.state.paused) {\n      return 'paused';\n\n    } else {\n      return 'playing';\n    }\n  }\n};\n\nPlayer.prototype.getPosition = function() {\n  if (this.state.activePlay && this.state.activePlay.sound) {\n    return this.state.activePlay.sound.position();\n\n  } else {\n    return 0;\n  }\n};\n\nPlayer.prototype.getDuration = function() {\n  if (this.state.activePlay && this.state.activePlay.sound) {\n    return this.state.activePlay.sound.duration();\n\n  } else {\n    return 0;\n  }\n};\n\nPlayer.prototype.maybeCanSkip = function() {\n  return this.session.maybeCanSkip();\n};\n\nvar mutedKey = 'muted';\nPlayer.prototype.isMuted = function() {\n  if (supports_html5_storage()) {\n    if (mutedKey in localStorage) {\n      return localStorage[mutedKey] === 'true';\n    }\n  }\n\n  return false;\n};\n\nPlayer.prototype.setMuted = function(isMuted) {\n  if (isMuted) {\n    this.speaker.setVolume(0);\n    \n    if (supports_html5_storage()) {\n      localStorage[mutedKey] = true;\n    }\n\n    this.trigger('muted');\n\n  } else {\n    this.speaker.setVolume(100);\n\n    if (supports_html5_storage()) {\n      localStorage[mutedKey] = false;\n    }\n\n    this.trigger('unmuted');\n  }\n};\n\nPlayer.prototype.suspend = function() {\n  var playing = (this.state.activePlay && this.state.activePlay.sound),\n      state = this.session.suspend(playing ? this.state.activePlay.sound.position() : 0);\n\n  this.pause();\n\n  this.state.suspended = true;\n  this.trigger('suspend');\n\n  return state;\n};\n\nPlayer.prototype.unsuspend = function(state, startPlayback) {\n  this.session.unsuspend(state);\n\n  if (startPlayback) {\n    this.play();\n  }\n};\n\nmodule.exports = Player;\n\n\n","/*global module:false */\n/*jshint camelcase:false, latedef:false */\n\n/*\n *  Feed Media Session API\n *\n *  This manages all communication with the server and is the single point\n *  of truth for a client to manage what is actively being played. It\n *  should be created with:\n *\n *  var session = new Feed.Session(token, secret[, options]);\n *\n *  Then you attach event listeners to the session:\n *\n *  session.on('play-active', someHandler);\n *\n *  Then you can optionally set a placement and a station:\n *\n *  session.setPlacementId(placementId);\n *  session.setStationId(stationId);\n *\n *  If any of the above calls are made while we're actively tuning (we've\n *  got an active song or a pending song), then any currently active song\n *  will be marked as 'completed' and a new song will be requested from\n *  the server.\n *\n *  Then you tell the session to start maintaining a queue of \n *  music to play:\n *\n *  session.tune();\n *\n *  The session will now emit the following events:\n *\n *  not-in-us: if feed can't determine that the user is in the US, then\n *    the user won't be allowed to play any music. This check is made\n *    every time we try to retrieve a song. Once you get this event, you\n *    should assume nothing further will work.\n *  invalid-credentials: the token and secret passed to this function\n *    are not valid.\n *  placement: after we tune in to a placement or station,\n *    this passes on information about the placement we\n *    tuned in to.\n *  stations: after tuning to a specific placement, the server returns a\n *    list of available stations. This is that list.\n *  station-changed: emitted after a 'setStation' call, and passed the\n *    ID of the station\n *  placement-changed: emitted after a 'setPlacement' call, and passed the\n *    ID of the placement\n *  play-active: when the session has a play ready for playback\n *  play-started: when the active play has started playback (as\n *    a result of a call to reportPlayStarted)\n *  play-completed: when the session has successfully told the server\n *    that the current play has completed, been skipped (after a \n *    call to reportPlayCompleted), or been invalidated\n *  skip-denied: when the session has been told by the server that the\n *    skip cannot be performed (after a call to requestSkip)\n *  plays-exhausted: when the server can find no more music in the\n *    current station that satisfies DMCA constraints (this will\n *    be either the first event after a 'tune' call, or after a\n *    play-completed event). The client must make another call to\n *    tune() to begin pulling in more music.\n *\n *  Clients that use the session object should tell the session about\n *  the status of the current play as it progresses:\n *\n *  session.reportPlayStarted(): tell the server we have begun playback of the\n *    current song to the end user.\n *  session.reportPlayElapsed(seconds): tell the server how many elapsed seconds\n *    of the song have been played since it started.\n *  session.reportPlayCompleted(): tell the server that we have completed \n *    playing the current song. This will cause the session object\n *    to emit a 'play-completed' event followed by a 'play-active' when\n *    the next song is ready for playback\n *\n *  session.requestSkip(): ask the server if we can skip playback of the current\n *    song. If the skip is denied, a 'skip-denied' event will be triggered,\n *    otherwise a 'play-completed' will be triggered.\n *  session.requestInvalidate(): tell the server that we're unable to play the\n *    current song for some reason, and the server should stop playback\n *    of the song (if started) and give us a new song. The session will\n *    trigger a 'play-completed' event after this call.\n *\n *  Data held by the session can be retrieved with:\n *\n *  session.getActivePlay(): returns the currently active play, if any, or null\n *  session.isTuned(): true if the session has active plays available or is awaiting\n *    plays from the server\n *  session.hasActivePlayStarted(): returns true if the active play is playing now\n *  session.maybeCanSkip(): returns true if there is a song being played now and \n *    we believe we can skip it (this might not hold true, and the server can\n *    override this)\n *\n *  Other misc calls:\n *  \n *  session.likePlay(), session.unlikePlay(), session.dislikePlay(): like handling\n *  session.setFormats(formats): comma separated list of audio formats to \n *                               request, i.e.: 'mp3', 'aac', 'aac,mp3'. Defaults to\n *                               'mp3,aac'\n *\n *  The optional 'options' argument passed to the constructor can have the following\n *  attributes:\n *\n *    baseUrl: defines the base host that responds to API calls - defaults\n *       to '//feed.fm'. Really only used with local testing.\n */\n\nvar _ = (typeof window !== \"undefined\" ? window['_'] : typeof global !== \"undefined\" ? global['_'] : null);\nvar $ = (typeof window !== \"undefined\" ? window['jQuery'] : typeof global !== \"undefined\" ? global['jQuery'] : null);\nvar log = require('./log');\nvar Events = require('./events');\nvar util = require('./util');\nvar Base64 = require('js-base64').Base64;\nvar Cookie = require('tiny-cookie');\n\nvar Session = function(token, secret, options) {\n  options = options || { };\n\n  this.config = {\n    // token\n    // secret\n    // placementId\n    // placement\n    // stationId\n    // stations\n    // clientId\n    baseUrl: util.addProtocol(options.baseUrl || '//feed.fm', true),\n    secure: true,\n    formats: 'mp3,aac',\n    maxBitrate: 128,\n    timeOffset: 0,\n\n    // Represent the active 'play' or null if there is no active play. This should\n    // only be null before the first tune() call or after the server tells us there\n    // is no more music available.\n    current: null, /* {\n                        play:  play object we're currently playing\n                        started: defaults to false\n                        canSkip: defaults to false\n                        retryCount: number of times we've tried to tell server we started this\n                       }, */\n\n    // Details of any 'POST /play' request we're awaiting a response for. If this\n    // is null, then we're not waiting for the server to give us a play\n    pendingRequest: null, /* {\n                               ajax:       form data we sent to request a play, copied\n                                           here so we can retry it if it fails\n                               retryCount: number of times we've retried \n                             }, */\n    \n    // Once a play has been created and then started, the server will let us\n    // create a new play. This holds a reference to the next play that will\n    // be active on completion of the current play\n    pendingPlay: null // play object we'll start upon completion of current\n                      //   sound \n  };\n\n  _.extend(this, Events);\n\n  if (token && secret) {\n    this.setCredentials(token, secret);\n  }\n};\n\nSession.prototype.setBaseUrl = function(baseUrl) {\n  this.config.baseUrl = util.addProtocol(baseUrl);\n};\n\nSession.prototype.setCredentials = function(token, secret) {\n  this.config.token = token;\n  this.config.secret = secret;\n};\n\nSession.prototype.setPlacementId = function(placementId) {\n  this.config.placementId = placementId;\n  this.trigger('placement-changed', placementId);\n\n  this._retune();\n};\n\nSession.prototype.setStationId = function(stationId) {\n  if (this.config.stationId != stationId) {\n    this.config.stationId = stationId;\n    this.trigger('station-changed', stationId);\n\n    this._retune();\n  }\n};\n\nSession.prototype.setFormats = function(formats) {\n  this.config.formats = formats;\n\n  this._retune();\n};\n\nSession.prototype.setMaxBitrate = function(maxBitrate) {\n  this.config.maxBitrate = maxBitrate;\n};\n\n// tune\nSession.prototype.tune = function() {\n  if (!this.config.token) {\n    throw new Error('no token set with setCredentials()');\n  }\n\n  if (!this.config.secret) {\n    throw new Error('no secret set with setCredentials()');\n  }\n\n  // abort any pending requests or plays\n  this.config.pendingRequest = null;\n  this.config.pendingPlay = null;\n\n  // stop playback of any current song, and set\n  // the status to waiting\n  this._assignCurrentPlay(null, true);\n\n  // pull information in about the placement, followed by\n  // a request for the next play\n  if (!this.config.placementId) {\n    this._getDefaultPlacementInformation();\n  } else {\n    this._getPlacementInformation();\n  }\n};\n\n// _getDefaultPlacementInformation\nSession.prototype._getDefaultPlacementInformation = function(delay) {\n  var self = this;\n\n  if (this.config.placementId && this.config.placement && (this.config.placement.id === this.config.placementId)) {\n    // already have placement info\n    return;\n  }\n\n  var ajax = { \n    url: self.config.baseUrl + '/api/v2/placement',\n    type: 'GET',\n    data: {\n      client_id: self.config.clientId\n    },\n    dataType: 'json',\n    timeout: 6000\n  };\n\n  // request placement info from server\n  log('requesting default placement information from server');\n  self._signedAjax(ajax)\n    .done(_.bind(self._receiveDefaultPlacementInformation, self))\n    .fail(_.bind(self._failedDefaultPlacementInformation, self, delay));\n};\n\nSession.prototype._receiveDefaultPlacementInformation = function(placementInformation) {\n  if (placementInformation && placementInformation.success && placementInformation.placement) {\n    this.config.placement = placementInformation.placement;\n    this.config.stations = placementInformation.stations;\n\n    this.config.placementId = placementInformation.placement.id;\n    this.trigger('placement-changed', this.config.placementId);\n\n    this.trigger('placement', placementInformation.placement);\n\n    if (!('stationId' in this.config) && (placementInformation.stations.length > 0)) {\n      this.config.stationId = placementInformation.stations[0].id;\n      this.trigger('station-changed', this.config.stationId);\n    }\n\n    this.trigger('stations', placementInformation.stations);\n\n    // kick off request for next play\n    this._requestNextPlay();\n  }\n};\n\nSession.prototype._failedDefaultPlacementInformation = function(delay, response) {\n  if (response.status === 401) {\n    try {\n      var fullResponse = $.parseJSON(response.responseText);\n      if (fullResponse.error && fullResponse.error.code === 5) {\n        this.trigger('invalid-credentials');\n        return;\n      }\n    } catch (e) {\n      // ignore\n    }\n  }\n\n  // otherwise, try again in a bit\n  delay = delay ? (delay * 2) : 500;\n  _.delay(_.bind(this._getDefaultPlacementInformation, this, delay), delay);\n};\n\n// _getPlacementInformation\nSession.prototype._getPlacementInformation = function(delay) {\n  var self = this;\n\n  if (!this.config.placementId) {\n    throw new Error('no placementId set');\n  }\n\n  if (this.config.placement && (this.config.placement.id === this.config.placementId)) {\n    // already have placement info\n    // kick off request for next play\n    this._requestNextPlay();\n    return;\n  }\n\n  var ajax = { \n    url: self.config.baseUrl + '/api/v2/placement/' + self.config.placementId,\n    type: 'GET',\n    data: {\n      client_id: self.config.clientId\n    },\n    dataType: 'json',\n    timeout: 6000\n  };\n\n  // request placement info from server\n  log('requesting placement information from server');\n  self._signedAjax(ajax)\n    .done(_.bind(self._receivePlacementInformation, self))\n    .fail(_.bind(self._failedPlacementInformation, self, delay, ajax));\n};\n\nSession.prototype._receivePlacementInformation = function(placementInformation) {\n  if (placementInformation && placementInformation.success && placementInformation.placement) {\n    this.config.placement = placementInformation.placement;\n    this.config.stations = placementInformation.stations;\n\n    this.trigger('placement', placementInformation.placement);\n\n    if (!('stationId' in this.config) && (placementInformation.stations.length > 0)) {\n      this.config.stationId = placementInformation.stations[0].id;\n      this.trigger('station-changed', this.config.stationId);\n    }\n\n    this.trigger('stations', placementInformation.stations);\n\n    // kick off request for next play\n    this._requestNextPlay();\n  }\n};\n\nSession.prototype._failedPlacementInformation = function(delay) {\n  delay = delay ? (delay * 2) : 500;\n  _.delay(_.bind(this._getPlacementInformation, this, delay), delay);\n};\n\nSession.prototype.getActivePlacement = function() {\n  if (this.config.placement) {\n    return this.config.placement;\n  } else {\n    return null;\n  }\n};\n\nSession.prototype.getActivePlay = function() { \n  if (this.config.current) {\n    return this.config.current.play;\n  } else {\n    return null;\n  }\n};\n\nSession.prototype.isTuned = function() {\n  return this.config.current || this.config.pendingRequest;\n};\n\nSession.prototype.hasActivePlayStarted = function() {\n  return this.config.current && this.config.current.started;\n};\n\n// re-tune\nSession.prototype._retune = function() {\n  // if we're not actively playing anything, nothing needs to be sent\n  if (!this.isTuned()) {\n    return;\n  }\n\n  this.tune();\n};\n\nSession.prototype.reportPlayStarted = function() {\n  if (!this.config.current) {\n    throw new Error('attempt to report a play started, but there is no active play');\n  }\n\n  this._startPlay(this.config.current.play);\n};\n\nSession.prototype.reportPlayElapsed = function(seconds) {\n  if (!this.config.current) {\n    throw new Error('attempt to report elapsed play time, but the play hasn\\'t started');\n  }\n\n  this._signedAjax({\n    url: this.config.baseUrl + '/api/v2/play/' + this.config.current.play.id + '/elapse', \n    type: 'POST',\n    data: {\n      seconds: seconds\n    }\n  });\n};\n\nSession.prototype.reportPlayCompleted = function() {\n  var self = this;\n\n  if (this.config.current && (this.config.current.started)) {\n    this._signedAjax({\n      url: this.config.baseUrl + '/api/v2/play/' + this.config.current.play.id + '/complete',\n      type: 'POST'\n\n    }).always(_.bind(self._receivePlayCompleted, self));\n\n  } else {\n    log('finish on non-active or playing song');\n    throw new Error('no active or playing song');\n  }\n};\n\nSession.prototype._receivePlayCompleted = function() {\n  if (!this.config.pendingRequest) {\n    log('song finished, and no outstanding request, so playing pendingPlay');\n    // if we're not waiting for an incoming request, then we must\n    // have the next play queued up, so play it:\n    var pendingPlay = this.config.pendingPlay;\n    this.config.pendingPlay = null;\n\n    this._assignCurrentPlay(pendingPlay);\n\n  } else {\n    log('song finished, but we\\'re still waiting for next one to return');\n\n    // we're waiting for a request to come in, so kill the current\n    // song and announce that we're waiting\n    this._assignCurrentPlay(null, true);\n  }\n};\n\nSession.prototype.requestSkip = function() {\n  if (!this.config.current) {\n    throw new Error('No song being played');\n  }\n\n  if (!this.config.current.started) {\n    throw new Error('No song has been started');\n  }\n\n  if (!this.config.current.canSkip) {\n    this.trigger('skip-denied');\n    return;\n  }\n\n  this._signedAjax({\n    url: this.config.baseUrl + '/api/v2/play/' + this.config.current.play.id + '/skip',\n    type: 'POST'\n  })\n    .done(_.bind(this._receiveSkip, this, this.config.current.play))\n    .fail(_.bind(this._failSkip, this, this.config.current.play));\n};\n\nSession.prototype.requestInvalidate = function() {\n  if (!this.config.current) {\n    throw new Error('No active song to invalidate!');\n  }\n\n  this._sendInvalidate(this.config.current.play);\n};\n\nSession.prototype._sendInvalidate = function(play, delay) {\n  this._signedAjax({\n    url: this.config.baseUrl + '/api/v2/play/' + play.id + '/invalidate',\n    type: 'POST'\n  })\n    .done(_.bind(this._receiveInvalidate, this, play))\n    .fail(_.bind(this._failInvalidate, this, delay, play));\n};\n\nSession.prototype._failInvalidate = function(delay, play, response) {\n  var self = this;\n\n  delay = (delay ? delay * 2 : 200);\n\n  if (delay < 3000) {\n    _.delay(function() {\n      self._sendInvalidate(play);\n    }, delay);\n\n  } else {\n    log('gave up trying to invalidate play', response);\n\n  }\n};\n\nSession.prototype._receiveInvalidate = function(play, response) {\n  if (!this.config.current || (this.config.current.play !== play)) {\n    // not holding this song any more - just ignore it\n    return;\n  }\n\n  if (!response.success) {\n    log('failed invalidate! - technically this is impossible');\n    return;\n  }\n\n  if (this.config.pendingPlay) {\n    log('invalidating to song already queued up');\n    // skip to play already queued up\n    var pendingPlay = this.config.pendingPlay;\n    this.config.pendingPlay = null;\n    this._assignCurrentPlay(pendingPlay);\n\n  } else {\n    log('invalidating current song');\n    this._assignCurrentPlay(null, true);\n  \n    if (!this.config.pendingRequest) {\n      log('queueing up new song');\n      this._requestNextPlay();\n\n    }\n  }\n};\n\nSession.prototype._failSkip = function(play) {\n  if (!this.config.current || (this.config.current.play !== play)) {\n    // not playing this song any more - just ignore it\n    return;\n  }\n  // technically the skip wasn't denied - we just couldn't confirm wether\n  // it was ok, but this is the best we can return at the moment\n  this.trigger('skip-denied');\n};\n\nSession.prototype._receiveSkip = function(play, response) {\n  if (!this.config.current || (this.config.current.play !== play)) {\n    // not playing this song any more - just ignore it\n    return;\n  }\n\n  if (!response.success) {\n    log('failed skip!');\n    this.trigger('skip-denied');\n    return;\n  }\n\n  if (this.config.pendingPlay) {\n    log('skipping to song already queued up');\n    // skip to play already queued up\n    var pendingPlay = this.config.pendingPlay;\n    this.config.pendingPlay = null;\n    this._assignCurrentPlay(pendingPlay);\n\n  } else if (this.config.pendingRequest) {\n    log('skipping to what is queued up');\n    // we're waiting for a request - so just wait for that to show up\n    this._assignCurrentPlay(null, true);\n\n  } else {\n    log('skipping to what is queued up');\n    // nothing queued up and nothing being requested - we're outta music!\n    this._assignCurrentPlay(null);\n\n  }\n};\n\nSession.prototype._startPlay = function(play) {\n  if (this.config.current.retryCount > 2) {\n    // fuck it - let the user hear the song\n    this._receiveStartPlay(play, { success: true, can_skip: true });\n\n  } else {\n    log('telling server we\\'re starting the play', play);\n\n    // tell the server that we're going to start this song\n    this._signedAjax({\n      url: this.config.baseUrl + '/api/v2/play/' + play.id + '/start',\n      type: 'POST',\n      dataType: 'json',\n      timeout: 3000\n    })\n      .done(_.bind(this._receiveStartPlay, this, play))\n      .fail(_.bind(this._failStartPlay, this, play));\n  }\n};\n\nSession.prototype._receiveStartPlay = function(play, response) {\n  if (response.success) {\n\n    if (this.config.current && (this.config.current.play === play)) {\n      this.config.current.canSkip = response.can_skip;\n      this.config.current.started = true;\n\n      this.trigger('play-started', play);\n\n      // since we're ok to start this song, we can start looking for the\n      // next song\n      this._requestNextPlay();\n\n    } else {\n      log('received start play, but not waiting any more');\n    }\n\n  } else {\n    log('received failed start success');\n  }\n};\n\nSession.prototype._failStartPlay = function(play, response) {\n  // only process if we're still actually waiting for this\n  if (this.config.current && (this.config.current.play === play)) {\n\n    if (response.status === 403) {\n      try {\n        var fullResponse = $.parseJSON(response.responseText);\n\n        if (fullResponse.error && fullResponse.error.code === 20) {\n          // we seem to have missed the response to the original start, so\n          // let's assume the start was good and the song is skippable\n          return this._receiveStartPlay(play, { success: true, can_skip: true });\n        }\n      } catch (e) {\n        // ignore\n        log('unable to parse start play response', e.message);\n      }\n    }\n\n    log('request failed - trying again in 1 second', response.status);\n\n    this.config.current.retryCount++;\n\n    // wait a second and try again\n    _.delay(_.bind(this._startPlay, this, play), 1000);\n\n  } else {\n    log('startPlay failed, but we don\\'t care any more');\n  }\n};\n\n// start playing the given song\nSession.prototype._assignCurrentPlay = function(play, waitingIfEmpty) {\n  // remove any existing play\n  if (this.config.current) {\n    this.trigger('play-completed', this.config.current.play);\n    this.config.current = null;\n  }\n  if (play === null) {\n    // nothing to play right now\n\n    if (waitingIfEmpty) {\n      //this.config.status = 'waiting';\n      log('nothing to play... waiting');\n\n    } else {\n      //this.config.status = 'idle';\n      log('nothing to play from the current station');\n      this.trigger('plays-exhausted');\n    }\n\n  } else {\n    // we're starting this song, so note that\n    this.config.current = {\n      play: play,\n      canSkip: false,\n      started: false,\n      retryCount: 0\n    };\n\n    //this.config.status = 'active';\n\n    log('activated new song');\n    this.trigger('play-active', play);\n\n  }\n};\n\nSession.prototype._requestNextPlay = function(delay) {\n  var self = this;\n\n  this._getClientId().then(function() {\n    if (self.config.pendingRequest) {\n      if (!delay) {\n        log('already waiting for a request to finish');\n        return;\n\n      } else if (delay > 60000) {\n        log('giving up on retrieving next play');\n\n        // we already retried this - let's give up\n        self.config.pendingRequest = null;\n\n        if (self.config.current == null) {\n          // we're not playing anything, so we're waiting. \n          // set assign play to null again to trigger empty/idle\n          self._assignCurrentPlay(null);\n        }\n        return;\n\n      } else {\n        log('retrying pending request');\n\n        // retry the request\n        self.config.pendingRequest.retryCount++;\n\n        self._signedAjax(self.config.pendingRequest.ajax)\n          .done(_.bind(self._receiveNextPlay, self, self.config.pendingRequest.ajax))\n          .fail(_.bind(self._failedNextPlay, self, delay, self.config.pendingRequest.ajax));\n        return;\n      }\n      \n    } else {\n      // create a new request\n\n      var ajax = { \n        url: self.config.baseUrl + '/api/v2/play',\n        type: 'POST',\n        dataType: 'json',\n        timeout: 6000,\n        data: {\n          formats: self.config.formats,\n          client_id: self.config.clientId,\n          max_bitrate: self.config.maxBitrate,\n          secure: true\n        }\n      };\n\n      if (self.config.placementId) {\n        ajax.data.placement_id = self.config.placementId;\n      }\n\n      if (self.config.stationId) {\n        ajax.data.station_id = self.config.stationId;\n      }\n\n      self.config.pendingRequest = {\n        ajax: ajax,\n        retryCount: 0\n      };\n\n      // request new play from server\n      log('requesting new play from server', ajax);\n      self._signedAjax(ajax)\n        .done(_.bind(self._receiveNextPlay, self, ajax))\n        .fail(_.bind(self._failedNextPlay, self, delay, ajax));\n    }\n  });\n};\n\n// we received a song to play from the server\nSession.prototype._receiveNextPlay = function(ajax, response) {\n  // only process if we're still actually waiting for this\n  if (this.config.pendingRequest && (this.config.pendingRequest.ajax === ajax)) {\n    // this isn't pending any more\n    this.config.pendingRequest = null;\n\n    if (response.success) {\n      if (this.config.current) {\n        log('received play, but we\\'re already playing, so queueing up', response.play);\n\n        // play this when the current song is complete\n        this.config.pendingPlay = response.play;\n\n      } else {\n        log('received play and no current song, so playing now', response.play);\n\n        // start playing this right now, since nothing else is playing\n        this._assignCurrentPlay(response.play);\n\n      }\n\n    } else if (response.error && response.error.code === 9) {\n      if (this.config.current) {\n        log('ran out of music to play, but we\\'re already playing');\n\n        this.config.pendingPlay = null;\n\n      } else {\n        log('ran out of music, and nothing playing now');\n\n        this.trigger('plays-exhausted');\n      }\n\n    } else {\n      log('unsuccessful response', response);\n    }\n\n  } else {\n    log('nextPlay succeeded, but we don\\'t care');\n  }\n};\n\n// server returned an error when we requested the next song\nSession.prototype._failedNextPlay = function(delay, ajax, response) {\n  // only process if we're still actually waiting for this\n  if (this.config.pendingRequest && (this.config.pendingRequest.ajax === ajax)) {\n\n    if (response.status === 403) {\n      try {\n        var fullResponse = $.parseJSON(response.responseText);\n\n        if (fullResponse.error && fullResponse.error.code === 19) {\n          // user isn't in the US any more, so let the call fail\n          this.trigger('not-in-us', fullResponse.error.message);\n          return;\n        }\n      } catch (e) {\n        // some other response - fall through and try again\n        log('problem parsing 403 response', e.message);\n      }\n    }\n\n    log('request failed - trying again', response.status);\n\n    delay = delay ? (delay * 2) : 500;\n    _.delay(_.bind(this._requestNextPlay, this, delay), delay);\n\n  } else {\n    log('nextPlay failed, but we don\\'t care');\n  }\n};\n\nSession.prototype._getClientId = function() {\n  if (this.clientPromise) {\n    return this.clientPromise;\n  }\n  var clientDeferred = new $.Deferred();\n  this.clientPromise = clientDeferred.promise();\n\n  var self = this;\n\n  this._requestClientId(function(clientId) {\n    // once we've got a clientId, stick it in the config\n    self.config.clientId = clientId;\n\n    self._setStoredCid(self.config.clientId);\n\n    clientDeferred.resolve(clientId);\n  });\n\n  return this.clientPromise;\n};\n\n// hit the server up for a client id and return it via the passed in deferred\nSession.prototype._requestClientId = function(saveClientId, delay) {\n  // see if we've got a cookie\n  var clientId = this._getStoredCid();\n\n  if (clientId) {\n    return saveClientId(clientId);\n\n  } else {\n    var self = this;\n\n    this._signedAjax({\n      url: self.config.baseUrl + '/api/v2/client',\n      type: 'POST'\n\n    }).done(function(response) {\n      if (response.success) {\n        saveClientId(response.client_id);\n\n      } else {\n        repeatAfter(delay, 2000, function(newDelay) { \n          // retry until the end of time\n          self._requestClientId(saveClientId, newDelay);\n        });\n      }\n\n    }).fail(function(response) {\n      if (response.status === 403) {\n        try {\n          var fullResponse = $.parseJSON(response.responseText);\n\n          if (fullResponse.error && fullResponse.error.code === 19) {\n            // user isn't in the US any more, so let the call fail\n            self.trigger('not-in-us', fullResponse.error.message);\n            return;\n          }\n        } catch (e) {\n          // some other response - fall through and try again\n          log('unknown response for client id request', e.message);\n        }\n\n      } else {\n        log('unknown client id response status', response.status);\n      }\n\n      repeatAfter(delay, 2000, function(newDelay) { \n        // retry until the end of time\n        self._requestClientId(saveClientId, newDelay);\n      });\n    });\n  }\n};\n\nfunction repeatAfter(delay, max, cb) {\n  delay = delay ? (2 * delay) : 200;\n\n  if (delay > max) {\n    delay = max;\n  }\n\n  setTimeout(function() {\n    cb(delay);\n  }, delay);\n\n}\n\nSession.prototype.maybeCanSkip = function() {\n  return this.config.current && this.config.current.started && this.config.current.canSkip;\n};\n\nSession.prototype.likePlay = function(playId) {\n  this._signedAjax({\n    url: this.config.baseUrl + '/api/v2/play/' + playId + '/like',\n    type: 'POST'\n  });\n\n  if (this.config.current && (this.config.current.play.id === playId)) {\n    this.config.current.play.liked = true;\n  }\n};\n\nSession.prototype.unlikePlay = function(playId) {\n  this._signedAjax({\n    url: this.config.baseUrl + '/api/v2/play/' + playId + '/like',\n    type: 'DELETE'\n  });\n\n  if (this.config.current && (this.config.current.play.id === playId)) {\n    delete this.config.current.play['liked'];\n  }\n};\n\nSession.prototype.dislikePlay = function(playId) {\n  this._signedAjax({\n    url: this.config.baseUrl + '/api/v2/play/' + playId + '/dislike',\n    type: 'POST'\n  });\n\n  if (this.config.current && (this.config.current.play.id === playId)) {\n    this.config.current.play.liked = false;\n  }\n};\n\n/*\n * Save the current state of the session, so we can recreate\n * our current state in the future. The object returned\n * is what should be passed to 'unsuspend'. The 'startPosition'\n * should be the current playback offset for the active play, \n * in milliseconds.\n */\n\nSession.prototype.suspend = function(startPosition) {\n  var saved = { };\n\n  if (this.config.placementId) {\n    saved.placementId = this.config.placementId;\n  }\n\n  if (this.config.stationId) {\n    saved.stationId = this.config.stationId;\n  }\n\n  if (this.config.current && this.config.current.started) {\n    // only save the active play if we've actually started\n    // playing it (otherwise the next call to create a play\n    // will return the same data)\n    saved.placement = this.config.placement;\n    saved.stations = this.config.stations;\n    saved.play = _.clone(this.config.current.play);\n    saved.play.startPosition = startPosition;\n    saved.canSkip = this.config.current.canSkip;\n  }\n\n  return saved;\n};\n\n/*\n * Use the saved session passed in to restore the player to\n * the state it was in previously. This method will make sure\n * all the necessary events are triggered so that any\n * object observing events from this session will believe a\n * 'session.tune()' call was made.\n */\n\nSession.prototype.unsuspend = function(saved) {\n  if (this.getActivePlay()) {\n    throw new Error('You cannot unsuspend after running tune()');\n  }\n\n  if ('placementId' in saved) {\n    this.config.placementId = saved.placementId;\n    this.trigger('placement-changed', this.config.placementId);\n  }\n\n  if ('stationId' in saved) {\n    this.config.stationId = saved.stationId;\n    this.trigger('station-changed', this.config.stationId);\n  }\n\n  if ('play' in saved) {\n    this.config.placement = saved.placement;\n    this.config.stations = saved.stations;\n\n    this.trigger('placement', this.config.placement);\n    this.trigger('stations', this.config.stations);\n\n    // emit the 'play-active' event\n    this._assignCurrentPlay(saved.play);\n\n    // make a fake start response from the server, emit\n    // a 'play-start' event, and then start queueing\n    // up the next song to play\n    this._receiveStartPlay(saved.play, { success: true, can_skip: saved.canSkip });\n\n    return saved.play;\n\n  } else {\n    this.tune();\n\n    return null;\n  }\n};\n\nfunction supports_html5_storage() {\n  try {\n    return 'localStorage' in window && window['localStorage'] !== null;\n  } catch (e) {\n    log('browser does not support html5 localstorage', e.message);\n    return false;\n  }\n}\n\nvar cookieName = 'cid';\nSession.prototype._getStoredCid = function() {\n  if (supports_html5_storage()) {\n    return localStorage[cookieName];\n  } else {\n    return Cookie.get(cookieName);\n  }\n};\n\nSession.prototype._setStoredCid = function(value) {\n  if (supports_html5_storage()) {\n    localStorage[cookieName] = value;\n  } else {\n    Cookie.set(cookieName, value, { expires: 3650, path: '/' });\n  }\n};\n\nSession.prototype._deleteStoredCid = function() {\n  if (supports_html5_storage()) {\n    localStorage.removeItem(cookieName);\n  } else {\n    $.removeCookie(cookieName, { path: '/' });\n  }\n};\n\nSession.prototype._sign = function(request) {\n  var authorization;\n\n  // use Basic auth for HTTPS\n  authorization = 'Basic ' + Base64.encode(this.config.token + ':' + this.config.secret);\n\n  request.headers = {\n    Authorization: authorization\n  };\n\n  return request;\n};\n\nSession.prototype._signedAjax = function(request) {\n  var self = this;\n\n  return self._ajax(self._sign(request));\n};\n\nSession.prototype._ajax = function(request) {\n  return $.ajax(request);\n};\n\nmodule.exports = Session;\n\n","/*global module:false */\n\n/*\n * The speaker object encapsulates the SoundManager2 code and boils it down\n * to the following api:\n *\n *    speaker().initializeForMobile: mobile clients can only start using\n *      speaker when handling an 'onClick' event. This call should be made \n *      at that time to get sound initialized while waiting for details\n *      of what to play from the server. \n *\n *    speaker().setVolume(value): set the volume from 0 (mute) - 100 (full volume)\n *\n *    var sound = speaker().create(url, optionsAndEvents): create a new sound from the\n *       given url and return a 'song' object that can be used to pause/play/\n *       destroy the song and receive trigger events as the song plays/stops. \n *\n *       The 'optionsAndEvents' is an object that lets you specify event\n *       handlers and options:\n *\n *          startPosition:  specifies the time offset (in milliseconds) that the\n *                          sound should begin playback at when we begin playback.\n *          play:           event handler for 'play' event\n *          pause:          event handler for 'pause' event\n *          finish:         event handler for 'finish' event\n *\n *       The returned object emits the following events:\n *         play: the song has started playing or resumed playing after pause\n *         pause: the song has paused playback\n *         finish: the song has completed playback and the song object\n *           is no longer usable and should be destroyed\n *\n *       The events should be received in this order only:\n *         ( play -> ( pause | play )* -> )? finish\n *\n *       Note that I represent play failures as a 'finish' call, so if\n *       we can't load a song, it will just get a 'finish' and no 'play'.\n *       The 'finish' event will have a 'true' argument passed to it on\n *       some kind of error, so you can treat those differently.\n *\n *       The returned song object has this following api:\n *         play: start playback (at the 'startPosition', if specified)\n *         pause: pause playback\n *         resume: resume playback\n *         destroy: stop playback, prevent any future playback, and free up memory\n *\n * This module returns a function that returns a speaker singleton so everybody\n * is using the same instance.\n *\n * Proper usage looks like this:\n *\n *   require([ 'feed/speaker' ], function(speaker) {\n *     var mySpeaker = speaker(options, onReady);\n *   });\n *\n * That will make sure that all code uses the same speaker instance. 'options'\n * is optional, and is an object with any of the following keys:\n *\n *   swfBase: URL pointing to directory containing 'soundmanager2.swf' file \n *            for flash fallback\n *   preferFlash: if true, opt to use the flash plugin rather than the\n *                browser's 'audio' tag\n *   debug: if true, emit debug information to the console\n *   silence: URL to an mp3 with no sound, for initializing mobile clients.\n *            defaults to swfBase + '/silence.mp3'\n *\n * 'onReady' is also optional, and is a callback that will be called as\n * soon as the sond system is initialized (or immediately if it was already\n * initialized) and it will be given a string that lists supported\n * audio formats, suitable for passing to Feed.Session.setFormats().\n *\n * The first function call to 'speaker()' is what configures and defines the\n * speaker - and subsequent calls just return the already-created instance.\n * I think this is a poor interface, but I don't have a better one at the\n * moment.\n *\n * This code uses the wonderful SoundManager2 api and falls back to\n * the soundmanager2 flash plugin if HTML5 audio isn't available. \n *\n */\n\nvar _ = (typeof window !== \"undefined\" ? window['_'] : typeof global !== \"undefined\" ? global['_'] : null);\nvar $ = (typeof window !== \"undefined\" ? window['jQuery'] : typeof global !== \"undefined\" ? global['jQuery'] : null);\nvar log = require('./log');\nvar Events = require('./events');\nvar util = require('./util');\nvar SoundManager = require('soundmanager2');\n\n// fake console to redirect soundmanager2 to the feed logger\nvar feedConsole = {\n  log: log,\n  info: log,\n  warn: log,\n  error: log\n};\n\nvar Sound = function(options) { \n  var obj = _.extend(this, Events);\n\n  if (options) {\n    if ('startPosition' in options) {\n      this.startPosition = options.startPosition;\n    }\n\n    _.each(['play', 'pause', 'finish', 'elapse'], function(ev) {\n      if (ev in options) {\n        obj.on(ev, options[ev]);\n      }\n    });\n  }\n\n  return obj;\n};\n\nSound.prototype = {\n  play: function() {\n    var sound = this;\n\n    if (this.sm2Sound) {\n      if (!this.sm2Sound.fake && this.startPosition) {\n        var startPosition = this.startPosition;\n\n        this.sm2Sound.load({\n          whileloading: function() {\n            if ((this.playState === 0) && (this.duration > startPosition)) {\n              // start playback as soon as we can\n              this.setPosition(startPosition);\n              this.play();\n            }\n          }\n        });\n      } else if (this.sm2Sound.isHTML5) {\n        this.sm2Sound.play();\n      } else {\n        // deal with Flash callback issues\n        setTimeout(function() {\n          sound.sm2Sound.play();\n        }, 1);\n      }\n    }\n  },\n\n  // pause playback of the current sound clip\n  pause: function() {\n    if (this.sm2Sound) {\n      this.sm2Sound.pause();\n    }\n  },\n\n  // resume playback of the current sound clip\n  resume: function() {\n    if (this.sm2Sound) {\n      this.sm2Sound.resume();\n    }\n  },\n\n  // elapsed number of milliseconds played\n  position: function() {\n    if (this.sm2Sound) {\n      return this.sm2Sound.position;\n    } else {\n      return 0;\n    }\n  },\n\n  // duration in milliseconds of the song\n  // (this may change until the song is full loaded)\n  duration: function() {\n    if (this.sm2Sound) {\n      var d = this.sm2Sound.duration;\n      return d ? d : 1;\n    } else {\n      return 1;\n    }\n  },\n\n  // stop playing the given sound clip, unload it, and disable events\n  destroy: function() {\n    log('destroy triggered for', this.id);\n\n    if (this.sm2Sound) {\n      delete speaker.outstandingPlays[this.id];\n      this.sm2Sound.destruct();\n      this.sm2Sound = null;\n    }\n\n    this.off();\n  },\n\n  _nonRepeatTrigger: function(event) {\n    if (this.lastTrigger !== event) {\n      this.lastTrigger = event;\n      this.trigger.apply(this, Array.prototype.slice.call(arguments, 0));\n    }\n  }\n};\n\nvar Speaker = function(options) {\n  var speaker = this;\n\n  options = _.extend({ swfBase: '//feed.fm/js/latest/' }, options);\n\n  this.onReadyPromise = $.Deferred();\n\n  var config = {\n    wmode: 'transparent',\n    useHighPerformance: true,\n    flashPollingInterval: 500,\n    html5PollingInterval: 500,\n    debugMode: options.debug || false,\n    useConsole: options.debug ? true : false, // feedConsole : null,\n    debugFlash: options.debug || false,\n    preferFlash: options.preferFlash || false,\n    url: util.addProtocol(options.swfBase, true),\n    onready: function() {\n      var preferred;\n\n      if (window.soundManager.canPlayMIME('audio/aac')) {\n        // some clients play aac, and we prefer that\n        preferred = 'aac,mp3';\n      } else {\n        // every client plays mp3\n        preferred = 'mp3';\n      }\n\n      speaker.onReadyPromise.resolve(preferred);\n    }\n  };\n\n  // The SoundManager library likes to watch for the onpageload\n  // event and initialize itself as soon as the page loads. This\n  // causes problems when SoundManager is loaded up lazily by requirejs\n  // vs packaged with all the Feed SDK. When packaging things up,\n  // we prefix all the code with 'window.SM2_DEFER = true;' to prevent\n  // the code from initializing on load, but then the SoundManager\n  // code doesn't make the 'window.soundManager' singleton, so we do that\n  // here\n  if (!window.soundManager) {\n    window.soundManager = new SoundManager();\n  }\n  \n  window.soundManager.setup(config);\n\n  var s = options.silence;\n  if (!s) {\n    s = options.swfBase;\n    if (s[s.length - 1] !== '/') {\n      s += '/';\n    }\n    s += '5seconds.mp3';\n  }\n\n  this.silence = util.addProtocol(s, options.secure);\n};\n\nSpeaker.prototype = {\n  vol: 100,\n  outstandingPlays: { },\n  mobileInitialized: false,\n  onReadyPromise: null,\n\n  initializeForMobile: function() {\n    if (!this.mobileInitialized) {\n      // Just play a blank mp3 file that we know the location of, presumably\n      // while we ping the server for the song we want\n      var sound = this._createSM2Sound({\n        id: 'silence',\n        url: this.silence,\n        volume: 0,\n        autoPlay: true,\n        type: 'audio/mp3'\n      });\n\n      this.mobileInitialized = !sound.fake;\n    }\n  },\n\n  // start playing the given clip and return sound object\n  create: function(url, callbacks) {\n    var sound = new Sound(callbacks);\n    sound.id = _.uniqueId('play');\n    sound.url = url;\n\n    this.outstandingPlays[sound.id] = sound;\n\n    this._createAndAssignSM2Sound(sound);\n\n    return sound;\n  },\n\n  _createSM2Sound: function(options) { \n    return window.soundManager.createSound(options);\n  },\n\n  _createAndAssignSM2Sound: function(sound) {\n    var speaker = this;\n\n    sound.sm2Sound = this._createSM2Sound({\n      id: sound.id,\n      url: sound.url,\n      volume: speaker.vol,\n      autoPlay: false,\n      type: 'audio/mp3',\n      onfinish: function() {\n        log(sound.id + ': onfinish');\n        this.destruct();\n        delete speaker.outstandingPlays[sound.id];\n        sound._nonRepeatTrigger('finish');\n      },\n      onid3: function() {\n        log(sound.id + ': onid3');\n      },\n      onstop: function() {\n        log(sound.id + ': onstop');\n      },\n      onsuspend: function() {\n        log(sound.id + ': suspend');\n      },\n      onresume: function() {\n        log(sound.id + ': onresume');\n        sound._nonRepeatTrigger('play');\n      },\n      onplay: function() {\n        log(sound.id + ': onplay');\n        sound._nonRepeatTrigger('play');\n      },\n      onpause: function() {\n        log(sound.id + ': pause');\n        sound._nonRepeatTrigger('pause');\n      },\n      onload: function(success) {\n        log(sound.id + ': onload', success);\n        if (!success) {\n         log(sound.id + ' failure!');\n          sound._nonRepeatTrigger('finish', true);\n          // consider this a failure\n          log('destroying after onload failure');\n          sound.destroy();\n        }\n      },\n      ondataerror: function() {\n        log(sound.id + ': ondataerror');\n        sound._nonRepeatTrigger('finish', true);\n        log('destroying after ondataerr');\n        sound.destroy();\n      },\n      onconnect: function() {\n        log(sound.id + ': onconnect' );\n      },\n      onbufferchange: function() {\n        log(sound.id + ': onbufferchange');\n      },\n      whileplaying: function() {\n        sound.trigger('elapse');\n      }\n    });\n\n    return sound;\n  },\n\n  // set or get the volume (0-100)\n  setVolume: function(value) {\n    if (typeof value !== 'undefined') {\n      this.vol = value;\n\n      _.each(this.outstandingPlays, function(song) {\n        song.sm2Sound.setVolume(value);\n      });\n\n      this.trigger('volume', value);\n    }\n\n    return this.vol;\n  }\n\n};\n\n// add events to speaker class\n_.extend(Speaker.prototype, Events);\n\nvar speaker = null;\n\n// there should only ever be a single instance of 'Speaker'\nmodule.exports = function(options, onReady) {\n  if (speaker === null) {\n    speaker = new Speaker(options);\n  }\n\n  if (onReady) {\n    speaker.onReadyPromise.then(function(formats) {\n      onReady(formats);\n    });\n  }\n\n  return speaker;\n};\n\n","/*global module:false */\n\nvar util = { };\n\nutil.addProtocol = function(url, secure) {\n  // handle '//somewhere.com/' url's\n  if (url.slice(0, 2) === '//') {\n    if (secure === true) {\n      url = 'https:' + url;\n\n    } else if (secure === false) {\n      url = 'http:' + url;\n    \n    } else if (window.location.protocol.substr(0, 4) === 'http') {\n      url = window.location.protocol + url;\n\n    } else {\n      url = 'http';\n    }\n  }\n  \n  return url;\n};\n\nmodule.exports = util;\n\n"],"sourceRoot":"/source/"}