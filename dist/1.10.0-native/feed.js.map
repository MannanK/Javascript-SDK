{"version":3,"sources":["../node_modules/browser-pack/_prelude.js","../node_modules/base64-js/index.js","../node_modules/buffer/index.js","../node_modules/ieee754/index.js","../node_modules/js-base64/base64.js","../node_modules/tiny-cookie/lib/index.js","../node_modules/tiny-cookie/lib/util.js","events.js","nolog.js","player-view.js","player.js","session.js","speaker.js","util.js","version.json"],"names":["f","exports","module","define","amd","window","global","self","this","Feed","e","t","n","r","s","o","u","a","require","i","Error","code","l","call","length","1","placeHoldersCount","b64","len","tripletToBase64","num","lookup","encodeChunk","uint8","start","end","tmp","output","push","join","byteLength","toByteArray","placeHolders","arr","Arr","L","revLookup","charCodeAt","fromByteArray","extraBytes","parts","len2","Uint8Array","Array","createBuffer","K_MAX_LENGTH","RangeError","buf","__proto__","Buffer","prototype","arg","encodingOrOffset","allocUnsafe","from","value","TypeError","isArrayBuffer","array","byteOffset","undefined","fromArrayBuffer","string","encoding","isEncoding","actual","write","slice","fromString","obj","isBuffer","checked","copy","isArrayBufferView","numberIsNaN","fromArrayLike","type","isArray","data","fromObject","assertSize","size","toString","loweredCase","utf8ToBytes","base64ToBytes","toLowerCase","slowToString","out","toHex","hexSlice","utf8Slice","ret","Math","min","String","fromCharCode","asciiSlice","latin1Slice","base64","base64Slice","bytes","res","utf16leSlice","swap","b","m","bidirectionalIndexOf","buffer","val","dir","arrayIndexOf","indexOf","lastIndexOf","read","indexSize","readUInt16BE","arrLength","valLength","foundIndex","found","j","hexWrite","offset","Number","remaining","strLen","parsed","parseInt","substr","utf8Write","blitBuffer","asciiWrite","str","byteArray","asciiToBytes","latin1Write","base64Write","ucs2Write","units","c","hi","lo","utf16leToBytes","firstByte","codePoint","bytesPerSequence","secondByte","thirdByte","fourthByte","tempCodePoint","codePoints","MAX_ARGUMENTS_LENGTH","apply","decodeCodePointsArray","checkOffset","ext","checkInt","max","checkIEEE754","writeFloat","littleEndian","noAssert","ieee754","writeDouble","Infinity","leadSurrogate","trim","replace","INVALID_BASE64_RE","base64clean","src","dst","ArrayBuffer","constructor","name","isView","SlowBuffer","alloc","INSPECT_MAX_BYTES","kMaxLength","TYPED_ARRAY_SUPPORT","foo","typedArraySupport","console","error","Symbol","species","Object","defineProperty","configurable","enumerable","writable","poolSize","fill","allocUnsafeSlow","_isBuffer","compare","x","y","concat","list","pos","swap16","swap32","swap64","arguments","equals","inspect","match","target","thisStart","thisEnd","thisCopy","targetCopy","includes","isFinite","toJSON","_arr","newBuf","subarray","readUIntLE","mul","readUIntBE","readUInt8","readUInt16LE","readUInt32LE","readUInt32BE","readIntLE","pow","readIntBE","readInt8","readInt16LE","readInt16BE","readInt32LE","readInt32BE","readFloatLE","readFloatBE","readDoubleLE","readDoubleBE","writeUIntLE","writeUIntBE","writeUInt8","writeUInt16LE","writeUInt16BE","writeUInt32LE","writeUInt32BE","writeIntLE","limit","sub","writeIntBE","writeInt8","writeInt16LE","writeInt16BE","writeInt32LE","writeInt32BE","writeFloatLE","writeFloatBE","writeDoubleLE","writeDoubleBE","targetStart","set","isLE","mLen","nBytes","eLen","eMax","eBias","nBits","d","NaN","rt","abs","isNaN","floor","log","LN2","factory","moment","_Base64","Base64","err","b64chars","b64tab","bin","charAt","cb_utob","cc","re_utob","utob","cb_encode","ccc","padlen","ord","btoa","_encode","encode","urisafe","m0","re_btou","RegExp","cb_btou","cccc","btou","cb_decode","chars","atob","_decode","decode","VERSION","fromBase64","toBase64","encodeURI","noConflict","noEnum","v","extendString","isEnabled","re","document","cookie","key","enabled","test","remove","get","decoder","decodeURIComponent","_util","escapeRe","exec","getAll","reKey","cookies","lastIndex","index","encoder","encodeURIComponent","attrs","_typeof","attrsStr","convert","newCookie","options","opts","expires","domain","getRaw","setRaw","__esModule","removeCookie","setRawCookie","getRawCookie","setCookie","getAllCookies","getCookie","isCookieEnabled","iterator","hasOwn","hasOwnProperty","computeExpires","lastCh","Date","setFullYear","getFullYear","setMonth","getMonth","setDate","getDate","setHours","getHours","setMinutes","getMinutes","setSeconds","getSeconds","toUTCString","_","Events","on","callback","context","eventsApi","_events","ctx","once","off","_callback","retain","ev","events","names","k","keys","trigger","args","allEvents","all","triggerEvents","stopListening","listeners","_listeners","deleteListener","_listenerId","id","eventSplitter","action","rest","split","a1","a2","a3","each","listenTo","listenToOnce","implementation","method","uniqueId","Session","PlayerView","Player","getSpeaker","version","_getSpeaker","formatTime","millis","asSeconds","secondsPart","minutesPart","$","player","alertId","durationId","startedPlayback","$el","_onPlacement","_onPlayStarted","_onPlayPaused","_onPlayResumed","_onPlayCompleted","_onPlayLiked","_onPlayUnliked","_onPlayDisliked","_onPlaysExhausted","_onSkipDenied","_onSuspend","_enableButtonsBasedOnState","displayText","originalDisplayText","html","renderStatus","bind","_onStatusClick","_onPlayButtonClick","_onPauseButtonClick","_onSkipButtonClick","_onLikeButtonClick","_onDislikeButtonClick","getCurrentState","initializeAudio","play","pause","skip","closest","is","unlike","like","dislike","find","placement","formatPlacement","formatPlay","_setLikeStatus","liked","_enablePositionTracker","playerView","setInterval","renderPosition","getPosition","getDuration","addClass","removeClass","_disablePositionTracker","clearInterval","renderAlert","audio_file","track","title","artist","release","position","duration","css","elapsed","round","alertText","clearTimeout","setTimeout","toEnable","toDisable","state","maybeCanSkip","attr","removeAttr","supports_html5_storage","localStorage","token","secret","paused","suspended","trimming","normalizeVolume","secondsOfCrossfade","crossfadeIn","extend","session","_onPlayActive","_onPrepareSound","initializeSpeaker","Deferred","speaker","supportedFormats","formats","reqFormatList","suppFormatList","reqAndSuppFormatList","intersection","reqAndSuppFormats","setFormats","resolve","setMuted","isMuted","then","setPlacementId","placementId","setStationId","stationId","setBaseUrl","baseUrl","_onSoundPlay","_onSoundPause","finish","_onSoundFinish","elapse","_onSoundElapse","gain","replaygain_track_gain","station","pre_gain","extra","trim_start","startPosition","trim_end","duration_in_seconds","endPosition","fadeInSeconds","fadeOutSeconds","sound","create","url","activePlay","startReportedToServer","soundCompleted","playStarted","previousPosition","playId","reportPlayStarted","getActivePlay","hasActivePlayStarted","getActivePlacement","withError","soundCompletedWithError","requestInvalidate","reportPlayCompleted","previousCount","currentCount","reportPlayElapsed","defer","destroy","prepare","isPaused","isTuned","getStationInformation","stationInformationCallback","tune","resume","likePlay","unlikePlay","dislikePlay","requestSkip","setVolume","suspend","playing","unsuspend","startPlayback","repeatAfter","delay","cb","util","Cookie","config","addProtocol","maxBitrate","timeOffset","current","pendingRequest","pendingPlay","setCredentials","_retune","setMaxBitrate","_assignCurrentPlay","_getDefaultPlacementInformation","_requestNextPlay","ajax","client_id","clientId","dataType","timeout","_signedAjax","done","_receiveDefaultPlacementInformation","fail","_failedDefaultPlacementInformation","placementInformation","success","stations","response","status","fullResponse","parseJSON","responseText","started","_startPlay","seconds","always","_receivePlayCompleted","canSkip","_receiveSkip","_failSkip","_sendInvalidate","_receiveInvalidate","_failInvalidate","retryCount","_receiveStartPlay","can_skip","_failStartPlay","message","waitingIfEmpty","_getClientId","_receiveNextPlay","_failedNextPlay","max_bitrate","secure","placement_id","station_id","clientPromise","clientDeferred","promise","_requestClientId","_setStoredCid","saveClientId","_getStoredCid","newDelay","saved","clone","path","_deleteStoredCid","_sign","request","authorization","headers","Authorization","_ajax","audio","currentTime","readyState","SILENCE","Sound","loaded","fadeInStart","fadeInEnd","fadeOutStart","fadeOutEnd","_playSound","_pauseSound","_position","_duration","_destroySound","gainAdjustedVolume","volume","Speaker","createElement","canPlayType","preferred","vol","outstandingPlays","activeAudio","fadingAudio","preparingAudio","prepareWhenReady","activeSound","fadingSound","Audio","_addEventListeners","loop","addEventListener","_onAudioPauseEvent","_onAudioEndedEvent","_onAudioTimeUpdateEvent","event","currentTarget","_setVolume","currentVolume","calculatedVolume","_debugAudioObject","object","optionsAndCallbacks","_prepare","ranges","buffered","catch","oldActiveAudio","existingSound","song","onReady","location","protocol"],"mappings":"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","file":"feed.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction placeHoldersCount (b64) {\n  var len = b64.length\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // the number of equal signs (place holders)\n  // if there are two placeholders, than the two characters before it\n  // represent one byte\n  // if there is only one, then the three characters before it represent 2 bytes\n  // this is just a cheap hack to not do indexOf twice\n  return b64[len - 2] === '=' ? 2 : b64[len - 1] === '=' ? 1 : 0\n}\n\nfunction byteLength (b64) {\n  // base64 is 4/3 + up to two characters of the original data\n  return (b64.length * 3 / 4) - placeHoldersCount(b64)\n}\n\nfunction toByteArray (b64) {\n  var i, l, tmp, placeHolders, arr\n  var len = b64.length\n  placeHolders = placeHoldersCount(b64)\n\n  arr = new Arr((len * 3 / 4) - placeHolders)\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  l = placeHolders > 0 ? len - 4 : len\n\n  var L = 0\n\n  for (i = 0; i < l; i += 4) {\n    tmp = (revLookup[b64.charCodeAt(i)] << 18) | (revLookup[b64.charCodeAt(i + 1)] << 12) | (revLookup[b64.charCodeAt(i + 2)] << 6) | revLookup[b64.charCodeAt(i + 3)]\n    arr[L++] = (tmp >> 16) & 0xFF\n    arr[L++] = (tmp >> 8) & 0xFF\n    arr[L++] = tmp & 0xFF\n  }\n\n  if (placeHolders === 2) {\n    tmp = (revLookup[b64.charCodeAt(i)] << 2) | (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[L++] = tmp & 0xFF\n  } else if (placeHolders === 1) {\n    tmp = (revLookup[b64.charCodeAt(i)] << 10) | (revLookup[b64.charCodeAt(i + 1)] << 4) | (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[L++] = (tmp >> 8) & 0xFF\n    arr[L++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] + lookup[num >> 12 & 0x3F] + lookup[num >> 6 & 0x3F] + lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp = (uint8[i] << 16) + (uint8[i + 1] << 8) + (uint8[i + 2])\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var output = ''\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    output += lookup[tmp >> 2]\n    output += lookup[(tmp << 4) & 0x3F]\n    output += '=='\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + (uint8[len - 1])\n    output += lookup[tmp >> 10]\n    output += lookup[(tmp >> 4) & 0x3F]\n    output += lookup[(tmp << 2) & 0x3F]\n    output += '='\n  }\n\n  parts.push(output)\n\n  return parts.join('')\n}\n","/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <https://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nvar base64 = require('base64-js')\nvar ieee754 = require('ieee754')\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\nvar K_MAX_LENGTH = 0x7fffffff\nexports.kMaxLength = K_MAX_LENGTH\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Print warning and recommend using `buffer` v4.x which has an Object\n *               implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * We report that the browser does not support typed arrays if the are not subclassable\n * using __proto__. Firefox 4-29 lacks support for adding new properties to `Uint8Array`\n * (See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438). IE 10 lacks support\n * for __proto__ and has a buggy typed array implementation.\n */\nBuffer.TYPED_ARRAY_SUPPORT = typedArraySupport()\n\nif (!Buffer.TYPED_ARRAY_SUPPORT && typeof console !== 'undefined' &&\n    typeof console.error === 'function') {\n  console.error(\n    'This browser lacks typed array (Uint8Array) support which is required by ' +\n    '`buffer` v5.x. Use `buffer` v4.x if you require old browser support.'\n  )\n}\n\nfunction typedArraySupport () {\n  // Can typed array instances can be augmented?\n  try {\n    var arr = new Uint8Array(1)\n    arr.__proto__ = {__proto__: Uint8Array.prototype, foo: function () { return 42 }}\n    return arr.foo() === 42\n  } catch (e) {\n    return false\n  }\n}\n\nfunction createBuffer (length) {\n  if (length > K_MAX_LENGTH) {\n    throw new RangeError('Invalid typed array length')\n  }\n  // Return an augmented `Uint8Array` instance\n  var buf = new Uint8Array(length)\n  buf.__proto__ = Buffer.prototype\n  return buf\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new Error(\n        'If encoding is specified then the first argument must be a string'\n      )\n    }\n    return allocUnsafe(arg)\n  }\n  return from(arg, encodingOrOffset, length)\n}\n\n// Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97\nif (typeof Symbol !== 'undefined' && Symbol.species &&\n    Buffer[Symbol.species] === Buffer) {\n  Object.defineProperty(Buffer, Symbol.species, {\n    value: null,\n    configurable: true,\n    enumerable: false,\n    writable: false\n  })\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\nfunction from (value, encodingOrOffset, length) {\n  if (typeof value === 'number') {\n    throw new TypeError('\"value\" argument must not be a number')\n  }\n\n  if (isArrayBuffer(value)) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'string') {\n    return fromString(value, encodingOrOffset)\n  }\n\n  return fromObject(value)\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(value, encodingOrOffset, length)\n}\n\n// Note: Change prototype *after* Buffer.from is defined to workaround Chrome bug:\n// https://github.com/feross/buffer/pull/148\nBuffer.prototype.__proto__ = Uint8Array.prototype\nBuffer.__proto__ = Uint8Array\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be a number')\n  } else if (size < 0) {\n    throw new RangeError('\"size\" argument must not be negative')\n  }\n}\n\nfunction alloc (size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpretted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(size).fill(fill, encoding)\n      : createBuffer(size).fill(fill)\n  }\n  return createBuffer(size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(size, fill, encoding)\n}\n\nfunction allocUnsafe (size) {\n  assertSize(size)\n  return createBuffer(size < 0 ? 0 : checked(size) | 0)\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(size)\n}\n\nfunction fromString (string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('\"encoding\" must be a valid string encoding')\n  }\n\n  var length = byteLength(string, encoding) | 0\n  var buf = createBuffer(length)\n\n  var actual = buf.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    buf = buf.slice(0, actual)\n  }\n\n  return buf\n}\n\nfunction fromArrayLike (array) {\n  var length = array.length < 0 ? 0 : checked(array.length) | 0\n  var buf = createBuffer(length)\n  for (var i = 0; i < length; i += 1) {\n    buf[i] = array[i] & 255\n  }\n  return buf\n}\n\nfunction fromArrayBuffer (array, byteOffset, length) {\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\\'offset\\' is out of bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\\'length\\' is out of bounds')\n  }\n\n  var buf\n  if (byteOffset === undefined && length === undefined) {\n    buf = new Uint8Array(array)\n  } else if (length === undefined) {\n    buf = new Uint8Array(array, byteOffset)\n  } else {\n    buf = new Uint8Array(array, byteOffset, length)\n  }\n\n  // Return an augmented `Uint8Array` instance\n  buf.__proto__ = Buffer.prototype\n  return buf\n}\n\nfunction fromObject (obj) {\n  if (Buffer.isBuffer(obj)) {\n    var len = checked(obj.length) | 0\n    var buf = createBuffer(len)\n\n    if (buf.length === 0) {\n      return buf\n    }\n\n    obj.copy(buf, 0, 0, len)\n    return buf\n  }\n\n  if (obj) {\n    if (isArrayBufferView(obj) || 'length' in obj) {\n      if (typeof obj.length !== 'number' || numberIsNaN(obj.length)) {\n        return createBuffer(0)\n      }\n      return fromArrayLike(obj)\n    }\n\n    if (obj.type === 'Buffer' && Array.isArray(obj.data)) {\n      return fromArrayLike(obj.data)\n    }\n  }\n\n  throw new TypeError('First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.')\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < K_MAX_LENGTH` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= K_MAX_LENGTH) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + K_MAX_LENGTH.toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return b != null && b._isBuffer === true\n}\n\nBuffer.compare = function compare (a, b) {\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError('Arguments must be Buffers')\n  }\n\n  if (a === b) return 0\n\n  var x = a.length\n  var y = b.length\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!Array.isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  var i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  var buffer = Buffer.allocUnsafe(length)\n  var pos = 0\n  for (i = 0; i < list.length; ++i) {\n    var buf = list[i]\n    if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    }\n    buf.copy(buffer, pos)\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (isArrayBufferView(string) || isArrayBuffer(string)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    string = '' + string\n  }\n\n  var len = string.length\n  if (len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n      case undefined:\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) return utf8ToBytes(string).length // assume utf8\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  var loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// This property is used by `Buffer.isBuffer` (and the `is-buffer` npm package)\n// to detect a Buffer instance. It's not possible to use `instanceof Buffer`\n// reliably in a browserify context because there could be multiple different\n// copies of the 'buffer' package in use. This method works even for Buffer\n// instances that were created from another copy of the `buffer` package.\n// See: https://github.com/feross/buffer/issues/154\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  var i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  var len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (var i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  var len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (var i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  var len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (var i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  var length = this.length\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  var str = ''\n  var max = exports.INSPECT_MAX_BYTES\n  if (this.length > 0) {\n    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ')\n    if (this.length > max) str += ' ... '\n  }\n  return '<Buffer ' + str + '>'\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError('Argument must be a Buffer')\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  var x = thisEnd - thisStart\n  var y = end - start\n  var len = Math.min(x, y)\n\n  var thisCopy = this.slice(thisStart, thisEnd)\n  var targetCopy = target.slice(start, end)\n\n  for (var i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset  // Coerce to Number.\n  if (numberIsNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [ val ], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  var indexSize = 1\n  var arrLength = arr.length\n  var valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  var i\n  if (dir) {\n    var foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      var found = true\n      for (var j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  var remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  // must be an even number of digits\n  var strLen = string.length\n  if (strLen % 2 !== 0) throw new TypeError('Invalid hex string')\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  for (var i = 0; i < length; ++i) {\n    var parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (numberIsNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction latin1Write (buf, string, offset, length) {\n  return asciiWrite(buf, string, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset >>> 0\n    if (isFinite(length)) {\n      length = length >>> 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  var remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n        return asciiWrite(this, string, offset, length)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Write(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  var res = []\n\n  var i = start\n  while (i < end) {\n    var firstByte = buf[i]\n    var codePoint = null\n    var bytesPerSequence = (firstByte > 0xEF) ? 4\n      : (firstByte > 0xDF) ? 3\n      : (firstByte > 0xBF) ? 2\n      : 1\n\n    if (i + bytesPerSequence <= end) {\n      var secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nvar MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  var len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  var res = ''\n  var i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  var len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  var out = ''\n  for (var i = start; i < end; ++i) {\n    out += toHex(buf[i])\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  var bytes = buf.slice(start, end)\n  var res = ''\n  for (var i = 0; i < bytes.length; i += 2) {\n    res += String.fromCharCode(bytes[i] + (bytes[i + 1] * 256))\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  var len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  var newBuf = this.subarray(start, end)\n  // Return an augmented `Uint8Array` instance\n  newBuf.__proto__ = Buffer.prototype\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  var val = this[offset + --byteLength]\n  var mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var i = byteLength\n  var mul = 1\n  var val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var mul = 1\n  var i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset + 3] = (value >>> 24)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 1] = (value >>> 8)\n  this[offset] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    var limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = 0\n  var mul = 1\n  var sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    var limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  var sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 3] = (value >>> 24)\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  var len = end - start\n  var i\n\n  if (this === target && start < targetStart && targetStart < end) {\n    // descending copy from end\n    for (i = len - 1; i >= 0; --i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else if (len < 1000) {\n    // ascending copy from start\n    for (i = 0; i < len; ++i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, start + len),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (val.length === 1) {\n      var code = val.charCodeAt(0)\n      if (code < 256) {\n        val = code\n      }\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  var i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    var bytes = Buffer.isBuffer(val)\n      ? val\n      : new Buffer(val, encoding)\n    var len = bytes.length\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// HELPER FUNCTIONS\n// ================\n\nvar INVALID_BASE64_RE = /[^+/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = str.trim().replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction toHex (n) {\n  if (n < 16) return '0' + n.toString(16)\n  return n.toString(16)\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  var codePoint\n  var length = string.length\n  var leadSurrogate = null\n  var bytes = []\n\n  for (var i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  var c, hi, lo\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  for (var i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\n// ArrayBuffers from another context (i.e. an iframe) do not pass the `instanceof` check\n// but they should be treated as valid. See: https://github.com/feross/buffer/issues/166\nfunction isArrayBuffer (obj) {\n  return obj instanceof ArrayBuffer ||\n    (obj != null && obj.constructor != null && obj.constructor.name === 'ArrayBuffer' &&\n      typeof obj.byteLength === 'number')\n}\n\n// Node 0.10 supports `ArrayBuffer` but lacks `ArrayBuffer.isView`\nfunction isArrayBufferView (obj) {\n  return (typeof ArrayBuffer.isView === 'function') && ArrayBuffer.isView(obj)\n}\n\nfunction numberIsNaN (obj) {\n  return obj !== obj // eslint-disable-line no-self-compare\n}\n","exports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = nBytes * 8 - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = e * 256 + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = m * 256 + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = nBytes * 8 - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = (value * c - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n","/*\n * $Id: base64.js,v 2.15 2014/04/05 12:58:57 dankogai Exp dankogai $\n *\n *  Licensed under the BSD 3-Clause License.\n *    http://opensource.org/licenses/BSD-3-Clause\n *\n *  References:\n *    http://en.wikipedia.org/wiki/Base64\n */\n;(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory(global) :\n    typeof define === 'function' && define.amd ? define(factory) :\n    global.moment = factory(global)\n}((   typeof self   !== 'undefined' ? self\n: typeof window !== 'undefined' ? window\n: typeof global !== 'undefined' ? global\n: this\n), function(global) {\n    'use strict';\n    // existing version for noConflict()\n    var _Base64 = global.Base64;\n    var version = \"2.4.0\";\n    // if node.js, we use Buffer\n    var buffer;\n    if (typeof module !== 'undefined' && module.exports) {\n        try {\n            buffer = require('buffer').Buffer;\n        } catch (err) {}\n    }\n    // constants\n    var b64chars\n        = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n    var b64tab = function(bin) {\n        var t = {};\n        for (var i = 0, l = bin.length; i < l; i++) t[bin.charAt(i)] = i;\n        return t;\n    }(b64chars);\n    var fromCharCode = String.fromCharCode;\n    // encoder stuff\n    var cb_utob = function(c) {\n        if (c.length < 2) {\n            var cc = c.charCodeAt(0);\n            return cc < 0x80 ? c\n                : cc < 0x800 ? (fromCharCode(0xc0 | (cc >>> 6))\n                                + fromCharCode(0x80 | (cc & 0x3f)))\n                : (fromCharCode(0xe0 | ((cc >>> 12) & 0x0f))\n                   + fromCharCode(0x80 | ((cc >>>  6) & 0x3f))\n                   + fromCharCode(0x80 | ( cc         & 0x3f)));\n        } else {\n            var cc = 0x10000\n                + (c.charCodeAt(0) - 0xD800) * 0x400\n                + (c.charCodeAt(1) - 0xDC00);\n            return (fromCharCode(0xf0 | ((cc >>> 18) & 0x07))\n                    + fromCharCode(0x80 | ((cc >>> 12) & 0x3f))\n                    + fromCharCode(0x80 | ((cc >>>  6) & 0x3f))\n                    + fromCharCode(0x80 | ( cc         & 0x3f)));\n        }\n    };\n    var re_utob = /[\\uD800-\\uDBFF][\\uDC00-\\uDFFFF]|[^\\x00-\\x7F]/g;\n    var utob = function(u) {\n        return u.replace(re_utob, cb_utob);\n    };\n    var cb_encode = function(ccc) {\n        var padlen = [0, 2, 1][ccc.length % 3],\n        ord = ccc.charCodeAt(0) << 16\n            | ((ccc.length > 1 ? ccc.charCodeAt(1) : 0) << 8)\n            | ((ccc.length > 2 ? ccc.charCodeAt(2) : 0)),\n        chars = [\n            b64chars.charAt( ord >>> 18),\n            b64chars.charAt((ord >>> 12) & 63),\n            padlen >= 2 ? '=' : b64chars.charAt((ord >>> 6) & 63),\n            padlen >= 1 ? '=' : b64chars.charAt(ord & 63)\n        ];\n        return chars.join('');\n    };\n    var btoa = global.btoa ? function(b) {\n        return global.btoa(b);\n    } : function(b) {\n        return b.replace(/[\\s\\S]{1,3}/g, cb_encode);\n    };\n    var _encode = buffer ?\n        buffer.from && buffer.from !== Uint8Array.from ? function (u) {\n            return (u.constructor === buffer.constructor ? u : buffer.from(u))\n                .toString('base64')\n        }\n        :  function (u) {\n            return (u.constructor === buffer.constructor ? u : new  buffer(u))\n                .toString('base64')\n        }\n        : function (u) { return btoa(utob(u)) }\n    ;\n    var encode = function(u, urisafe) {\n        return !urisafe\n            ? _encode(String(u))\n            : _encode(String(u)).replace(/[+\\/]/g, function(m0) {\n                return m0 == '+' ? '-' : '_';\n            }).replace(/=/g, '');\n    };\n    var encodeURI = function(u) { return encode(u, true) };\n    // decoder stuff\n    var re_btou = new RegExp([\n        '[\\xC0-\\xDF][\\x80-\\xBF]',\n        '[\\xE0-\\xEF][\\x80-\\xBF]{2}',\n        '[\\xF0-\\xF7][\\x80-\\xBF]{3}'\n    ].join('|'), 'g');\n    var cb_btou = function(cccc) {\n        switch(cccc.length) {\n        case 4:\n            var cp = ((0x07 & cccc.charCodeAt(0)) << 18)\n                |    ((0x3f & cccc.charCodeAt(1)) << 12)\n                |    ((0x3f & cccc.charCodeAt(2)) <<  6)\n                |     (0x3f & cccc.charCodeAt(3)),\n            offset = cp - 0x10000;\n            return (fromCharCode((offset  >>> 10) + 0xD800)\n                    + fromCharCode((offset & 0x3FF) + 0xDC00));\n        case 3:\n            return fromCharCode(\n                ((0x0f & cccc.charCodeAt(0)) << 12)\n                    | ((0x3f & cccc.charCodeAt(1)) << 6)\n                    |  (0x3f & cccc.charCodeAt(2))\n            );\n        default:\n            return  fromCharCode(\n                ((0x1f & cccc.charCodeAt(0)) << 6)\n                    |  (0x3f & cccc.charCodeAt(1))\n            );\n        }\n    };\n    var btou = function(b) {\n        return b.replace(re_btou, cb_btou);\n    };\n    var cb_decode = function(cccc) {\n        var len = cccc.length,\n        padlen = len % 4,\n        n = (len > 0 ? b64tab[cccc.charAt(0)] << 18 : 0)\n            | (len > 1 ? b64tab[cccc.charAt(1)] << 12 : 0)\n            | (len > 2 ? b64tab[cccc.charAt(2)] <<  6 : 0)\n            | (len > 3 ? b64tab[cccc.charAt(3)]       : 0),\n        chars = [\n            fromCharCode( n >>> 16),\n            fromCharCode((n >>>  8) & 0xff),\n            fromCharCode( n         & 0xff)\n        ];\n        chars.length -= [0, 0, 2, 1][padlen];\n        return chars.join('');\n    };\n    var atob = global.atob ? function(a) {\n        return global.atob(a);\n    } : function(a){\n        return a.replace(/[\\s\\S]{1,4}/g, cb_decode);\n    };\n    var _decode = buffer ?\n        buffer.from && buffer.from !== Uint8Array.from ? function(a) {\n            return (a.constructor === buffer.constructor\n                    ? a : buffer.from(a, 'base64')).toString();\n        }\n        : function(a) {\n            return (a.constructor === buffer.constructor\n                    ? a : new buffer(a, 'base64')).toString();\n        }\n        : function(a) { return btou(atob(a)) };\n    var decode = function(a){\n        return _decode(\n            String(a).replace(/[-_]/g, function(m0) { return m0 == '-' ? '+' : '/' })\n                .replace(/[^A-Za-z0-9\\+\\/]/g, '')\n        );\n    };\n    var noConflict = function() {\n        var Base64 = global.Base64;\n        global.Base64 = _Base64;\n        return Base64;\n    };\n    // export Base64\n    global.Base64 = {\n        VERSION: version,\n        atob: atob,\n        btoa: btoa,\n        fromBase64: decode,\n        toBase64: encode,\n        utob: utob,\n        encode: encode,\n        encodeURI: encodeURI,\n        btou: btou,\n        decode: decode,\n        noConflict: noConflict\n    };\n    // if ES5 is available, make Base64.extendString() available\n    if (typeof Object.defineProperty === 'function') {\n        var noEnum = function(v){\n            return {value:v,enumerable:false,writable:true,configurable:true};\n        };\n        global.Base64.extendString = function () {\n            Object.defineProperty(\n                String.prototype, 'fromBase64', noEnum(function () {\n                    return decode(this)\n                }));\n            Object.defineProperty(\n                String.prototype, 'toBase64', noEnum(function (urisafe) {\n                    return encode(this, urisafe)\n                }));\n            Object.defineProperty(\n                String.prototype, 'toBase64URI', noEnum(function () {\n                    return encode(this, true)\n                }));\n        };\n    }\n    //\n    // export Base64 to the namespace\n    //\n    if (global['Meteor']) { // Meteor.js\n        Base64 = global.Base64;\n    }\n    // module.exports and AMD are mutually exclusive.\n    // module.exports has precedence.\n    if (typeof module !== 'undefined' && module.exports) {\n        module.exports.Base64 = global.Base64;\n    }\n    else if (typeof define === 'function' && define.amd) {\n        // AMD. Register as an anonymous module.\n        define([], function(){ return global.Base64 });\n    }\n    // that's it!\n    return {Base64: global.Base64}\n}));\n","'use strict';\n\nexports.__esModule = true;\nexports.removeCookie = exports.setRawCookie = exports.getRawCookie = exports.setCookie = exports.getAllCookies = exports.getCookie = exports.isCookieEnabled = exports.remove = exports.setRaw = exports.getRaw = exports.set = exports.getAll = exports.get = exports.isEnabled = undefined;\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar _util = require('./util');\n\n// Check if the browser cookie is enabled.\nfunction isEnabled() {\n  var key = '@key@';\n  var value = '1';\n  var re = new RegExp('(?:^|; )' + key + '=' + value + '(?:;|$)');\n\n  document.cookie = key + '=' + value;\n\n  var enabled = re.test(document.cookie);\n\n  if (enabled) {\n    // eslint-disable-next-line\n    remove(key);\n  }\n\n  return enabled;\n}\n\n// Get the cookie value by key.\nfunction get(key) {\n  var decoder = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : decodeURIComponent;\n\n  if (typeof key !== 'string' || !key) {\n    return null;\n  }\n\n  var reKey = new RegExp('(?:^|; )' + (0, _util.escapeRe)(key) + '(?:=([^;]*))?(?:;|$)');\n  var match = reKey.exec(document.cookie);\n\n  if (match === null) {\n    return null;\n  }\n\n  return typeof decoder === 'function' ? decoder(match[1]) : match[1];\n}\n\n// The all cookies\nfunction getAll() {\n  var decoder = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : decodeURIComponent;\n\n  var reKey = /(?:^|; )([^=]+?)(?:=([^;]*))?(?:;|$)/g;\n  var cookies = {};\n  var match = void 0;\n\n  /* eslint-disable no-cond-assign */\n  while (match = reKey.exec(document.cookie)) {\n    reKey.lastIndex = match.index + match.length - 1;\n    cookies[match[1]] = typeof decoder === 'function' ? decoder(match[2]) : match[2];\n  }\n\n  return cookies;\n}\n\n// Set a cookie.\nfunction set(key, value) {\n  var encoder = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : encodeURIComponent;\n  var attrs = arguments[3];\n\n  if ((typeof encoder === 'undefined' ? 'undefined' : _typeof(encoder)) === 'object' && encoder !== null) {\n    /* eslint-disable no-param-reassign */\n    attrs = encoder;\n    encoder = encodeURIComponent;\n    /* eslint-enable no-param-reassign */\n  }\n  var attrsStr = (0, _util.convert)(attrs || {});\n  var valueStr = typeof encoder === 'function' ? encoder(value) : value;\n  var newCookie = key + '=' + valueStr + attrsStr;\n  document.cookie = newCookie;\n}\n\n// Remove a cookie by the specified key.\nfunction remove(key, options) {\n  var opts = { expires: -1 };\n\n  if (options && options.domain) {\n    opts.domain = options.domain;\n  }\n\n  return set(key, 'a', opts);\n}\n\n// Get the cookie's value without decoding.\nfunction getRaw(key) {\n  return get(key, null);\n}\n\n// Set a cookie without encoding the value.\nfunction setRaw(key, value, opts) {\n  return set(key, value, null, opts);\n}\n\nexports.isEnabled = isEnabled;\nexports.get = get;\nexports.getAll = getAll;\nexports.set = set;\nexports.getRaw = getRaw;\nexports.setRaw = setRaw;\nexports.remove = remove;\nexports.isCookieEnabled = isEnabled;\nexports.getCookie = get;\nexports.getAllCookies = getAll;\nexports.setCookie = set;\nexports.getRawCookie = getRaw;\nexports.setRawCookie = setRaw;\nexports.removeCookie = remove;","'use strict';\n\nexports.__esModule = true;\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nfunction hasOwn(obj, key) {\n  return Object.prototype.hasOwnProperty.call(obj, key);\n}\n\n// Escape special characters.\nfunction escapeRe(str) {\n  return str.replace(/[.*+?^$|[\\](){}\\\\-]/g, '\\\\$&');\n}\n\n// Return a future date by the given string.\nfunction computeExpires(str) {\n  var lastCh = str.charAt(str.length - 1);\n  var value = parseInt(str, 10);\n  var expires = new Date();\n\n  switch (lastCh) {\n    case 'Y':\n      expires.setFullYear(expires.getFullYear() + value);break;\n    case 'M':\n      expires.setMonth(expires.getMonth() + value);break;\n    case 'D':\n      expires.setDate(expires.getDate() + value);break;\n    case 'h':\n      expires.setHours(expires.getHours() + value);break;\n    case 'm':\n      expires.setMinutes(expires.getMinutes() + value);break;\n    case 's':\n      expires.setSeconds(expires.getSeconds() + value);break;\n    default:\n      expires = new Date(str);\n  }\n\n  return expires;\n}\n\n// Convert an object to a cookie option string.\nfunction convert(opts) {\n  var res = '';\n\n  // eslint-disable-next-line\n  for (var key in opts) {\n    if (hasOwn(opts, key)) {\n      if (/^expires$/i.test(key)) {\n        var expires = opts[key];\n\n        if ((typeof expires === 'undefined' ? 'undefined' : _typeof(expires)) !== 'object') {\n          expires += typeof expires === 'number' ? 'D' : '';\n          expires = computeExpires(expires);\n        }\n        res += ';' + key + '=' + expires.toUTCString();\n      } else if (/^secure$/.test(key)) {\n        if (opts[key]) {\n          res += ';' + key;\n        }\n      } else {\n        res += ';' + key + '=' + opts[key];\n      }\n    }\n  }\n\n  if (!hasOwn(opts, 'path')) {\n    res += ';path=/';\n  }\n\n  return res;\n}\n\nexports.hasOwn = hasOwn;\nexports.escapeRe = escapeRe;\nexports.computeExpires = computeExpires;\nexports.convert = convert;","/*global module:false */\n\n/*\n *  Events mixin from Backbone \n *\n *  Backbone.js 1.0.0\n *\n *  (c) 2010-2013 Jeremy Ashkenas, DocumentCloud Inc.\n *  Backbone may be freely distributed under the MIT license.\n *  For all details and documentation:\n *  http:*backbonejs.org\n *\n *  A module that can be mixed in to *any object* in order to provide it with\n *  custom events. You may bind with `on` or remove with `off` callback functions\n *  to an event; trigger`-ing an event fires all callbacks in succession.\n *\n *  var object = {};\n *  _.extend(object, Backbone.Events);\n *  object.on('expand', function(){ alert('expanded'); });\n *  object.trigger('expand');\n */\n\nvar _ = (typeof window !== \"undefined\" ? window['_'] : typeof global !== \"undefined\" ? global['_'] : null);\n\nvar slice = Array.prototype.slice;\n\nvar Events = {\n\n  // Bind an event to a `callback` function. Passing `\"all\"` will bind\n  // the callback to all events fired.\n  on: function(name, callback, context) {\n    if (!eventsApi(this, 'on', name, [callback, context]) || !callback) { return this; }\n    if (!this._events) { this._events = {}; }\n    var events = this._events[name] || (this._events[name] = []);\n    events.push({callback: callback, context: context, ctx: context || this});\n    return this;\n  },\n\n  // Bind an event to only be triggered a single time. After the first time\n  // the callback is invoked, it will be removed.\n  once: function(name, callback, context) {\n    if (!eventsApi(this, 'once', name, [callback, context]) || !callback) { return this; }\n    var self = this;\n    var once = _.once(function() {\n      self.off(name, once);\n      callback.apply(this, arguments);\n    });\n    once._callback = callback;\n    return this.on(name, once, context);\n  },\n\n  // Remove one or many callbacks. If `context` is null, removes all\n  // callbacks with that function. If `callback` is null, removes all\n  // callbacks for the event. If `name` is null, removes all bound\n  // callbacks for all events.\n  off: function(name, callback, context) {\n    var retain, ev, events, names, i, l, j, k;\n    if (!this._events || !eventsApi(this, 'off', name, [callback, context])) { return this; }\n    if (!name && !callback && !context) {\n      this._events = {};\n      return this;\n    }\n\n    names = name ? [name] : _.keys(this._events);\n    for (i = 0, l = names.length; i < l; i++) {\n      name = names[i];\n      if (events = this._events[name]) {\n        this._events[name] = retain = [];\n        if (callback || context) {\n          for (j = 0, k = events.length; j < k; j++) {\n            ev = events[j];\n            if ((callback && callback !== ev.callback && callback !== ev.callback._callback) ||\n                (context && context !== ev.context)) {\n              retain.push(ev);\n            }\n          }\n        }\n        if (!retain.length) { delete this._events[name]; }\n      }\n    }\n\n    return this;\n  },\n\n  // Trigger one or many events, firing all bound callbacks. Callbacks are\n  // passed the same arguments as `trigger` is, apart from the event name\n  // (unless you're listening on `\"all\"`, which will cause your callback to\n  // receive the true name of the event as the first argument).\n  trigger: function(name) {\n    if (!this._events) { return this; }\n    var args = slice.call(arguments, 1);\n    if (!eventsApi(this, 'trigger', name, args)) { return this; }\n    var events = this._events[name];\n    var allEvents = this._events.all;\n    if (events) { triggerEvents(events, args); }\n    if (allEvents) { triggerEvents(allEvents, arguments); }\n    return this;\n  },\n\n  // Tell this object to stop listening to either specific events ... or\n  // to every object it's currently listening to.\n  stopListening: function(obj, name, callback) {\n    var listeners = this._listeners;\n    if (!listeners) { return this; }\n    var deleteListener = !name && !callback;\n    if (typeof name === 'object') { callback = this; }\n    if (obj) { (listeners = {})[obj._listenerId] = obj; }\n    /*jshint forin:false */\n    for (var id in listeners) {\n      listeners[id].off(name, callback, this);\n      if (deleteListener) { delete this._listeners[id]; }\n    }\n    return this;\n  }\n\n};\n\n// Regular expression used to split event strings.\nvar eventSplitter = /\\s+/;\n\n// Implement fancy features of the Events API such as multiple event\n// names `\"change blur\"` and jQuery-style event maps `{change: action}`\n// in terms of the existing API.\nvar eventsApi = function(obj, action, name, rest) {\n  if (!name) { return true; }\n\n  // Handle event maps.\n  if (typeof name === 'object') {\n    /*jshint forin:false */\n    for (var key in name) {\n      obj[action].apply(obj, [key, name[key]].concat(rest));\n    }\n    return false;\n  }\n\n  // Handle space separated event names.\n  if (eventSplitter.test(name)) {\n    var names = name.split(eventSplitter);\n    for (var i = 0, l = names.length; i < l; i++) {\n      obj[action].apply(obj, [names[i]].concat(rest));\n    }\n    return false;\n  }\n\n  return true;\n};\n\n// A difficult-to-believe, but optimized internal dispatch function for\n// triggering events. Tries to keep the usual cases speedy (most internal\n// Backbone events have 3 arguments).\nvar triggerEvents = function(events, args) {\n  var ev, i = -1, l = events.length, a1 = args[0], a2 = args[1], a3 = args[2];\n  switch (args.length) {\n    case 0: while (++i < l) { (ev = events[i]).callback.call(ev.ctx); } return;\n    case 1: while (++i < l) { (ev = events[i]).callback.call(ev.ctx, a1); } return;\n    case 2: while (++i < l) { (ev = events[i]).callback.call(ev.ctx, a1, a2); } return;\n    case 3: while (++i < l) { (ev = events[i]).callback.call(ev.ctx, a1, a2, a3); } return;\n    default: while (++i < l) { (ev = events[i]).callback.apply(ev.ctx, args); }\n  }\n};\n\nvar listenMethods = {listenTo: 'on', listenToOnce: 'once'};\n\n// Inversion-of-control versions of `on` and `once`. Tell *this* object to\n// listen to an event in another object ... keeping track of what it's\n// listening to.\n_.each(listenMethods, function(implementation, method) {\n  Events[method] = function(obj, name, callback) {\n    var listeners = this._listeners || (this._listeners = {});\n    var id = obj._listenerId || (obj._listenerId = _.uniqueId('l'));\n    listeners[id] = obj;\n    if (typeof name === 'object') { callback = this; }\n    obj[implementation](name, callback, this);\n    return this;\n  };\n});\n\nmodule.exports = Events;\n","/*global module:false */\n\nmodule.exports = function() { };\n\n","/*global module:false */\n/*jshint camelcase:false */\n\n/*\n *  Feed Media Player View\n *\n *  This class will respond to events from an instance of Feed.Player\n *  and pass on user requests to the instance.\n *\n *  Create this with:\n *\n *    player = new Feed.Player(token, secret);\n *    playerView = new Feed.PlayerView(id, player);\n *\n *  Where 'id' is the ID of the DOM element containing the player.\n *  The player should have the following elements in it:\n *\n *  <div id='player-view'>\n *    <div>\n *      <div class='position'><div class='progress'></div></div> \n *      <span class='status'>\n *        <span class='track'>track</span> by <span class='artist'>artist</span> on <span class='release'>release</span>\n *      </span>\n *    </div>\n *    <div class='elapsed'></div>\n *    <div class='duration'></div>\n *    <button class='play-button button-enabled'>Play</button>\n *\n *    <button class='pause-button button-disabled'>Pause</button>\n *    <button class='skip-button button-disabled'>Skip</button>\n *    <button class='like-button button-disabled'>Like</button>\n *    <button class='dislike-button button-disabled'>Dislike</button>\n *  </div>\n *\n *  The buttons should all be 'button-disabled' except for the play\n *  button. As the player changes state, it will change the\n *  'button-disabled' classes to 'button-enabled'.\n *\n *  Note that the 'play-button' is visible before any playback starts,\n *  and while playback is paused. If you want a button that is only visible\n *  before any playback has started, then create a 'start-button'. If you\n *  want a button that is only visible when playback is paused, then\n *  create a 'resume-button'.\n *\n *  The 'like' button has an additional 'liked' class that is added to\n *  it when the current song has been liked. Likewise, the 'dislike' button\n *  has a 'disliked' class added to it when the current song has been\n *  disliked.\n *\n *  The 'status' section will display the current song and the 'position'\n *  section will display the elapsed time played and duration of the\n *  song while it is playing. Additionally, error messages (like 'out of\n *  music' or 'can't skip') will be displayed for a few seconds in the\n *  status section as well.\n *\n *  The rendering of the status can be changed by overriding\n *  the renderStatus(statusText) method, and the rendering of the position\n *  can be changed by overriding the renderPosition(positionInMillis, durationInMillis)\n *  methods. If you just want to override how the title of a song is\n *  rendered, then the formatPlay(play) method should be overridden.\n *\n *  The top level player element will have one of four classes set at\n *  all times: 'state-playing', 'state-idle', 'state-paused', or 'state-suspended'\n *\n */\n\nvar _ = (typeof window !== \"undefined\" ? window['_'] : typeof global !== \"undefined\" ? global['_'] : null);\nvar $ = (typeof window !== \"undefined\" ? window['jQuery'] : typeof global !== \"undefined\" ? global['jQuery'] : null);\n\nvar PlayerView = function(id, player) {\n  this.id = id;\n  this.alertId = null;\n  this.durationId = null;\n  this.startedPlayback = false;\n\n  this.$el = $('#' + id);\n  this.player = player;\n\n  this.player.on('placement', this._onPlacement, this);\n  this.player.on('play-started', this._onPlayStarted, this);\n  this.player.on('play-paused', this._onPlayPaused, this);\n  this.player.on('play-resumed', this._onPlayResumed, this);\n  this.player.on('play-completed', this._onPlayCompleted, this);\n  this.player.on('play-liked', this._onPlayLiked, this);\n  this.player.on('play-unliked', this._onPlayUnliked, this);\n  this.player.on('play-disliked', this._onPlayDisliked, this);\n  this.player.on('plays-exhausted', this._onPlaysExhausted, this);\n  this.player.on('skip-denied', this._onSkipDenied, this);\n  this.player.on('suspend', this._onSuspend, this);\n\n  this._enableButtonsBasedOnState();\n  this.displayText = this.originalDisplayText = this.$('.status').html();\n  this.renderStatus();\n\n  this.$el.on('click', '.status', _.bind(this._onStatusClick, this));\n  this.$el.on('click', '.play-button, .start-button, .resume-button', _.bind(this._onPlayButtonClick, this));\n  this.$el.on('click', '.pause-button', _.bind(this._onPauseButtonClick, this));\n  this.$el.on('click', '.skip-button', _.bind(this._onSkipButtonClick, this));\n  this.$el.on('click', '.like-button', _.bind(this._onLikeButtonClick, this));\n  this.$el.on('click', '.dislike-button', _.bind(this._onDislikeButtonClick, this));\n};\n\nPlayerView.prototype._onStatusClick = function() {\n  var state = this.player.getCurrentState();\n\n  if (state === 'playing') {\n    this._onPauseButtonClick();\n\n  } else {\n    this._onPlayButtonClick();\n\n  }\n};\n\nPlayerView.prototype._onPlayButtonClick = function() {\n  this.player.initializeAudio();\n  this.player.play();\n};\n\nPlayerView.prototype._onPauseButtonClick = function() {\n  this.player.pause();\n};\n\nPlayerView.prototype._onSkipButtonClick = function() {\n  this.player.skip();\n};\n\nPlayerView.prototype._onLikeButtonClick = function(e) {\n  if ($(e.target).closest('.like-button').is('.liked')) {\n    this.player.unlike();\n\n  } else {\n    this.player.like();\n\n  }\n};\n\nPlayerView.prototype._onDislikeButtonClick = function() {\n  this.player.dislike();\n};\n\nPlayerView.prototype.$ = function(arg) {\n  return this.$el.find(arg);\n};\n\nPlayerView.prototype._onPlacement = function(placement) {\n  if (!this.originalDisplayText) {\n    this.originalDisplayText = this.formatPlacement(placement);\n\n    this.renderStatus(this.originalDisplayText);\n  }\n};\n\nPlayerView.prototype.formatPlacement = function(placement) {\n  return 'Tune in to <em class=\\'placement\\'>' + placement.name + '</em>';\n};\n\nPlayerView.prototype._onPlayStarted = function(play) {\n  this.startedPlayback = true;\n\n  this.renderStatus(this.formatPlay(play));\n  this._enableButtonsBasedOnState();\n  this._setLikeStatus(play.liked);\n  this._enablePositionTracker();\n};\n\nPlayerView.prototype._enablePositionTracker = function() {\n  var playerView = this;\n\n  if (!this.durationId) {\n    this.durationId = window.setInterval(function() {\n      playerView.renderPosition(playerView.player.getPosition(), playerView.player.getDuration());\n    }, 500);\n  }\n};\n\nPlayerView.prototype._setLikeStatus = function(liked) {\n  if (liked === true) {\n    // highlight the like button\n    this.$('.like-button').addClass('liked');\n    this.$('.dislike-button').removeClass('disliked');\n\n  } else if (liked === false) {\n    // highlight the dislike button\n    this.$('.like-button').removeClass('liked');\n    this.$('.dislike-button').addClass('disliked');\n\n  } else {\n    // nobody gets highlighted\n    this.$('.like-button').removeClass('liked');\n    this.$('.dislike-button').removeClass('disliked');\n\n  }\n};\n\nPlayerView.prototype._disablePositionTracker = function() {\n  if (this.durationId) {\n    window.clearInterval(this.durationId);\n    this.durationId = null;\n  }\n};\n\nPlayerView.prototype._onPlayResumed = function() {\n  this._enablePositionTracker();\n  \n  this._enableButtonsBasedOnState();\n};\n\nPlayerView.prototype._onPlayPaused = function() {\n  this._disablePositionTracker();\n\n  this._enableButtonsBasedOnState();\n};\n\nPlayerView.prototype._onPlayCompleted = function() {\n  this.renderPosition(0, 0);\n  this._enableButtonsBasedOnState();\n};\n\nPlayerView.prototype._onPlaysExhausted = function() {\n  this.renderStatus(this.originalDisplayText);\n  this.renderAlert('There is no more music to play in this station!');\n\n  this._enableButtonsBasedOnState();\n};\n\nPlayerView.prototype._onPlayLiked = function() {\n  this._setLikeStatus(true);\n};\n\nPlayerView.prototype._onPlayDisliked = function() {\n  this._setLikeStatus(false);\n};\n\nPlayerView.prototype._onPlayUnliked = function() {\n  this._setLikeStatus();\n};\n\nPlayerView.prototype._onSkipDenied = function() {\n  this.renderAlert('Sorry you\\'ve temporarily run out of skips!');\n};\n\nPlayerView.prototype.formatPlay = function(play) {\n  return '<span class=\\'track\\'>' + play.audio_file.track.title +\n     '</span> by <span class=\\'artist\\'>' + play.audio_file.artist.name +\n     '</span> on <span class=\\'release\\'>' + play.audio_file.release.title + '</span>';\n};\n\nPlayerView.prototype.renderStatus = function(displayText) {\n  if (displayText !== undefined) {\n    this.displayText = displayText;\n  }\n\n  if (!this.alertId) {\n    this.$('.status').html(this.displayText).removeClass('alert');\n  }\n};\n\nPlayerView.prototype.renderPosition = function(position, duration) {\n  this.$('.elapsed').html(formatTime(position));\n  this.$('.duration').html(formatTime(duration));\n\n  if (duration === 0) {\n    this.$('.progress').css('width', '0');\n  } else {\n    var elapsed = Math.round((position + 1000) / duration * 100);\n    elapsed = (elapsed > 100) ? 100 : elapsed;\n    this.$('.progress').css('width', elapsed + '%');\n  }\n};\n\nfunction formatTime(millis) {\n  var asSeconds = Math.floor(millis / 1000),\n      secondsPart = (asSeconds % 60),\n      minutesPart = Math.floor(asSeconds / 60);\n\n  if (secondsPart < 10) {\n    secondsPart = '0' + secondsPart;\n  }\n\n  return minutesPart + ':' + secondsPart;\n}\n\nPlayerView.prototype.renderAlert = function(alertText) {\n  if (this.alertId) {\n    window.clearTimeout(this.alertId);\n  }\n\n  this.$('.status').html(alertText).addClass('alert');\n\n  var playerView = this;\n  this.alertId = window.setTimeout(function() {\n    playerView.alertId = null;\n    playerView.renderStatus();\n  }, 3000);\n};\n\nPlayerView.prototype._onSuspend = function() {\n  this._enableButtonsBasedOnState();\n};\n\nPlayerView.prototype._enableButtonsBasedOnState = function() {\n  var state = this.player.getCurrentState(),\n      toEnable,\n      toDisable;\n\n  switch (state) {\n    case 'playing':\n      toEnable = '.pause-button, .like-button, .dislike-button';\n      toDisable = '.play-button, .start-button, .resume-button';\n\n      if (this.player.maybeCanSkip()) {\n        toEnable += ', .skip-button';\n      } else {\n        toDisable += ', .skip-button';\n      }\n      break;\n\n    case 'paused':\n      toEnable = '.play-button, .resume-button, .like-button, .dislike-button';\n      toDisable = '.pause-button, .start-button';\n\n      if (this.player.maybeCanSkip()) {\n        toEnable += ', .skip-button';\n      } else {\n        toDisable += ', .skip-button';\n      }\n      break;\n\n    case 'suspended':\n      toEnable = '';\n      toDisable = '.play-button, .resume-button, .like-button, .dislike-button, .pause-button, .start-button, .skip-button';\n\n      break;\n\n\n    /* case 'idle': */\n    default:\n      toEnable = '.play-button, .start-button';\n      toDisable = '.resume-button, .pause-button, .like-button, .dislike-button, .skip-button';\n      break;\n  }\n\n  this.$(toDisable)\n    .removeClass('button-enabled')\n    .addClass('button-disabled')\n    .attr('disabled', 'true');\n\n  if (toEnable) {\n    this.$(toEnable)\n      .removeClass('button-disabled')\n      .addClass('button-enabled')\n      .removeAttr('disabled');\n  }\n\n  this.$el\n    .removeClass('state-playing state-paused state-idle state-suspended')\n    .addClass('state-' + state);\n\n};\n\nmodule.exports = PlayerView;\n\n\n","/*global module:false */\n/*jshint camelcase:false */\n\n/*\n *  Feed Media Player\n *\n *  This class requests and plays audio files from the feed servers. It\n *  makes use of the Session class to communicate with the server. There\n *  should technically only ever be one instance of this class in a page.\n *  This class does no UI - that should be handled by Feed.PlayerView \n *  or similar.\n *\n *  Create this with:\n *    player = new Feed.Player(token, secret[, options])\n *\n *  options can be:\n *    trimming: false,      // when true, song start/end trims will be honored\n *    crossfadeIn: false,   // when true, songs do not fade in - they start at full volume\n *    normalizeVolume: true, // automatically adjust volume of songs in station to be at same approx loudness\n *    secondsOfCrossfade: 0 // number of seconds to crossfade songs during song transitions\n *\n *  In response to a user-interaction event, and before you begin any\n *  music playback, be sure to call:\n *\n *    player.initializeAudio();\n *\n *  That will ensure the library has permission from the browser to play\n *  audio.\n *\n *  Then control playback with:\n *\n *    tune() - load up information about the current placement, but\n *      don't actually start playing it. (can be called before initializeAudio())\n *    play() - start playing the current placement/station or resume the current song\n *    pause() - pause playback of the current song, if any\n *    like() - tell the server we like this song\n *    unlike() - tell the server to remove the 'like' for this song\n *    dislike() - tell the server we dislike this song, and skip to the next one\n *    skip() - request to skip the current song\n *    setStationId(xxx) - switch to a different station \n *\n *  player has a current state that can be queried with 'getCurrentState()':\n *    playing - if session.hasActivePlayStarted() and we're not paused\n *    paused -  if session.hasActivePlayStarted() and we're paused\n *    idle - if !session.hasActivePlayStarted()\n *    suspended - if player.suspend() has been called (ie - the player has\n *      been popped out into a new window)\n *\n *  session events are proxied via the play object:\n *    not-in-us - user isn't located in the US and can't play music\n *    stations - this is passed with an array of station objects that have station\n *      names and ids\n *    play-active - this play is queued up and ready for playback, but hasn't\n *      yet started.\n *    play-started - this play has begun playback.\n *    play-completed  - this play has completed playback.\n *    plays-exhausted - there are no more plays available from this placement/station combo\n *    skip-denied - the given song could not be skipped due to DMCA rules\n *    play-paused - the currently playing song was paused\n *    play-resumed - the currently playing song was resumed\n *    play-liked - the currently playing song was liked\n *    play-unliked - the currently playing song had it's 'like' status removed\n *    play-disliked - the currently playing song was disliked\n *    suspend - player.suspend() was called, and the player should stop playback\n *\n *  Some misc methods:\n *\n *    setMuted(muted)\n *    suspend - this returns the state of the player a an object that can be passed\n *      to the unsuspend() call.\n *    unsuspend(state, [startPlay]) - this call takes the state of a previously suspended player\n *      instance and makes this player match that one. These calls allow you to suspend\n *      the player, open up a new window, create a new player instance, and resume playback\n *      where you left off. This call should be made in place of a tune() or play() call.\n *\n */\n\nvar _ = (typeof window !== \"undefined\" ? window['_'] : typeof global !== \"undefined\" ? global['_'] : null);\nvar $ = (typeof window !== \"undefined\" ? window['jQuery'] : typeof global !== \"undefined\" ? global['jQuery'] : null);\nvar log = require('./nolog');\nvar getSpeaker = require('./speaker');\nvar Events = require('./events');\nvar Session = require('./session');\n\nfunction supports_html5_storage() {\n  try {\n    return 'localStorage' in window && window['localStorage'] !== null && (window.localStorage['feed-test'] = true);\n  } catch (e) {\n    return false;\n  }\n}\n\nvar Player = function(token, secret, options) {\n  this.state = {\n    paused: true,\n    suspended: false\n    // activePlay\n  };\n\n  options = options || {};\n\n  this.trimming = options.trimming || false;\n  this.normalizeVolume = options.normalizeVolume || true;\n  this.secondsOfCrossfade = options.secondsOfCrossfade || 0;\n  this.crossfadeIn = options.crossfadeIn || false;\n\n  _.extend(this, Events);\n\n  var session = this.session = new Session(token, secret, options);\n  this.session.on('play-active', this._onPlayActive, this);\n  this.session.on('play-started', this._onPlayStarted, this);\n  this.session.on('play-completed', this._onPlayCompleted, this);\n  this.session.on('plays-exhausted', this._onPlaysExhausted, this);\n  this.session.on('prepare-sound', this._onPrepareSound, this);\n\n  this.session.on('all', function() {\n    // propagate all events out to everybody else\n    this.trigger.apply(this, Array.prototype.slice.call(arguments, 0));\n  }, this);\n\n  // create 'speakerInitialized' promise so we can delay things until\n  // the audio subsystem is set up.\n  var initializeSpeaker = this.initializeSpeaker = $.Deferred();\n\n  this.speaker = getSpeaker(options, function(supportedFormats) {\n    if (options.formats) {\n      var reqFormatList = options.formats.split(','),\n          suppFormatList = supportedFormats.split(','),\n          reqAndSuppFormatList = _.intersection(reqFormatList, suppFormatList),\n          reqAndSuppFormats = reqAndSuppFormatList.join(',');\n\n      if (reqAndSuppFormatList.length === 0) {\n        reqAndSuppFormats = supportedFormats;\n      }\n\n      session.setFormats(reqAndSuppFormats);\n\n    } else {\n      session.setFormats(supportedFormats);\n    }\n    initializeSpeaker.resolve();\n  });\n\n  this.setMuted(this.isMuted());\n};\n\nPlayer.prototype.initializeAudio = function() {\n  var player = this;\n\n  this.initializeSpeaker.then(function() {\n    player.speaker.initializeAudio();\n  });\n}\n\nPlayer.prototype.setPlacementId = function(placementId) {\n  this.session.setPlacementId(placementId);\n};\n\nPlayer.prototype.setStationId = function(stationId) {\n  this.session.setStationId(stationId);\n};\n\nPlayer.prototype.setBaseUrl = function(baseUrl) {\n  this.session.setBaseUrl(baseUrl);\n};\n\nPlayer.prototype._onPlayActive = function(play) {\n  // create a new sound object\n  var options = {\n    play: _.bind(this._onSoundPlay, this, play.id),\n    pause: _.bind(this._onSoundPause, this, play.id),\n    finish:  _.bind(this._onSoundFinish, this, play.id),\n    elapse: _.bind(this._onSoundElapse, this, play.id),\n  };\n\n  if (this.normalizeVolume) {\n    options.gain = (play.audio_file.replaygain_track_gain || 0) + (play.station.pre_gain || 0);\n  }\n\n  if (this.trimming && play.audio_file.extra && play.audio_file.extra.trim_start) {\n    options.startPosition = play.audio_file.extra.trim_start * 1000;\n  }\n\n  if (this.trimming && play.audio_file.extra && play.audio_file.extra.trim_end &&\n      play.audio_file.duration_in_seconds) {\n    options.endPosition = (play.audio_file.duration_in_seconds - play.audio_file.extra.trim_end) * 1000;\n  }\n\n  if (this.secondsOfCrossfade) {\n    if (this.crossfadeIn) {\n      options.fadeInSeconds = this.secondsOfCrossfade;\n    }\n\n    options.fadeOutSeconds = this.secondsOfCrossfade;\n  }\n\n  var sound = this.speaker.create(play.audio_file.url, options);\n\n  this.state.activePlay = {\n    id: play.id,\n    sound: sound,\n    startReportedToServer: false, // whether we got a 'play-started' event from session\n    soundCompleted: false,        // whether the sound object told us it finished playback\n    playStarted: false,           // whether playback started on the sound object yet\n    previousPosition: 0           // last time we got an 'elapse' callback\n  };\n\n  // if we're not paused, then start it\n  if (!this.state.paused) {\n    var s = this.state.activePlay.sound;\n\n    s.play();\n  }\n};\n\nPlayer.prototype._onSoundPlay = function(playId) {\n  // sound started playing\n  if (!this.state.activePlay || (this.state.activePlay.id !== playId)) {\n    log('received sound play, but active play does not match', this.state.activePlay, playId);\n    return;\n  }\n  \n  this.state.paused = false;\n  this.state.activePlay.playStarted = true;\n\n  // on the first play, tell the server we're good to go\n  if (!this.state.activePlay.startReportedToServer) {\n    return this.session.reportPlayStarted();\n  }\n\n  // subsequent plays are considered 'resumed' events\n  this.trigger('play-resumed', this.session.getActivePlay());\n};\n\nPlayer.prototype.getActivePlay = function() {\n  return this.session.getActivePlay();\n};\n\nPlayer.prototype.hasActivePlayStarted = function() {\n  return this.session.hasActivePlayStarted();\n};\n\nPlayer.prototype.getActivePlacement = function() {\n  return this.session.getActivePlacement();\n};\n\nPlayer.prototype._onSoundPause = function(playId) {\n  // sound paused playback\n  if (!this.state.activePlay || (this.state.activePlay.id !== playId)) {\n    log('received sound pause, but active play does not match', this.state.activePlay, playId);\n    return;\n  }\n  \n  this.state.paused = true;\n\n  this.trigger('play-paused', this.session.getActivePlay());\n};\n\nPlayer.prototype._onSoundFinish = function(playId, withError) {\n  if (!this.state.activePlay || (this.state.activePlay.id !== playId)) {\n    log('received sound finish, but active play does not match', this.state.activePlay, playId);\n    return;\n  }\n\n  this.state.activePlay.soundCompleted = true;\n  if (withError) {\n    this.state.activePlay.soundCompletedWithError = true;\n  }\n\n  if (!this.state.activePlay.playStarted) {\n    // never reported this as started...  mark it as invalidated so\n    // we can advance.\n    this.session.requestInvalidate();\n\n    return;\n  }\n\n  if (!this.state.activePlay.startReportedToServer) {\n    // if the song failed before we recieved start response, wait\n    // until word from the server that we started before we say\n    // that we completed the song\n    return;\n  }\n\n  if (withError) {\n    log('song completed with error - marking as invalid');\n    this.session.requestInvalidate();\n\n  } else {\n    this.session.reportPlayCompleted();\n  }\n};\n\nPlayer.prototype._onSoundElapse = function(playId) {\n  if (!this.state.activePlay || (this.state.activePlay.id !== playId)) {\n    log('received sound elapse, but active play does not match', this.state.activePlay, playId);\n    return;\n  }\n\n  var sound = this.state.activePlay.sound,\n      position = sound.position(),\n      interval = 30 * 1000,  // ping server every 30 seconds\n      previousCount = Math.floor(this.state.activePlay.previousPosition / interval),\n      currentCount = Math.floor(position / interval);\n\n  this.state.activePlay.previousPosition = position;\n\n  if (currentCount !== previousCount) {\n    this.session.reportPlayElapsed(Math.floor(position / 1000));\n  }\n};\n\nPlayer.prototype._onPlayStarted = function(play) {\n  var session = this.session;\n\n  if (!this.state.activePlay || (this.state.activePlay.id !== play.id)) {\n    log('received play started, but it does not match active play', play, this.state.activePlay);\n    return;\n  }\n\n  this.state.activePlay.startReportedToServer = true;\n\n  if (this.state.activePlay.soundCompleted) {\n    // the audio completed playback before the session announced the play started\n    log('sound completed before we finished reporting start', this.state.activePlay);\n\n    // In the normal case we'd just quit here, but since the audio completed playback\n    // already, we've got to make sure a 'session.reportPlayCompleted()' gets kicked\n    // off to record the completion of this song.\n    // Defer the reporting so other 'play-started' handlers can complete as normal\n    // before a 'play-completed' gets triggered\n\n    if (this.state.activePlay.soundCompletedWithError) {\n      _.defer(function() {\n        session.requestInvalidate();\n      });\n\n    } else {\n      _.defer(function() {\n        session.reportPlayCompleted();\n      });\n    }\n  }\n};\n\nPlayer.prototype._onPlayCompleted = function(play) {\n  if (!this.state.activePlay || (this.state.activePlay.id !== play.id)) {\n    log('received play completed, but it does not match active play', play, this.state.activePlay);\n    return;\n  }\n\n  this.state.activePlay.sound.destroy();\n  delete this.state.activePlay;\n\n  // skip to complete the current song.\n  //this.state.paused = false;\n};\n\nPlayer.prototype._onPlaysExhausted = function() {\n  this.state.paused = false;\n};\n\nPlayer.prototype._onPrepareSound = function(url) {\n  log('preparing', url);\n  this.speaker.prepare(url);\n};\n\nPlayer.prototype.isPaused = function() {\n  return this.session.isTuned() && this.state.paused;\n};\n\nPlayer.prototype.getStationInformation = function(stationInformationCallback) {\n  return this.session.getStationInformation(stationInformationCallback);\n};\n\nPlayer.prototype.tune = function() {\n  var player = this;\n\n  this.initializeSpeaker.then(function() {\n    if (!player.session.isTuned()) {\n      player.session.tune();\n    }\n  });\n};\n\nPlayer.prototype.play = function() {\n  var player = this;\n\n  this.initializeSpeaker.then(function() {\n\n    if (!player.session.isTuned()) {\n      // not currently playing music\n      player.state.paused = false;\n\n      return player.session.tune();\n\n    } else if (player.session.getActivePlay() && player.state.activePlay && player.state.paused) {\n      // resume playback of song\n      if (player.state.activePlay.playStarted) {\n        player.state.activePlay.sound.resume();\n\n      } else {\n        player.state.activePlay.sound.play();\n      }\n\n    } else {\n      // waiting for network request to complete\n      player.state.paused = false;\n\n    }\n  });\n};\n\nPlayer.prototype.pause = function() {\n  if (!this.session.hasActivePlayStarted() || \n      !this.state.activePlay ||\n      this.state.paused) {\n    return;\n  }\n\n  // pause current song\n  this.state.activePlay.sound.pause();\n};\n\nPlayer.prototype.like = function() {\n  if (!this.session.hasActivePlayStarted()) {\n    return;\n  }\n\n  this.session.likePlay(this.state.activePlay.id);\n\n  this.trigger('play-liked');\n};\n\nPlayer.prototype.unlike = function() {\n  if (!this.session.hasActivePlayStarted()) {\n    return;\n  }\n\n  this.session.unlikePlay(this.state.activePlay.id);\n\n  this.trigger('play-unliked');\n};\n\nPlayer.prototype.dislike = function() {\n  if (!this.session.hasActivePlayStarted()) {\n    return;\n  }\n\n  this.session.dislikePlay(this.state.activePlay.id);\n\n  this.trigger('play-disliked');\n\n  // start playback if we're paused and try to advance to next song\n  this.state.paused = false;\n  this.skip();\n};\n\nPlayer.prototype.skip = function() {\n  if (!this.session.hasActivePlayStarted()) {\n    // can't skip non-playing song\n    return;\n  }\n\n  // start playback if we're paused\n  this.state.paused = false;\n  this.session.requestSkip();\n};\n\nPlayer.prototype.destroy = function() {\n  this.session = null;\n\n  if (this.state.activePlay && this.state.activePlay.sound) {\n    this.state.activePlay.sound.destroy();\n  }\n};\n\nPlayer.prototype.getCurrentState = function() {\n  if (this.state.suspended) {\n    return 'suspended';\n\n  } else if (!this.session.hasActivePlayStarted()) {\n    // nothing started, so we're idle\n    return 'idle';\n\n  } else {\n    if (this.state.paused) {\n      return 'paused';\n\n    } else {\n      return 'playing';\n    }\n  }\n};\n\nPlayer.prototype.getPosition = function() {\n  if (this.state.activePlay && this.state.activePlay.sound) {\n    return this.state.activePlay.sound.position();\n\n  } else {\n    return 0;\n  }\n};\n\nPlayer.prototype.getDuration = function() {\n  if (this.state.activePlay && this.state.activePlay.sound) {\n    return this.state.activePlay.sound.duration();\n\n  } else {\n    return 0;\n  }\n};\n\nPlayer.prototype.maybeCanSkip = function() {\n  return this.session.maybeCanSkip();\n};\n\nvar mutedKey = 'muted';\nPlayer.prototype.isMuted = function() {\n  if (supports_html5_storage()) {\n    if (mutedKey in localStorage) {\n      return localStorage[mutedKey] === 'true';\n    }\n  }\n\n  return false;\n};\n\nPlayer.prototype.setMuted = function(isMuted) {\n  if (isMuted) {\n    this.speaker.setVolume(0);\n    \n    if (supports_html5_storage()) {\n      localStorage[mutedKey] = true;\n    }\n\n    this.trigger('muted');\n\n  } else {\n    this.speaker.setVolume(100);\n\n    if (supports_html5_storage()) {\n      localStorage[mutedKey] = false;\n    }\n\n    this.trigger('unmuted');\n  }\n};\n\nPlayer.prototype.suspend = function() {\n  var playing = (this.state.activePlay && this.state.activePlay.sound),\n      state = this.session.suspend(playing ? this.state.activePlay.sound.position() : 0);\n\n  this.pause();\n\n  this.state.suspended = true;\n  this.trigger('suspend');\n\n  return state;\n};\n\nPlayer.prototype.unsuspend = function(state, startPlayback) {\n  this.session.unsuspend(state);\n\n  if (startPlayback) {\n    this.play();\n  }\n};\n\nmodule.exports = Player;\n\n\n","/*global module:false */\n/*jshint camelcase:false, latedef:false */\n\n/*\n *  Feed Media Session API\n *\n *  This manages all communication with the server and is the single point\n *  of truth for a client to manage what is actively being played. It\n *  should be created with:\n *\n *  var session = new Feed.Session(token, secret[, options]);\n *\n *  Then you attach event listeners to the session:\n *\n *  session.on('play-active', someHandler);\n *\n *  Then you can optionally set a placement and a station:\n *\n *  session.setPlacementId(placementId);\n *  session.setStationId(stationId);\n *\n *  If any of the above calls are made while we're actively tuning (we've\n *  got an active song or a pending song), then any currently active song\n *  will be marked as 'completed' and a new song will be requested from\n *  the server.\n *\n *  Then you tell the session to start maintaining a queue of \n *  music to play:\n *\n *  session.tune();\n *\n *  The session will now emit the following events:\n *\n *  not-in-us: if feed can't determine that the user is in the US, then\n *    the user won't be allowed to play any music. This check is made\n *    every time we try to retrieve a song. Once you get this event, you\n *    should assume nothing further will work.\n *  invalid-credentials: the token and secret passed to this function\n *    are not valid.\n *  placement: after we tune in to a placement or station,\n *    this passes on information about the placement we\n *    tuned in to.\n *  stations: after tuning to a specific placement, the server returns a\n *    list of available stations. This is that list.\n *  station-changed: emitted after a 'setStation' call, and passed the\n *    ID of the station\n *  placement-changed: emitted after a 'setPlacement' call, and passed the\n *    ID of the placement\n *  play-active: when the session has a play ready for playback\n *  play-started: when the active play has started playback (as\n *    a result of a call to reportPlayStarted)\n *  play-completed: when the session has successfully told the server\n *    that the current play has completed, been skipped (after a \n *    call to reportPlayCompleted), or been invalidated\n *  skip-denied: when the session has been told by the server that the\n *    skip cannot be performed (after a call to requestSkip)\n *  plays-exhausted: when the server can find no more music in the\n *    current station that satisfies DMCA constraints (this will\n *    be either the first event after a 'tune' call, or after a\n *    play-completed event). The client must make another call to\n *    tune() to begin pulling in more music.\n *\n *  Clients that use the session object should tell the session about\n *  the status of the current play as it progresses:\n *\n *  session.reportPlayStarted(): tell the server we have begun playback of the\n *    current song to the end user.\n *  session.reportPlayElapsed(seconds): tell the server how many elapsed seconds\n *    of the song have been played since it started.\n *  session.reportPlayCompleted(): tell the server that we have completed \n *    playing the current song. This will cause the session object\n *    to emit a 'play-completed' event followed by a 'play-active' when\n *    the next song is ready for playback\n *\n *  session.requestSkip(): ask the server if we can skip playback of the current\n *    song. If the skip is denied, a 'skip-denied' event will be triggered,\n *    otherwise a 'play-completed' will be triggered.\n *  session.requestInvalidate(): tell the server that we're unable to play the\n *    current song for some reason, and the server should stop playback\n *    of the song (if started) and give us a new song. The session will\n *    trigger a 'play-completed' event after this call.\n *\n *  Data held by the session can be retrieved with:\n *\n *  session.getActivePlay(): returns the currently active play, if any, or null\n *  session.isTuned(): true if the session has active plays available or is awaiting\n *    plays from the server\n *  session.hasActivePlayStarted(): returns true if the active play is playing now\n *  session.maybeCanSkip(): returns true if there is a song being played now and \n *    we believe we can skip it (this might not hold true, and the server can\n *    override this)\n *\n *  Other misc calls:\n *  \n *  session.likePlay(), session.unlikePlay(), session.dislikePlay(): like handling\n *  session.setFormats(formats): comma separated list of audio formats to \n *                               request, i.e.: 'mp3', 'aac', 'aac,mp3'. Defaults to\n *                               'mp3,aac'\n *\n *  The optional 'options' argument passed to the constructor can have the following\n *  attributes:\n *\n *    baseUrl: defines the base host that responds to API calls - defaults\n *       to '//feed.fm'. Really only used with local testing.\n */\n\nvar _ = (typeof window !== \"undefined\" ? window['_'] : typeof global !== \"undefined\" ? global['_'] : null);\nvar $ = (typeof window !== \"undefined\" ? window['jQuery'] : typeof global !== \"undefined\" ? global['jQuery'] : null);\nvar log = require('./nolog');\nvar Events = require('./events');\nvar util = require('./util');\nvar Base64 = require('js-base64').Base64;\nvar Cookie = require('tiny-cookie');\nvar version = require('./version');\n\nvar Session = function(token, secret, options) {\n  options = options || { };\n\n  this.config = {\n    // token\n    // secret\n    // placementId\n    // placement\n    // stationId\n    // stations\n    // clientId\n    baseUrl: util.addProtocol(options.baseUrl || '//feed.fm', true),\n    formats: 'mp3,aac',\n    maxBitrate: 128,\n    timeOffset: 0,\n\n    // Represent the active 'play' or null if there is no active play. This should\n    // only be null before the first tune() call or after the server tells us there\n    // is no more music available.\n    current: null, /* {\n                        play:  play object we're currently playing\n                        started: defaults to false\n                        canSkip: defaults to false\n                        retryCount: number of times we've tried to tell server we started this\n                       }, */\n\n    // Details of any 'POST /play' request we're awaiting a response for. If this\n    // is null, then we're not waiting for the server to give us a play\n    pendingRequest: null, /* {\n                               ajax:       form data we sent to request a play, copied\n                                           here so we can retry it if it fails\n                               retryCount: number of times we've retried \n                             }, */\n    \n    // Once a play has been created and then started, the server will let us\n    // create a new play. This holds a reference to the next play that will\n    // be active on completion of the current play\n    pendingPlay: null // play object we'll start upon completion of current\n                      //   sound \n  };\n\n  _.extend(this, Events);\n\n  if (token && secret) {\n    this.setCredentials(token, secret);\n  }\n};\n\nSession.prototype.setBaseUrl = function(baseUrl) {\n  this.config.baseUrl = util.addProtocol(baseUrl);\n};\n\nSession.prototype.setCredentials = function(token, secret) {\n  this.config.token = token;\n  this.config.secret = secret;\n};\n\nSession.prototype.setPlacementId = function(placementId) {\n  this.config.placementId = placementId;\n  this.trigger('placement-changed', placementId);\n\n  this._retune();\n};\n\nSession.prototype.setStationId = function(stationId) {\n  if (this.config.stationId != stationId) {\n    this.config.stationId = stationId;\n    this.trigger('station-changed', stationId);\n\n    this._retune();\n  }\n};\n\nSession.prototype.setFormats = function(formats) {\n  this.config.formats = formats;\n\n  this._retune();\n};\n\nSession.prototype.setMaxBitrate = function(maxBitrate) {\n  this.config.maxBitrate = maxBitrate;\n};\n\n// tune\nSession.prototype.tune = function() {\n  if (!this.config.token) {\n    throw new Error('no token set with setCredentials()');\n  }\n\n  if (!this.config.secret) {\n    throw new Error('no secret set with setCredentials()');\n  }\n\n  // abort any pending requests or plays\n  this.config.pendingRequest = null;\n  this.config.pendingPlay = null;\n\n  // stop playback of any current song, and set\n  // the status to waiting\n  this._assignCurrentPlay(null, true);\n\n  // pull information in about the placement, followed by\n  // a request for the next play\n  this._getDefaultPlacementInformation();\n};\n\n// _getDefaultPlacementInformation\nSession.prototype._getDefaultPlacementInformation = function(delay) {\n  var self = this;\n\n  if (this.config.placementId && this.config.placement && (this.config.placement.id === this.config.placementId)) {\n    // already have placement info, so kick off request for next play\n    this._requestNextPlay();\n    return;\n  }\n\n  var ajax = { \n    url: self.config.baseUrl + '/api/v2/placement',\n    type: 'GET',\n    data: {\n      client_id: self.config.clientId\n    },\n    dataType: 'json',\n    timeout: 6000\n  };\n\n  // request placement info from server\n  log('requesting default placement information from server');\n  self._signedAjax(ajax)\n    .done(_.bind(self._receiveDefaultPlacementInformation, self))\n    .fail(_.bind(self._failedDefaultPlacementInformation, self, delay));\n};\n\nSession.prototype._receiveDefaultPlacementInformation = function(placementInformation) {\n  if (placementInformation && placementInformation.success && placementInformation.placement) {\n    this.config.placement = placementInformation.placement;\n    this.config.stations = placementInformation.stations;\n\n    this.config.placementId = placementInformation.placement.id;\n    this.trigger('placement-changed', this.config.placementId);\n\n    this.trigger('placement', placementInformation.placement);\n\n    if (!('stationId' in this.config) && (placementInformation.stations.length > 0)) {\n      this.config.stationId = placementInformation.stations[0].id;\n      this.trigger('station-changed', this.config.stationId);\n    }\n\n    this.trigger('stations', placementInformation.stations);\n\n    // kick off request for next play\n    this._requestNextPlay();\n  }\n};\n\nSession.prototype._failedDefaultPlacementInformation = function(delay, response) {\n  if (response.status === 401) {\n    try {\n      var fullResponse = $.parseJSON(response.responseText);\n      if (fullResponse.error && fullResponse.error.code === 5) {\n        this.trigger('invalid-credentials');\n        return;\n      }\n    } catch (e) {\n      // ignore\n    }\n  }\n\n  // otherwise, try again in a bit\n  delay = delay ? (delay * 2) : 500;\n  _.delay(_.bind(this._getDefaultPlacementInformation, this, delay), delay);\n};\n\nSession.prototype.getActivePlacement = function() {\n  if (this.config.placement) {\n    return this.config.placement;\n  } else {\n    return null;\n  }\n};\n\nSession.prototype.getActivePlay = function() { \n  if (this.config.current) {\n    return this.config.current.play;\n  } else {\n    return null;\n  }\n};\n\nSession.prototype.isTuned = function() {\n  return this.config.current || this.config.pendingRequest;\n};\n\nSession.prototype.hasActivePlayStarted = function() {\n  return this.config.current && this.config.current.started;\n};\n\n// re-tune\nSession.prototype._retune = function() {\n  // if we're not actively playing anything, nothing needs to be sent\n  if (!this.isTuned()) {\n    return;\n  }\n\n  this.tune();\n};\n\nSession.prototype.reportPlayStarted = function() {\n  if (!this.config.current) {\n    throw new Error('attempt to report a play started, but there is no active play');\n  }\n\n  this._startPlay(this.config.current.play);\n};\n\nSession.prototype.reportPlayElapsed = function(seconds) {\n  if (!this.config.current) {\n    throw new Error('attempt to report elapsed play time, but the play hasn\\'t started');\n  }\n\n  this._signedAjax({\n    url: this.config.baseUrl + '/api/v2/play/' + this.config.current.play.id + '/elapse', \n    type: 'POST',\n    data: {\n      seconds: seconds\n    }\n  });\n};\n\nSession.prototype.reportPlayCompleted = function() {\n  var self = this;\n\n  if (this.config.current && (this.config.current.started)) {\n    this._signedAjax({\n      url: this.config.baseUrl + '/api/v2/play/' + this.config.current.play.id + '/complete',\n      type: 'POST'\n\n    }).always(_.bind(self._receivePlayCompleted, self));\n\n  } else {\n    log('finish on non-active or playing song');\n    throw new Error('no active or playing song');\n  }\n};\n\nSession.prototype._receivePlayCompleted = function() {\n  if (!this.config.pendingRequest) {\n    log('song finished, and no outstanding request, so playing pendingPlay');\n    // if we're not waiting for an incoming request, then we must\n    // have the next play queued up, so play it:\n    var pendingPlay = this.config.pendingPlay;\n    this.config.pendingPlay = null;\n\n    this._assignCurrentPlay(pendingPlay);\n\n  } else {\n    log('song finished, but we\\'re still waiting for next one to return');\n\n    // we're waiting for a request to come in, so kill the current\n    // song and announce that we're waiting\n    this._assignCurrentPlay(null, true);\n  }\n};\n\nSession.prototype.requestSkip = function() {\n  if (!this.config.current) {\n    throw new Error('No song being played');\n  }\n\n  if (!this.config.current.started) {\n    throw new Error('No song has been started');\n  }\n\n  if (!this.config.current.canSkip) {\n    this.trigger('skip-denied');\n    return;\n  }\n\n  this._signedAjax({\n    url: this.config.baseUrl + '/api/v2/play/' + this.config.current.play.id + '/skip',\n    type: 'POST'\n  })\n    .done(_.bind(this._receiveSkip, this, this.config.current.play))\n    .fail(_.bind(this._failSkip, this, this.config.current.play));\n};\n\nSession.prototype.requestInvalidate = function() {\n  if (!this.config.current) {\n    throw new Error('No active song to invalidate!');\n  }\n\n  this._sendInvalidate(this.config.current.play);\n};\n\nSession.prototype._sendInvalidate = function(play, delay) {\n  this._signedAjax({\n    url: this.config.baseUrl + '/api/v2/play/' + play.id + '/invalidate',\n    type: 'POST'\n  })\n    .done(_.bind(this._receiveInvalidate, this, play))\n    .fail(_.bind(this._failInvalidate, this, delay, play));\n};\n\nSession.prototype._failInvalidate = function(delay, play, response) {\n  var self = this;\n\n  delay = (delay ? delay * 2 : 200);\n\n  if (delay < 3000) {\n    _.delay(function() {\n      self._sendInvalidate(play);\n    }, delay);\n\n  } else {\n    log('gave up trying to invalidate play', response);\n\n  }\n};\n\nSession.prototype._receiveInvalidate = function(play, response) {\n  if (!this.config.current || (this.config.current.play !== play)) {\n    // not holding this song any more - just ignore it\n    return;\n  }\n\n  if (!response.success) {\n    log('failed invalidate! - technically this is impossible');\n    return;\n  }\n\n  if (this.config.pendingPlay) {\n    log('invalidating to song already queued up');\n    // skip to play already queued up\n    var pendingPlay = this.config.pendingPlay;\n    this.config.pendingPlay = null;\n    this._assignCurrentPlay(pendingPlay);\n\n  } else {\n    log('invalidating current song');\n    this._assignCurrentPlay(null, true);\n  \n    if (!this.config.pendingRequest) {\n      log('queueing up new song');\n      this._requestNextPlay();\n\n    }\n  }\n};\n\nSession.prototype._failSkip = function(play) {\n  if (!this.config.current || (this.config.current.play !== play)) {\n    // not playing this song any more - just ignore it\n    return;\n  }\n  // technically the skip wasn't denied - we just couldn't confirm wether\n  // it was ok, but this is the best we can return at the moment\n  this.trigger('skip-denied');\n};\n\nSession.prototype._receiveSkip = function(play, response) {\n  if (!this.config.current || (this.config.current.play !== play)) {\n    // not playing this song any more - just ignore it\n    return;\n  }\n\n  if (!response.success) {\n    log('failed skip!');\n    this.trigger('skip-denied');\n    return;\n  }\n\n  if (this.config.pendingPlay) {\n    log('skipping to song already queued up');\n    // skip to play already queued up\n    var pendingPlay = this.config.pendingPlay;\n    this.config.pendingPlay = null;\n    this._assignCurrentPlay(pendingPlay);\n\n  } else if (this.config.pendingRequest) {\n    log('skipping to what is queued up');\n    // we're waiting for a request - so just wait for that to show up\n    this._assignCurrentPlay(null, true);\n\n  } else {\n    log('skipping to what is queued up');\n    // nothing queued up and nothing being requested - we're outta music!\n    this._assignCurrentPlay(null);\n\n  }\n};\n\nSession.prototype._startPlay = function(play) {\n  if (this.config.current.retryCount > 2) {\n    // fuck it - let the user hear the song\n    this._receiveStartPlay(play, { success: true, can_skip: true });\n\n  } else {\n    log('telling server we\\'re starting the play', play);\n\n    // tell the server that we're going to start this song\n    this._signedAjax({\n      url: this.config.baseUrl + '/api/v2/play/' + play.id + '/start',\n      type: 'POST',\n      dataType: 'json',\n      timeout: 3000\n    })\n      .done(_.bind(this._receiveStartPlay, this, play))\n      .fail(_.bind(this._failStartPlay, this, play));\n  }\n};\n\nSession.prototype._receiveStartPlay = function(play, response) {\n  if (response.success) {\n\n    if (this.config.current && (this.config.current.play === play)) {\n      this.config.current.canSkip = response.can_skip;\n      this.config.current.started = true;\n\n      this.trigger('play-started', play);\n\n      // since we're ok to start this song, we can start looking for the\n      // next song\n      this._requestNextPlay();\n\n    } else {\n      log('received start play, but not waiting any more');\n    }\n\n  } else {\n    log('received failed start success');\n  }\n};\n\nSession.prototype._failStartPlay = function(play, response) {\n  // only process if we're still actually waiting for this\n  if (this.config.current && (this.config.current.play === play)) {\n\n    if (response.status === 403) {\n      try {\n        var fullResponse = $.parseJSON(response.responseText);\n\n        if (fullResponse.error && fullResponse.error.code === 20) {\n          // we seem to have missed the response to the original start, so\n          // let's assume the start was good and the song is skippable\n          return this._receiveStartPlay(play, { success: true, can_skip: true });\n        }\n      } catch (e) {\n        // ignore\n        log('unable to parse start play response', e.message);\n      }\n    }\n\n    log('request failed - trying again in 1 second', response.status);\n\n    this.config.current.retryCount++;\n\n    // wait a second and try again\n    _.delay(_.bind(this._startPlay, this, play), 1000);\n\n  } else {\n    log('startPlay failed, but we don\\'t care any more');\n  }\n};\n\n// start playing the given song\nSession.prototype._assignCurrentPlay = function(play, waitingIfEmpty) {\n  // remove any existing play\n  if (this.config.current) {\n    this.trigger('play-completed', this.config.current.play);\n    this.config.current = null;\n  }\n  if (play === null) {\n    // nothing to play right now\n\n    if (waitingIfEmpty) {\n      //this.config.status = 'waiting';\n      log('nothing to play... waiting');\n\n    } else {\n      //this.config.status = 'idle';\n      log('nothing to play from the current station');\n      this.trigger('plays-exhausted');\n    }\n\n  } else {\n    // we're starting this song, so note that\n    this.config.current = {\n      play: play,\n      canSkip: false,\n      started: false,\n      retryCount: 0\n    };\n\n    //this.config.status = 'active';\n\n    log('activated new song');\n    this.trigger('play-active', play);\n\n  }\n};\n\nSession.prototype._requestNextPlay = function(delay) {\n  var self = this;\n\n  this._getClientId().then(function() {\n    if (self.config.pendingRequest) {\n      if (!delay) {\n        log('already waiting for a request to finish');\n        return;\n\n      } else if (delay > 60000) {\n        log('giving up on retrieving next play');\n\n        // we already retried this - let's give up\n        self.config.pendingRequest = null;\n\n        if (self.config.current == null) {\n          // we're not playing anything, so we're waiting. \n          // set assign play to null again to trigger empty/idle\n          self._assignCurrentPlay(null);\n        }\n        return;\n\n      } else {\n        log('retrying pending request');\n\n        // retry the request\n        self.config.pendingRequest.retryCount++;\n\n        self._signedAjax(self.config.pendingRequest.ajax)\n          .done(_.bind(self._receiveNextPlay, self, self.config.pendingRequest.ajax))\n          .fail(_.bind(self._failedNextPlay, self, delay, self.config.pendingRequest.ajax));\n        return;\n      }\n      \n    } else {\n      // create a new request\n\n      var ajax = { \n        url: self.config.baseUrl + '/api/v2/play',\n        type: 'POST',\n        dataType: 'json',\n        timeout: 6000,\n        data: {\n          formats: self.config.formats,\n          client_id: self.config.clientId,\n          max_bitrate: self.config.maxBitrate,\n          secure: true\n        }\n      };\n\n      if (self.config.placementId) {\n        ajax.data.placement_id = self.config.placementId;\n      }\n\n      if (self.config.stationId) {\n        ajax.data.station_id = self.config.stationId;\n      }\n\n      self.config.pendingRequest = {\n        ajax: ajax,\n        retryCount: 0\n      };\n\n      // request new play from server\n      log('requesting new play from server', ajax);\n      self._signedAjax(ajax)\n        .done(_.bind(self._receiveNextPlay, self, ajax))\n        .fail(_.bind(self._failedNextPlay, self, delay, ajax));\n    }\n  });\n};\n\n// we received a song to play from the server\nSession.prototype._receiveNextPlay = function(ajax, response) {\n  // only process if we're still actually waiting for this\n  if (this.config.pendingRequest && (this.config.pendingRequest.ajax === ajax)) {\n    // this isn't pending any more\n    this.config.pendingRequest = null;\n\n    if (response.success) {\n      this.trigger('prepare-sound', response.play.audio_file.url);\n\n      if (this.config.current) {\n        log('received play, but we\\'re already playing, so queueing up', response.play);\n\n        // play this when the current song is complete\n        this.config.pendingPlay = response.play;\n\n      } else {\n        log('received play and no current song, so playing now', response.play);\n\n        // start playing this right now, since nothing else is playing\n        this._assignCurrentPlay(response.play);\n\n      }\n\n    } else if (response.error && response.error.code === 9) {\n      if (this.config.current) {\n        log('ran out of music to play, but we\\'re already playing');\n\n        this.config.pendingPlay = null;\n\n      } else {\n        log('ran out of music, and nothing playing now');\n\n        this.trigger('plays-exhausted');\n      }\n\n    } else {\n      log('unsuccessful response', response);\n    }\n\n  } else {\n    log('nextPlay succeeded, but we don\\'t care');\n  }\n};\n\n// server returned an error when we requested the next song\nSession.prototype._failedNextPlay = function(delay, ajax, response) {\n  // only process if we're still actually waiting for this\n  if (this.config.pendingRequest && (this.config.pendingRequest.ajax === ajax)) {\n\n    if (response.status === 403) {\n      try {\n        var fullResponse = $.parseJSON(response.responseText);\n\n        if (fullResponse.error && fullResponse.error.code === 19) {\n          // user isn't in the US any more, so let the call fail\n          this.trigger('not-in-us', fullResponse.error.message);\n          return;\n        }\n      } catch (e) {\n        // some other response - fall through and try again\n        log('problem parsing 403 response', e.message);\n      }\n    }\n\n    log('request failed - trying again', response.status);\n\n    delay = delay ? (delay * 2) : 500;\n    _.delay(_.bind(this._requestNextPlay, this, delay), delay);\n\n  } else {\n    log('nextPlay failed, but we don\\'t care');\n  }\n};\n\nSession.prototype._getClientId = function() {\n  if (this.clientPromise) {\n    return this.clientPromise;\n  }\n  var clientDeferred = new $.Deferred();\n  this.clientPromise = clientDeferred.promise();\n\n  var self = this;\n\n  this._requestClientId(function(clientId) {\n    // once we've got a clientId, stick it in the config\n    self.config.clientId = clientId;\n\n    self._setStoredCid(self.config.clientId);\n\n    clientDeferred.resolve(clientId);\n  });\n\n  return this.clientPromise;\n};\n\n// hit the server up for a client id and return it via the passed in deferred\nSession.prototype._requestClientId = function(saveClientId, delay) {\n  // see if we've got a cookie\n  var clientId = this._getStoredCid();\n\n  if (clientId) {\n    return saveClientId(clientId);\n\n  } else {\n    var self = this;\n\n    this._signedAjax({\n      url: self.config.baseUrl + '/api/v2/client',\n      type: 'POST'\n\n    }).done(function(response) {\n      if (response.success) {\n        saveClientId(response.client_id);\n\n      } else {\n        repeatAfter(delay, 2000, function(newDelay) { \n          // retry until the end of time\n          self._requestClientId(saveClientId, newDelay);\n        });\n      }\n\n    }).fail(function(response) {\n      if (response.status === 403) {\n        try {\n          var fullResponse = $.parseJSON(response.responseText);\n\n          if (fullResponse.error && fullResponse.error.code === 19) {\n            // user isn't in the US any more, so let the call fail\n            self.trigger('not-in-us', fullResponse.error.message);\n            return;\n          }\n        } catch (e) {\n          // some other response - fall through and try again\n          log('unknown response for client id request', e.message);\n        }\n\n      } else {\n        log('unknown client id response status', response.status);\n      }\n\n      repeatAfter(delay, 2000, function(newDelay) { \n        // retry until the end of time\n        self._requestClientId(saveClientId, newDelay);\n      });\n    });\n  }\n};\n\nfunction repeatAfter(delay, max, cb) {\n  delay = delay ? (2 * delay) : 200;\n\n  if (delay > max) {\n    delay = max;\n  }\n\n  setTimeout(function() {\n    cb(delay);\n  }, delay);\n\n}\n\nSession.prototype.maybeCanSkip = function() {\n  return this.config.current && this.config.current.started && this.config.current.canSkip;\n};\n\nSession.prototype.likePlay = function(playId) {\n  this._signedAjax({\n    url: this.config.baseUrl + '/api/v2/play/' + playId + '/like',\n    type: 'POST'\n  });\n\n  if (this.config.current && (this.config.current.play.id === playId)) {\n    this.config.current.play.liked = true;\n  }\n};\n\nSession.prototype.unlikePlay = function(playId) {\n  this._signedAjax({\n    url: this.config.baseUrl + '/api/v2/play/' + playId + '/like',\n    type: 'DELETE'\n  });\n\n  if (this.config.current && (this.config.current.play.id === playId)) {\n    delete this.config.current.play['liked'];\n  }\n};\n\nSession.prototype.dislikePlay = function(playId) {\n  this._signedAjax({\n    url: this.config.baseUrl + '/api/v2/play/' + playId + '/dislike',\n    type: 'POST'\n  });\n\n  if (this.config.current && (this.config.current.play.id === playId)) {\n    this.config.current.play.liked = false;\n  }\n};\n\n/*\n * Save the current state of the session, so we can recreate\n * our current state in the future. The object returned\n * is what should be passed to 'unsuspend'. The 'startPosition'\n * should be the current playback offset for the active play, \n * in milliseconds.\n */\n\nSession.prototype.suspend = function(startPosition) {\n  var saved = { };\n\n  if (this.config.placementId) {\n    saved.placementId = this.config.placementId;\n  }\n\n  if (this.config.stationId) {\n    saved.stationId = this.config.stationId;\n  }\n\n  if (this.config.current && this.config.current.started) {\n    // only save the active play if we've actually started\n    // playing it (otherwise the next call to create a play\n    // will return the same data)\n    saved.placement = this.config.placement;\n    saved.stations = this.config.stations;\n    saved.play = _.clone(this.config.current.play);\n    saved.play.startPosition = startPosition;\n    saved.canSkip = this.config.current.canSkip;\n  }\n\n  return saved;\n};\n\n/*\n * Use the saved session passed in to restore the player to\n * the state it was in previously. This method will make sure\n * all the necessary events are triggered so that any\n * object observing events from this session will believe a\n * 'session.tune()' call was made.\n */\n\nSession.prototype.unsuspend = function(saved) {\n  if (this.getActivePlay()) {\n    throw new Error('You cannot unsuspend after running tune()');\n  }\n\n  if ('placementId' in saved) {\n    this.config.placementId = saved.placementId;\n    this.trigger('placement-changed', this.config.placementId);\n  }\n\n  if ('stationId' in saved) {\n    this.config.stationId = saved.stationId;\n    this.trigger('station-changed', this.config.stationId);\n  }\n\n  if ('play' in saved) {\n    this.config.placement = saved.placement;\n    this.config.stations = saved.stations;\n\n    this.trigger('placement', this.config.placement);\n    this.trigger('stations', this.config.stations);\n\n    // emit the 'play-active' event\n    this._assignCurrentPlay(saved.play);\n\n    // make a fake start response from the server, emit\n    // a 'play-start' event, and then start queueing\n    // up the next song to play\n    this._receiveStartPlay(saved.play, { success: true, can_skip: saved.canSkip });\n\n    return saved.play;\n\n  } else {\n    this.tune();\n\n    return null;\n  }\n};\n\nvar cookieName = 'cid';\nSession.prototype._getStoredCid = function() {\n  return Cookie.get(cookieName);\n};\n\nSession.prototype._setStoredCid = function(value) {\n  Cookie.set(cookieName, value, { expires: 3650, path: '/' });\n};\n\nSession.prototype._deleteStoredCid = function() {\n  $.removeCookie(cookieName, { path: '/' });\n};\n\nSession.prototype._sign = function(request) {\n  var authorization;\n\n  // use Basic auth for HTTPS\n  authorization = 'Basic ' + Base64.encode(this.config.token + ':' + this.config.secret);\n\n  request.headers = {\n    Authorization: authorization\n  };\n\n  request.headers[\"X-Feed-SDK\"] = version;\n\n  return request;\n};\n\nSession.prototype._signedAjax = function(request) {\n  var self = this;\n\n  return self._ajax(self._sign(request));\n};\n\nSession.prototype._ajax = function(request) {\n  return $.ajax(request);\n};\n\nmodule.exports = Session;\n\n","/*global module:false */\n\n/*\n * The speaker object encapsulates the SoundManager2 code and boils it down\n * to the following api:\n *\n *    speaker().initializeAudio(): many clients can only start using\n *      speaker when handling an 'onClick' event. This call should be made \n *      at that time to get audio initialized while waiting for details\n *      of what to play from the server. \n *\n *    speaker().setVolume(value): set the volume from 0 (mute) - 100 (full volume)\n *\n *    var sound = speaker().create(url, optionsAndEvents): create a new sound from the\n *       given url and return a 'song' object that can be used to pause/play/\n *       destroy the song and receive trigger events as the song plays/stops. \n *\n *       The 'optionsAndEvents' is an object that lets you specify event\n *       handlers and options:\n *\n *          startPosition:  specifies the time offset (in milliseconds) that the\n *                          sound should begin playback at when we begin playback.\n *          endPosition:    specifies the time offset (in milliseconds) that the\n *                          sound should stop playback \n *          fadeInSeconds:  # of seconds to fade in audio\n *          fadeOutSeconds: # of seconds to fade out audio\n *          play:           event handler for 'play' event\n *          pause:          event handler for 'pause' event\n *          finish:         event handler for 'finish' event\n *          elapse:         event handler for 'elapse' event\n *\n *       The returned object emits the following events:\n *         play: the song has started playing or resumed playing after pause\n *         pause: the song has paused playback\n *         finish: the song has completed playback and the song object\n *           is no longer usable and should be destroyed\n *         elapse: song playback has elapsed\n *\n *       The events should be received in this order only:\n *         ( play -> ( pause | play )* -> )? finish\n *\n *       Note that I represent play failures as a 'finish' call, so if\n *       we can't load a song, it will just get a 'finish' and no 'play'.\n *       The 'finish' event will have a 'true' argument passed to it on\n *       some kind of error, so you can treat those differently.\n *\n *       The returned song object has this following api:\n *         play: start playback (at the 'startPosition', if specified)\n *         pause: pause playback\n *         resume: resume playback\n *         destroy: stop playback, prevent any future playback, and free up memory\n *\n * This module returns a function that returns a speaker singleton so everybody\n * is using the same instance.\n *\n * Proper usage looks like this:\n *\n *   require([ 'feed/speaker' ], function(speaker) {\n *     var mySpeaker = speaker(options, onReady);\n *   });\n *\n * That will make sure that all code uses the same speaker instance. 'options'\n * is optional, and is an object with any of the following keys:\n *\n *   debug: if true, emit debug information to the console\n *\n * 'onReady' is also optional, and is a callback that will be called as\n * soon as the sond system is initialized (or immediately if it was already\n * initialized) and it will be given a string that lists supported\n * audio formats, suitable for passing to Feed.Session.setFormats().\n *\n * The first function call to 'speaker()' is what configures and defines the\n * speaker - and subsequent calls just return the already-created instance.\n * I think this is a poor interface, but I don't have a better one at the\n * moment.\n *\n */\n\nvar _ = (typeof window !== \"undefined\" ? window['_'] : typeof global !== \"undefined\" ? global['_'] : null);\nvar $ = (typeof window !== \"undefined\" ? window['jQuery'] : typeof global !== \"undefined\" ? global['jQuery'] : null);\nvar log = require('./nolog');\nvar Events = require('./events');\nvar util = require('./util');\nvar version = require('./version');\n\nvar SILENCE ='data:audio/wav;base64,UklGRigAAABXQVZFZm10IBIAAAABAAEARKwAAIhYAQACABAAAABkYXRhAgAAAAEA';\n\n\n// fake console to redirect soundmanager2 to the feed logger\nvar feedConsole = {\n  log: log,\n  info: log,\n  warn: log,\n  error: log\n};\n\nvar Sound = function(speaker, options, id, url) { \n  var obj = _.extend(this, Events);\n\n  obj.id = id;\n  obj.url = url;\n  obj.speaker = speaker;\n  obj.loaded = false;\n\n  if (options) {\n    this.startPosition = +options.startPosition;\n    this.endPosition = +options.endPosition;\n\n    this.fadeInSeconds = +options.fadeInSeconds;\n    if (this.fadeInSeconds) {\n      this.fadeInStart = this.startPosition ? (this.startPosition / 1000) : 0;\n      this.fadeInEnd = this.fadeInStart + this.fadeInSeconds;\n    } else {\n      this.fadeInStart = 0;\n      this.fadeInEnd = 0;\n    }\n\n    this.fadeOutSeconds = +options.fadeOutSeconds;\n    if (this.fadeOutSeconds) {\n      if (this.endPosition) {\n        this.fadeOutStart = (this.endPosition / 1000) - this.fadeOutSeconds;\n        this.fadeOutEnd = this.endPosition / 1000;\n      } else {\n        this.fadeOutStart = 0;\n        this.fadeOutEnd = 0;\n      }\n    }\n\n    _.each(['play', 'pause', 'finish', 'elapse'], function(ev) {\n      if (ev in options) {\n        obj.on(ev, options[ev]);\n      }\n    });\n\n    this.gain = options.gain || 0;\n\n  } else {\n    this.gain = 0;\n\n  }\n\n  return obj;\n};\n\nfunction d(audio) {\n  return ' src = ' + audio.src + ', time = ' + audio.currentTime + ', paused = ' + audio.paused + ', duration = ' + audio.duration + ', readyState = ' + audio.readyState;\n}\n\nSound.prototype = {\n  play: function() {\n    log(this.id + ' sound play');\n    return this.speaker._playSound(this);\n  },\n\n  // pause playback of the current sound clip\n  pause: function() {\n    log(this.id + ' sound pause');\n    return this.speaker._pauseSound(this);\n  },\n\n  // resume playback of the current sound clip\n  resume: function() {\n    log(this.id + ' sound resume');\n    return this.speaker._playSound(this);\n  },\n\n  // elapsed number of milliseconds played\n  position: function() {\n    //log(this.id + ' sound position');\n    return this.speaker._position(this);\n  },\n\n  // duration in milliseconds of the song\n  // (this may change until the song is full loaded)\n  duration: function() {\n    //log(this.id + ' sound duration');\n    return this.speaker._duration(this);\n  },\n\n  // stop playing the given sound clip, unload it, and disable events\n  destroy: function() {\n    log(this.id + ' being called to destroy');\n    this.speaker._destroySound(this);\n  },\n\n  gainAdjustedVolume: function(volume) {\n    if (!this.gain) {\n      log('no volume adjustment');\n      return volume / 100;\n    }\n\n    var adjusted = Math.max(Math.min((volume / 100) * (50 * Math.pow(10, this.gain / 20)), 100), 0) / 100;\n\n    //log('gain adjustment is ' + this.gain + ', and final adjusted volume is ' + adjusted);\n\n    return adjusted;\n  }\n\n};\n\nvar Speaker = function(options) {\n  var speaker = this;\n\n  var aTest = document.createElement('audio');\n  if (document.createElement('audio').canPlayType('audio/aac')) {\n    this.preferred = 'aac,mp3';\n  } else {\n    this.preferred = 'mp3';\n  }\n};\n\nSpeaker.prototype = {\n  vol: 100,  // 0..100\n  outstandingPlays: { },\n\n  activeAudio: null,  // Audio element that we play music with\n  fadingAudio: null,  // Audio element that holds music fading out\n  preparingAudio: null, // Audio element holding music we are queueing up\n\n  prepareWhenReady: null, // url to prepare when active player is fully loaded\n\n  activeSound: null,  // currently playing sound. when a sound finishes, it is removed from this\n  fadingSound: null,   // currently fading out sound, if any\n\n  initializeAudio: function() {\n    // On mobile devices, we need to kick off playback of a sound in\n    // response to a user event. This does that.\n    if (!this.activeAudio) {\n      log('initializing for mobile');\n\n      this.activeAudio = new Audio(SILENCE);\n      this._addEventListeners(this.activeAudio);\n      this.activeAudio.loop = false;\n\n      this.fadingAudio = new Audio(SILENCE);\n      this._addEventListeners(this.fadingAudio);\n      this.fadingAudio.loop = false;\n\n      this.preparingAudio = this.prepareWhenReady ? new Audio(this.prepareWhenReady) : new Audio(SILENCE);\n      this.prepareWhenReady = null;\n      this._addEventListeners(this.preparingAudio);\n      this.preparingAudio.loop = false;\n\n    } else {\n      log('mobile already initialized');\n    }\n  },\n\n  _addEventListeners: function(audio) {\n    audio.addEventListener('pause', _.bind(this._onAudioPauseEvent, this));\n    audio.addEventListener('ended', _.bind(this._onAudioEndedEvent, this));\n    audio.addEventListener('timeupdate', _.bind(this._onAudioTimeUpdateEvent, this));\n    //this._debugAudioObject(audio);\n  },\n\n  _onAudioPauseEvent: function(event) {\n    var audio = event.currentTarget;\n\n    if (audio.src === SILENCE) {\n      return;\n    }\n\n    if ((audio !== this.activeAudio) || (audio.currentTime === audio.duration)) {\n      return;\n    }\n\n    if (!this.activeSound || (this.activeSound.url !== audio.src)) {\n      log('active audio pause, but no matching sound');\n      return;\n    }\n\n    this.activeSound.trigger('pause');\n  },\n\n  _onAudioEndedEvent: function(event) {\n    var audio = event.currentTarget;\n\n    if (audio.src === SILENCE) {\n      return;\n    }\n\n    if (audio === this.fadingAudio) {\n      audio.src = SILENCE;\n      this.fadingSound = null;\n      return;\n    }\n\n    if (audio !== this.activeAudio) {\n      return;\n    }\n\n    if (!this.activeSound || (this.activeSound.url !== audio.src)) {\n      log('active audio ended, but no matching sound', audio.src);\n      return;\n    }\n\n    log('active audio ended');\n    var sound = this.activeSound;\n    this.activeSound = null;\n    sound.trigger('finish');\n  },\n\n  _onAudioTimeUpdateEvent: function(event) {\n    var audio = event.currentTarget;\n\n    if (audio.src === SILENCE) {\n      return;\n    }\n\n    if ((audio === this.fadingAudio) && this.fadingSound) {\n      if (this.fadingSound.endPosition && (audio.currentTime >= (this.fadingSound.endPosition / 1000))) {\n        this.fadingSound = null;\n        this.fadingAudio.src = SILENCE;\n\n      } else {\n        this._setVolume(audio, this.fadingSound);\n      }\n\n      return;\n    }\n\n    if (audio !== this.activeAudio) {\n      return;\n    }\n\n    if (!this.activeSound || (this.activeSound.url !== audio.src)) {\n      log('active audio elapsed, but it no matching sound');\n      return;\n    }\n\n    if (this.activeSound.endPosition && ((this.activeSound.endPosition / 1000) <= audio.currentTime)) {\n      // song reached end of play\n      var sound = this.activeSound;\n\n      this.activeSound = null;\n\n      this.activeAudio.src = SILENCE;\n\n      sound.trigger('finish');\n\n    } else if (this.activeSound.fadeOutEnd && (audio.currentTime >= this.activeSound.fadeOutStart)) {\n      // song hit start of fade out\n      this._setVolume(audio, this.activeSound);\n\n      // swap it into 'fading' spot\n      this.fadingSound = this.activeSound;\n      this.activeSound = null;\n\n      this.activeAudio = this.fadingAudio;\n      this.fadingAudio = audio;\n\n      // pretend the song finished\n      this.fadingSound.trigger('finish');\n\n    } else {\n      this._setVolume(audio, this.activeSound);\n\n      this.activeSound.trigger('elapse');\n    }\n\n    if (this.prepareWhenReady) {\n      this.prepare(this.prepareWhenReady);\n    }\n  },\n\n  _setVolume: function(audio, sound) {\n    var currentTime = audio.currentTime;\n    var currentVolume = audio.volume;\n    var calculatedVolume = sound.gainAdjustedVolume(this.vol);\n\n    //log('setting volume', { currentTime: currentTime, currentVolume: currentVolume, calculatedVolume: calculatedVolume, sound: sound });\n\n    if ((sound.fadeInStart != sound.fadeInEnd) && (currentTime >= sound.fadeInStart) && (currentTime <= sound.fadeInEnd)) {\n      // ramp up from 0 - 100%\n      calculatedVolume = (currentTime - sound.fadeInStart) / (sound.fadeInEnd - sound.fadeInStart) * calculatedVolume;\n\n    } else if ((sound.fadeOutStart != sound.fadeOutEnd) && (currentTime >= sound.fadeOutStart) && (currentTime <= sound.fadeOutEnd)) {\n      // ramp down from 100% to 0\n      calculatedVolume = (1 - (currentTime - sound.fadeOutStart) / (sound.fadeOutEnd - sound.fadeOutStart)) * calculatedVolume;\n\n    }\n\n    if (currentVolume != calculatedVolume) {\n      log(audio.src + ' updating volume ' + ((currentVolume < calculatedVolume) ? '▲' : '▼') + ' to ' + calculatedVolume);\n      audio.volume = calculatedVolume;\n    }\n  },\n\n  _debugAudioObject: function(object) {\n    var events = [ 'abort', 'load', 'loadend', 'loadstart', 'loadeddata', 'loadedmetadata', 'canplay', 'canplaythrough', 'seeked', 'seeking', 'stalled', 'timeupdate', 'volumechange', 'waiting', 'durationchange', 'progress', 'emptied', 'ended', 'play', 'pause'  ];\n    var speaker = this;\n\n    for (var i = 0; i < events.length; i++) {\n      object.addEventListener(events[i], function(event) {\n        var audio = event.currentTarget;\n        var name = (audio === speaker.activeAudio) ?    'active' :\n                   (audio === speaker.preparingAudio) ? 'preparing' :\n                                           'fading';\n\n        log(name + ': ' + event.type);\n        log('    active: ' + d(speaker.activeAudio));\n        log('    preparing: ' + d(speaker.preparingAudio));\n        log('    fading: ' + d(speaker.fadingAudio));\n\n        if (audio.src === SILENCE) {\n          return;\n        }\n      });\n    }\n  },\n\n  // Create and return new sound object. This throws the song into\n  // the preparing audio instance.\n  create: function(url, optionsAndCallbacks) {\n    var id = _.uniqueId('feed-play-');\n    var sound = new Sound(this, optionsAndCallbacks, id, url);\n\n    log('created play ' + id + ' (' + url + ')', optionsAndCallbacks);\n\n    this.outstandingPlays[sound.id] = sound;\n\n    // start loading sound, if we can\n    if (!this.activeAudio) {\n      this.prepareWhenReady = sound.url;\n    } else {\n      this._prepare(sound.url, sound.startPosition);\n    }\n\n    return sound;\n  },\n  \n  prepare: function(url) {\n    if (!this.activeAudio) {\n      this.prepareWhenReady = url;\n      return;\n    }\n\n    var ranges = this.activeAudio.buffered;\n    if ((ranges.length > 0) && (ranges.end(ranges.length - 1) >= this.activeAudio.duration)) {\n      return this._prepare(url, 0);\n    }\n\n    if (this.activeAudio.url === SILENCE) {\n      return this._prepare(url, 0);\n    }\n\n    // still loading primary audio - so hold off for now\n    this.prepareWhenReady = url;\n  },\n\n  _prepare: function(url, startPosition) {\n    // empty out any pending request\n    this.prepareWhenReady = null;\n\n    if (this.preparingAudio.src !== url) {\n      log('preparing ' + url);\n      this.preparingAudio.src = url;\n    }\n\n    if (startPosition && (this.preparingAudio.currentTime !== startPosition)) {\n      log('advancing preparing audio to', startPosition / 1000);\n      this.preparingAudio.currentTime = startPosition / 1000;\n    }\n  },\n\n  /*\n   * Kick off playback of the requested sound.\n   */\n  \n  _playSound: function(sound) {\n    var speaker = this;\n\n    if (!this.activeAudio) {\n      console.log('**** player.initializeAudio() *** not called');\n      return;\n    }\n\n    if (this.activeSound === sound) {\n      if (this.activeAudio.paused) {\n        log(sound.id + ' was paused, so resuming');\n\n        // resume playback\n        this.activeAudio.play()\n          .then(function() {\n            log('resumed playback');\n            sound.trigger('play');\n\n        \n          })\n          .catch(function(error) { \n            log('error resuming playback');\n            speaker.activeSound = null;\n            sound.trigger('finish');\n          });\n\n        if (this.fadingSound) {\n          this.fadingAudio.play()\n            .then(function() {\n              log('resumed fading playback');\n          \n            })\n            .catch(function(error) { \n              log('error resuming fading playback');\n              speaker.fadingSound = null;\n              speaker.fadingAudio.src = SILENCE;\n            });\n\n        }\n\n      } else {\n        log(sound.id + ' is already playing');\n      }\n\n    } else {\n      if (this.preparingAudio.src !== sound.url) {\n        this._prepare(sound.url, sound.startPosition);\n      }\n\n      // move prepared sound into active player\n      var oldActiveAudio = this.activeAudio;\n      this.activeAudio = this.preparingAudio;\n      this.preparingAudio = oldActiveAudio;\n\n      this._setVolume(this.activeAudio, sound);\n      this.preparingAudio.src = SILENCE;\n\n      var existingSound = this.activeSound;\n      this.activeSound = null;\n      if (existingSound) {\n        existingSound.trigger('finish');\n      }\n\n      log(sound.id + ' starting');\n      this.activeAudio.play()\n        .then(function() {\n          log('success starting playback');\n          speaker.activeSound = sound;\n\n          // configure fade-out now that metadata is loaded\n          if (sound.fadeOutSeconds && (sound.fadeOutEnd === 0)) {\n            sound.fadeOutStart = speaker.activeAudio.duration - sound.fadeOutSeconds;\n            sound.fadeOutEnd = speaker.activeAudio.duration;\n          }\n\n          var paused = speaker.activeAudio.paused;\n\n          sound.trigger('play');\n\n          if (paused) {\n            sound.trigger('pause');\n          }\n\n        })\n        .catch(function(error) {\n          log('error starting playback', error);\n          sound.trigger('finish', error);\n        })\n    }\n  },\n\n  _destroySound: function(sound) {\n    log('want to destroy, and current is', sound, this.activeSound);\n    sound.off();\n\n    if (this.activeSound === sound) {\n      log('destroy triggered for current sound', sound.id);\n      this.activeAudio.pause();\n    }\n\n    delete speaker.outstandingPlays[this.id];\n  },\n\n  _pauseSound: function(sound) {\n    if ((sound != null) && (sound !== this.activeSound)) {\n      return;\n    }\n\n    this.activeAudio.pause();\n\n    if (this.fadingSound) {\n      this.fadingAudio.pause();\n    }\n  },\n\n  _position: function(sound) {\n    if (sound === this.activeSound) {\n      if (sound.url !== this.activeAudio.src) {\n        log('trying to get current song position, but it is not in the active audio player');\n      }\n      \n      return this.activeAudio.currentTime;\n\n    } else {\n      return 0;\n\n    }\n  },\n\n  _duration: function(sound) {\n    if (sound === this.activeSound) {\n      if (sound.url !== this.activeAudio.src) {\n        log('trying to get current song duration, but it is not in the active audio player');\n      }\n      var d = this.activeAudio.duration;\n      return isNaN(d) ? 0 : d;\n\n    } else {\n      return 0;\n\n    }\n  },\n\n  // set the volume (0-100)\n  setVolume: function(value) {\n    if (typeof value !== 'undefined') {\n      this.vol = value;\n\n      if (this.activeSound) {\n        this.activeAudio.volume = song.gainAdjustedVolume(value);\n      }\n\n      this.trigger('volume', value);\n    }\n\n    return this.vol;\n  }\n\n};\n\n// add events to speaker class\n_.extend(Speaker.prototype, Events);\n\nvar speaker = null;\n\n// only export a single speaker\nmodule.exports = function(options, onReady) {\n  if (speaker === null) {\n    speaker = new Speaker(options);\n  }\n\n  onReady(speaker.preferred);\n\n  return speaker;\n};\n\n","/*global module:false */\n\nvar util = { };\n\nutil.addProtocol = function(url, secure) {\n  // handle '//somewhere.com/' url's\n  if (url.slice(0, 2) === '//') {\n    if (secure === true) {\n      url = 'https:' + url;\n\n    } else if (secure === false) {\n      url = 'http:' + url;\n    \n    } else if (window.location.protocol.substr(0, 4) === 'http') {\n      url = window.location.protocol + url;\n\n    } else {\n      url = 'http';\n    }\n  }\n  \n  return url;\n};\n\nmodule.exports = util;\n\n","module.exports=\"1.10.0-native\"\n"]}